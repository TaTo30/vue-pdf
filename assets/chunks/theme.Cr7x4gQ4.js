const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/chunks/VPLocalSearchBox.BlAXwD09.js","assets/chunks/framework.Dt2e2UU3.js"])))=>i.map(i=>d[i]);
import{d as E,o as m,c as e,r as X,n as tl,a as wl,t as K,b as x,w as B,e as k,T as Id,_ as r,u as YF,i as BF,f as uF,g as Xl,h as g,j as J,k as M,p as Ml,l as Gl,m as nU,q as ed,s as D,v as Yl,x as EU,y as Pl,z as $U,A as Ed,B as pF,C as oF,D as VU,F as dl,E as Jl,G as GU,H as ld,I as L,J as ql,K as LZ,L as Ud,M as Hl,N as dd,O as yF,P as Cd,Q as Td,R as LF,S as zZ,U as Zd,V as zF,W as kF,X as DF,Y as kZ,Z as DZ,$ as IF,a0 as EF,a1 as CF,a2 as IZ,a3 as wF,a4 as xF,a5 as Ol,a6 as jF,a7 as LU,a8 as OF,a9 as tU,aa as rF,ab as VZ}from"./framework.Dt2e2UU3.js";const gF=E({__name:"VPBadge",props:{text:{},type:{default:"tip"}},setup(c){return(l,U)=>(m(),e("span",{class:tl(["VPBadge",l.type])},[X(l.$slots,"default",{},()=>[wl(K(l.text),1)])],2))}}),KF={key:0,class:"VPBackdrop"},HF=E({__name:"VPBackdrop",props:{show:{type:Boolean}},setup(c){return(l,U)=>(m(),x(Id,{name:"fade"},{default:B(()=>[l.show?(m(),e("div",KF)):k("",!0)]),_:1}))}}),vF=r(HF,[["__scopeId","data-v-c79a1216"]]),A=YF;function PF(c,l){let U,d=!1;return()=>{U&&clearTimeout(U),d?U=setTimeout(c,l):(c(),(d=!0)&&setTimeout(()=>d=!1,l))}}function Sd(c){return/^\//.test(c)?c:`/${c}`}function wd(c){const{pathname:l,search:U,hash:d,protocol:Z}=new URL(c,"http://a.com");if(BF(c)||c.startsWith("#")||!Z.startsWith("http")||!uF(l))return c;const{site:F}=A(),t=l.endsWith("/")||l.endsWith(".html")?c:c.replace(/(?:(^\.+)\/)?.*$/,`$1${l.replace(/(\.md)?$/,F.value.cleanUrls?"":".html")}${U}${d}`);return Xl(t)}function CU({correspondingLink:c=!1}={}){const{site:l,localeIndex:U,page:d,theme:Z,hash:F}=A(),t=g(()=>({label:l.value.locales[U.value]?.label,link:l.value.locales[U.value]?.link||(U.value==="root"?"/":`/${U.value}/`)}));return{localeLinks:g(()=>Object.entries(l.value.locales).flatMap(([V,W])=>t.value.label===W.label?[]:{text:W.label,link:fF(W.link||(V==="root"?"/":`/${V}/`),Z.value.i18nRouting!==!1&&c,d.value.relativePath.slice(t.value.link.length-1),!l.value.cleanUrls)+F.value})),currentLang:t}}function fF(c,l,U,d){return l?c.replace(/\/$/,"")+Sd(U.replace(/(^|\/)index\.md$/,"$1").replace(/\.md$/,d?".html":"")):c}const AF=c=>(Ml("data-v-d6be1790"),c=c(),Gl(),c),_F={class:"NotFound"},qF={class:"code"},$F={class:"title"},l0=AF(()=>J("div",{class:"divider"},null,-1)),U0={class:"quote"},d0={class:"action"},Z0=["href","aria-label"],F0=E({__name:"NotFound",setup(c){const{theme:l}=A(),{currentLang:U}=CU();return(d,Z)=>(m(),e("div",_F,[J("p",qF,K(M(l).notFound?.code??"404"),1),J("h1",$F,K(M(l).notFound?.title??"PAGE NOT FOUND"),1),l0,J("blockquote",U0,K(M(l).notFound?.quote??"But if you don't change your direction, and if you keep looking, you may end up where you are heading."),1),J("div",d0,[J("a",{class:"link",href:M(Xl)(M(U).link),"aria-label":M(l).notFound?.linkLabel??"go to home"},K(M(l).notFound?.linkText??"Take me home"),9,Z0)])]))}}),t0=r(F0,[["__scopeId","data-v-d6be1790"]]);function EZ(c,l){if(Array.isArray(c))return fU(c);if(c==null)return[];l=Sd(l);const U=Object.keys(c).sort((Z,F)=>F.split("/").length-Z.split("/").length).find(Z=>l.startsWith(Sd(Z))),d=U?c[U]:[];return Array.isArray(d)?fU(d):fU(d.items,d.base)}function Q0(c){const l=[];let U=0;for(const d in c){const Z=c[d];if(Z.items){U=l.push(Z);continue}l[U]||l.push({items:[]}),l[U].items.push(Z)}return l}function c0(c){const l=[];function U(d){for(const Z of d)Z.text&&Z.link&&l.push({text:Z.text,link:Z.link,docFooterText:Z.docFooterText}),Z.items&&U(Z.items)}return U(c),l}function Xd(c,l){return Array.isArray(l)?l.some(U=>Xd(c,U)):nU(c,l.link)?!0:l.items?Xd(c,l.items):!1}function fU(c,l){return[...c].map(U=>{const d={...U},Z=d.base||l;return Z&&d.link&&(d.link=Z+d.link),d.items&&(d.items=fU(d.items,Z)),d})}function FU(){const{frontmatter:c,page:l,theme:U}=A(),d=ed("(min-width: 960px)"),Z=D(!1),F=g(()=>{const b=U.value.sidebar,i=l.value.relativePath;return b?EZ(b,i):[]}),t=D(F.value);Yl(F,(b,i)=>{JSON.stringify(b)!==JSON.stringify(i)&&(t.value=F.value)});const Q=g(()=>c.value.sidebar!==!1&&t.value.length>0&&c.value.layout!=="home"),V=g(()=>W?c.value.aside==null?U.value.aside==="left":c.value.aside==="left":!1),W=g(()=>c.value.layout==="home"?!1:c.value.aside!=null?!!c.value.aside:U.value.aside!==!1),R=g(()=>Q.value&&d.value),N=g(()=>Q.value?Q0(t.value):[]);function n(){Z.value=!0}function s(){Z.value=!1}function a(){Z.value?s():n()}return{isOpen:Z,sidebar:t,sidebarGroups:N,hasSidebar:Q,hasAside:W,leftAside:V,isSidebarEnabled:R,open:n,close:s,toggle:a}}function V0(c,l){let U;EU(()=>{U=c.value?document.activeElement:void 0}),Pl(()=>{window.addEventListener("keyup",d)}),$U(()=>{window.removeEventListener("keyup",d)});function d(Z){Z.key==="Escape"&&c.value&&(l(),U?.focus())}}function W0(c){const{page:l,hash:U}=A(),d=D(!1),Z=g(()=>c.value.collapsed!=null),F=g(()=>!!c.value.link),t=D(!1),Q=()=>{t.value=nU(l.value.relativePath,c.value.link)};Yl([l,c,U],Q),Pl(Q);const V=g(()=>t.value?!0:c.value.items?Xd(l.value.relativePath,c.value.items):!1),W=g(()=>!!(c.value.items&&c.value.items.length));EU(()=>{d.value=!!(Z.value&&c.value.collapsed)}),Ed(()=>{(t.value||V.value)&&(d.value=!1)});function R(){Z.value&&(d.value=!d.value)}return{collapsed:d,collapsible:Z,isLink:F,isActiveLink:t,hasActiveLink:V,hasChildren:W,toggle:R}}function R0(){const{hasSidebar:c}=FU(),l=ed("(min-width: 960px)"),U=ed("(min-width: 1280px)");return{isAsideEnabled:g(()=>!U.value&&!l.value?!1:c.value?U.value:l.value)}}const Yd=[];function CZ(c){return typeof c.outline=="object"&&!Array.isArray(c.outline)&&c.outline.label||c.outlineTitle||"On this page"}function xd(c){const l=[...document.querySelectorAll(".VPDoc :where(h1,h2,h3,h4,h5,h6)")].filter(U=>U.id&&U.hasChildNodes()).map(U=>{const d=Number(U.tagName[1]);return{element:U,title:N0(U),link:"#"+U.id,level:d}});return n0(l,c)}function N0(c){let l="";for(const U of c.childNodes)if(U.nodeType===1){if(U.classList.contains("VPBadge")||U.classList.contains("header-anchor")||U.classList.contains("ignore-header"))continue;l+=U.textContent}else U.nodeType===3&&(l+=U.textContent);return l.trim()}function n0(c,l){if(l===!1)return[];const U=(typeof l=="object"&&!Array.isArray(l)?l.level:l)||2,[d,Z]=typeof U=="number"?[U,U]:U==="deep"?[2,6]:U;c=c.filter(t=>t.level>=d&&t.level<=Z),Yd.length=0;for(const{element:t,link:Q}of c)Yd.push({element:t,link:Q});const F=[];l:for(let t=0;t<c.length;t++){const Q=c[t];if(t===0)F.push(Q);else{for(let V=t-1;V>=0;V--){const W=c[V];if(W.level<Q.level){(W.children||(W.children=[])).push(Q);continue l}}F.push(Q)}}return F}function s0(c,l){const{isAsideEnabled:U}=R0(),d=PF(F,100);let Z=null;Pl(()=>{requestAnimationFrame(F),window.addEventListener("scroll",d)}),pF(()=>{t(location.hash)}),$U(()=>{window.removeEventListener("scroll",d)});function F(){if(!U.value)return;const Q=window.scrollY,V=window.innerHeight,W=document.body.offsetHeight,R=Math.abs(Q+V-W)<1,N=Yd.map(({element:s,link:a})=>({link:a,top:a0(s)})).filter(({top:s})=>!Number.isNaN(s)).sort((s,a)=>s.top-a.top);if(!N.length){t(null);return}if(Q<1){t(null);return}if(R){t(N[N.length-1].link);return}let n=null;for(const{link:s,top:a}of N){if(a>Q+oF()+4)break;n=s}t(n)}function t(Q){Z&&Z.classList.remove("active"),Q==null?Z=null:Z=c.value.querySelector(`a[href="${decodeURIComponent(Q)}"]`);const V=Z;V?(V.classList.add("active"),l.value.style.top=V.offsetTop+39+"px",l.value.style.opacity="1"):(l.value.style.top="33px",l.value.style.opacity="0")}}function a0(c){let l=0;for(;c!==document.body;){if(c===null)return NaN;l+=c.offsetTop,c=c.offsetParent}return l}const b0=["href","title"],i0=E({__name:"VPDocOutlineItem",props:{headers:{},root:{type:Boolean}},setup(c){function l({target:U}){const d=U.href.split("#")[1];document.getElementById(decodeURIComponent(d))?.focus({preventScroll:!0})}return(U,d)=>{const Z=VU("VPDocOutlineItem",!0);return m(),e("ul",{class:tl(["VPDocOutlineItem",U.root?"root":"nested"])},[(m(!0),e(dl,null,Jl(U.headers,({children:F,link:t,title:Q})=>(m(),e("li",null,[J("a",{class:"outline-link",href:t,onClick:l,title:Q},K(Q),9,b0),F?.length?(m(),x(Z,{key:0,headers:F},null,8,["headers"])):k("",!0)]))),256))],2)}}}),wZ=r(i0,[["__scopeId","data-v-b933a997"]]),h0={class:"content"},m0={"aria-level":"2",class:"outline-title",id:"doc-outline-aria-label",role:"heading"},J0=E({__name:"VPDocAsideOutline",setup(c){const{frontmatter:l,theme:U}=A(),d=GU([]);ld(()=>{d.value=xd(l.value.outline??U.value.outline)});const Z=D(),F=D();return s0(Z,F),(t,Q)=>(m(),e("nav",{"aria-labelledby":"doc-outline-aria-label",class:tl(["VPDocAsideOutline",{"has-outline":d.value.length>0}]),ref_key:"container",ref:Z},[J("div",h0,[J("div",{class:"outline-marker",ref_key:"marker",ref:F},null,512),J("div",m0,K(M(CZ)(M(U))),1),L(wZ,{headers:d.value,root:!0},null,8,["headers"])])],2))}}),M0=r(J0,[["__scopeId","data-v-a5bbad30"]]),G0={class:"VPDocAsideCarbonAds"},e0=E({__name:"VPDocAsideCarbonAds",props:{carbonAds:{}},setup(c){const l=()=>null;return(U,d)=>(m(),e("div",G0,[L(M(l),{"carbon-ads":U.carbonAds},null,8,["carbon-ads"])]))}}),T0=c=>(Ml("data-v-3f215769"),c=c(),Gl(),c),S0={class:"VPDocAside"},X0=T0(()=>J("div",{class:"spacer"},null,-1)),Y0=E({__name:"VPDocAside",setup(c){const{theme:l}=A();return(U,d)=>(m(),e("div",S0,[X(U.$slots,"aside-top",{},void 0,!0),X(U.$slots,"aside-outline-before",{},void 0,!0),L(M0),X(U.$slots,"aside-outline-after",{},void 0,!0),X0,X(U.$slots,"aside-ads-before",{},void 0,!0),M(l).carbonAds?(m(),x(e0,{key:0,"carbon-ads":M(l).carbonAds},null,8,["carbon-ads"])):k("",!0),X(U.$slots,"aside-ads-after",{},void 0,!0),X(U.$slots,"aside-bottom",{},void 0,!0)]))}}),B0=r(Y0,[["__scopeId","data-v-3f215769"]]);function u0(){const{theme:c,page:l}=A();return g(()=>{const{text:U="Edit this page",pattern:d=""}=c.value.editLink||{};let Z;return typeof d=="function"?Z=d(l.value):Z=d.replace(/:path/g,l.value.filePath),{url:Z,text:U}})}function p0(){const{page:c,theme:l,frontmatter:U}=A();return g(()=>{const d=EZ(l.value.sidebar,c.value.relativePath),Z=c0(d),F=o0(Z,W=>W.link.replace(/[?#].*$/,"")),t=F.findIndex(W=>nU(c.value.relativePath,W.link)),Q=l.value.docFooter?.prev===!1&&!U.value.prev||U.value.prev===!1,V=l.value.docFooter?.next===!1&&!U.value.next||U.value.next===!1;return{prev:Q?void 0:{text:(typeof U.value.prev=="string"?U.value.prev:typeof U.value.prev=="object"?U.value.prev.text:void 0)??F[t-1]?.docFooterText??F[t-1]?.text,link:(typeof U.value.prev=="object"?U.value.prev.link:void 0)??F[t-1]?.link},next:V?void 0:{text:(typeof U.value.next=="string"?U.value.next:typeof U.value.next=="object"?U.value.next.text:void 0)??F[t+1]?.docFooterText??F[t+1]?.text,link:(typeof U.value.next=="object"?U.value.next.link:void 0)??F[t+1]?.link}}})}function o0(c,l){const U=new Set;return c.filter(d=>{const Z=l(d);return U.has(Z)?!1:U.add(Z)})}const $l=E({__name:"VPLink",props:{tag:{},href:{},noIcon:{type:Boolean},target:{},rel:{}},setup(c){const l=c,U=g(()=>l.tag??(l.href?"a":"span")),d=g(()=>l.href&&LZ.test(l.href)||l.target==="_blank");return(Z,F)=>(m(),x(ql(U.value),{class:tl(["VPLink",{link:Z.href,"vp-external-link-icon":d.value,"no-icon":Z.noIcon}]),href:Z.href?M(wd)(Z.href):void 0,target:Z.target??(d.value?"_blank":void 0),rel:Z.rel??(d.value?"noreferrer":void 0)},{default:B(()=>[X(Z.$slots,"default")]),_:3},8,["class","href","target","rel"]))}}),y0={class:"VPLastUpdated"},L0=["datetime"],z0=E({__name:"VPDocFooterLastUpdated",setup(c){const{theme:l,page:U,lang:d}=A(),Z=g(()=>new Date(U.value.lastUpdated)),F=g(()=>Z.value.toISOString()),t=D("");return Pl(()=>{EU(()=>{t.value=new Intl.DateTimeFormat(l.value.lastUpdated?.formatOptions?.forceLocale?d.value:void 0,l.value.lastUpdated?.formatOptions??{dateStyle:"short",timeStyle:"short"}).format(Z.value)})}),(Q,V)=>(m(),e("p",y0,[wl(K(M(l).lastUpdated?.text||M(l).lastUpdatedText||"Last updated")+": ",1),J("time",{datetime:F.value},K(t.value),9,L0)]))}}),k0=r(z0,[["__scopeId","data-v-e98dd255"]]),xZ=c=>(Ml("data-v-e257564d"),c=c(),Gl(),c),D0={key:0,class:"VPDocFooter"},I0={key:0,class:"edit-info"},E0={key:0,class:"edit-link"},C0=xZ(()=>J("span",{class:"vpi-square-pen edit-link-icon"},null,-1)),w0={key:1,class:"last-updated"},x0={key:1,class:"prev-next","aria-labelledby":"doc-footer-aria-label"},j0=xZ(()=>J("span",{class:"visually-hidden",id:"doc-footer-aria-label"},"Pager",-1)),O0={class:"pager"},r0=["innerHTML"],g0=["innerHTML"],K0={class:"pager"},H0=["innerHTML"],v0=["innerHTML"],P0=E({__name:"VPDocFooter",setup(c){const{theme:l,page:U,frontmatter:d}=A(),Z=u0(),F=p0(),t=g(()=>l.value.editLink&&d.value.editLink!==!1),Q=g(()=>U.value.lastUpdated),V=g(()=>t.value||Q.value||F.value.prev||F.value.next);return(W,R)=>V.value?(m(),e("footer",D0,[X(W.$slots,"doc-footer-before",{},void 0,!0),t.value||Q.value?(m(),e("div",I0,[t.value?(m(),e("div",E0,[L($l,{class:"edit-link-button",href:M(Z).url,"no-icon":!0},{default:B(()=>[C0,wl(" "+K(M(Z).text),1)]),_:1},8,["href"])])):k("",!0),Q.value?(m(),e("div",w0,[L(k0)])):k("",!0)])):k("",!0),M(F).prev?.link||M(F).next?.link?(m(),e("nav",x0,[j0,J("div",O0,[M(F).prev?.link?(m(),x($l,{key:0,class:"pager-link prev",href:M(F).prev.link},{default:B(()=>[J("span",{class:"desc",innerHTML:M(l).docFooter?.prev||"Previous page"},null,8,r0),J("span",{class:"title",innerHTML:M(F).prev.text},null,8,g0)]),_:1},8,["href"])):k("",!0)]),J("div",K0,[M(F).next?.link?(m(),x($l,{key:0,class:"pager-link next",href:M(F).next.link},{default:B(()=>[J("span",{class:"desc",innerHTML:M(l).docFooter?.next||"Next page"},null,8,H0),J("span",{class:"title",innerHTML:M(F).next.text},null,8,v0)]),_:1},8,["href"])):k("",!0)])])):k("",!0)])):k("",!0)}}),f0=r(P0,[["__scopeId","data-v-e257564d"]]),A0=c=>(Ml("data-v-39a288b8"),c=c(),Gl(),c),_0={class:"container"},q0=A0(()=>J("div",{class:"aside-curtain"},null,-1)),$0={class:"aside-container"},lt={class:"aside-content"},Ut={class:"content"},dt={class:"content-container"},Zt={class:"main"},Ft=E({__name:"VPDoc",setup(c){const{theme:l}=A(),U=Ud(),{hasSidebar:d,hasAside:Z,leftAside:F}=FU(),t=g(()=>U.path.replace(/[./]+/g,"_").replace(/_html$/,""));return(Q,V)=>{const W=VU("Content");return m(),e("div",{class:tl(["VPDoc",{"has-sidebar":M(d),"has-aside":M(Z)}])},[X(Q.$slots,"doc-top",{},void 0,!0),J("div",_0,[M(Z)?(m(),e("div",{key:0,class:tl(["aside",{"left-aside":M(F)}])},[q0,J("div",$0,[J("div",lt,[L(B0,null,{"aside-top":B(()=>[X(Q.$slots,"aside-top",{},void 0,!0)]),"aside-bottom":B(()=>[X(Q.$slots,"aside-bottom",{},void 0,!0)]),"aside-outline-before":B(()=>[X(Q.$slots,"aside-outline-before",{},void 0,!0)]),"aside-outline-after":B(()=>[X(Q.$slots,"aside-outline-after",{},void 0,!0)]),"aside-ads-before":B(()=>[X(Q.$slots,"aside-ads-before",{},void 0,!0)]),"aside-ads-after":B(()=>[X(Q.$slots,"aside-ads-after",{},void 0,!0)]),_:3})])])],2)):k("",!0),J("div",Ut,[J("div",dt,[X(Q.$slots,"doc-before",{},void 0,!0),J("main",Zt,[L(W,{class:tl(["vp-doc",[t.value,M(l).externalLinkIcon&&"external-link-icon-enabled"]])},null,8,["class"])]),L(f0,null,{"doc-footer-before":B(()=>[X(Q.$slots,"doc-footer-before",{},void 0,!0)]),_:3}),X(Q.$slots,"doc-after",{},void 0,!0)])])]),X(Q.$slots,"doc-bottom",{},void 0,!0)],2)}}}),tt=r(Ft,[["__scopeId","data-v-39a288b8"]]),Qt=E({__name:"VPButton",props:{tag:{},size:{default:"medium"},theme:{default:"brand"},text:{},href:{},target:{},rel:{}},setup(c){const l=c,U=g(()=>l.href&&LZ.test(l.href)),d=g(()=>l.tag||l.href?"a":"button");return(Z,F)=>(m(),x(ql(d.value),{class:tl(["VPButton",[Z.size,Z.theme]]),href:Z.href?M(wd)(Z.href):void 0,target:l.target??(U.value?"_blank":void 0),rel:l.rel??(U.value?"noreferrer":void 0)},{default:B(()=>[wl(K(Z.text),1)]),_:1},8,["class","href","target","rel"]))}}),ct=r(Qt,[["__scopeId","data-v-cad61b99"]]),Vt=["src","alt"],Wt=E({inheritAttrs:!1,__name:"VPImage",props:{image:{},alt:{}},setup(c){return(l,U)=>{const d=VU("VPImage",!0);return l.image?(m(),e(dl,{key:0},[typeof l.image=="string"||"src"in l.image?(m(),e("img",Hl({key:0,class:"VPImage"},typeof l.image=="string"?l.$attrs:{...l.image,...l.$attrs},{src:M(Xl)(typeof l.image=="string"?l.image:l.image.src),alt:l.alt??(typeof l.image=="string"?"":l.image.alt||"")}),null,16,Vt)):(m(),e(dl,{key:1},[L(d,Hl({class:"dark",image:l.image.dark,alt:l.image.alt},l.$attrs),null,16,["image","alt"]),L(d,Hl({class:"light",image:l.image.light,alt:l.image.alt},l.$attrs),null,16,["image","alt"])],64))],64)):k("",!0)}}}),_U=r(Wt,[["__scopeId","data-v-8426fc1a"]]),Rt=c=>(Ml("data-v-303bb580"),c=c(),Gl(),c),Nt={class:"container"},nt={class:"main"},st={key:0,class:"name"},at=["innerHTML"],bt=["innerHTML"],it=["innerHTML"],ht={key:0,class:"actions"},mt={key:0,class:"image"},Jt={class:"image-container"},Mt=Rt(()=>J("div",{class:"image-bg"},null,-1)),Gt=E({__name:"VPHero",props:{name:{},text:{},tagline:{},image:{},actions:{}},setup(c){const l=dd("hero-image-slot-exists");return(U,d)=>(m(),e("div",{class:tl(["VPHero",{"has-image":U.image||M(l)}])},[J("div",Nt,[J("div",nt,[X(U.$slots,"home-hero-info-before",{},void 0,!0),X(U.$slots,"home-hero-info",{},()=>[U.name?(m(),e("h1",st,[J("span",{innerHTML:U.name,class:"clip"},null,8,at)])):k("",!0),U.text?(m(),e("p",{key:1,innerHTML:U.text,class:"text"},null,8,bt)):k("",!0),U.tagline?(m(),e("p",{key:2,innerHTML:U.tagline,class:"tagline"},null,8,it)):k("",!0)],!0),X(U.$slots,"home-hero-info-after",{},void 0,!0),U.actions?(m(),e("div",ht,[(m(!0),e(dl,null,Jl(U.actions,Z=>(m(),e("div",{key:Z.link,class:"action"},[L(ct,{tag:"a",size:"medium",theme:Z.theme,text:Z.text,href:Z.link,target:Z.target,rel:Z.rel},null,8,["theme","text","href","target","rel"])]))),128))])):k("",!0),X(U.$slots,"home-hero-actions-after",{},void 0,!0)]),U.image||M(l)?(m(),e("div",mt,[J("div",Jt,[Mt,X(U.$slots,"home-hero-image",{},()=>[U.image?(m(),x(_U,{key:0,class:"image-src",image:U.image},null,8,["image"])):k("",!0)],!0)])])):k("",!0)])],2))}}),et=r(Gt,[["__scopeId","data-v-303bb580"]]),Tt=E({__name:"VPHomeHero",setup(c){const{frontmatter:l}=A();return(U,d)=>M(l).hero?(m(),x(et,{key:0,class:"VPHomeHero",name:M(l).hero.name,text:M(l).hero.text,tagline:M(l).hero.tagline,image:M(l).hero.image,actions:M(l).hero.actions},{"home-hero-info-before":B(()=>[X(U.$slots,"home-hero-info-before")]),"home-hero-info":B(()=>[X(U.$slots,"home-hero-info")]),"home-hero-info-after":B(()=>[X(U.$slots,"home-hero-info-after")]),"home-hero-actions-after":B(()=>[X(U.$slots,"home-hero-actions-after")]),"home-hero-image":B(()=>[X(U.$slots,"home-hero-image")]),_:3},8,["name","text","tagline","image","actions"])):k("",!0)}}),St=c=>(Ml("data-v-a3976bdc"),c=c(),Gl(),c),Xt={class:"box"},Yt={key:0,class:"icon"},Bt=["innerHTML"],ut=["innerHTML"],pt=["innerHTML"],ot={key:4,class:"link-text"},yt={class:"link-text-value"},Lt=St(()=>J("span",{class:"vpi-arrow-right link-text-icon"},null,-1)),zt=E({__name:"VPFeature",props:{icon:{},title:{},details:{},link:{},linkText:{},rel:{},target:{}},setup(c){return(l,U)=>(m(),x($l,{class:"VPFeature",href:l.link,rel:l.rel,target:l.target,"no-icon":!0,tag:l.link?"a":"div"},{default:B(()=>[J("article",Xt,[typeof l.icon=="object"&&l.icon.wrap?(m(),e("div",Yt,[L(_U,{image:l.icon,alt:l.icon.alt,height:l.icon.height||48,width:l.icon.width||48},null,8,["image","alt","height","width"])])):typeof l.icon=="object"?(m(),x(_U,{key:1,image:l.icon,alt:l.icon.alt,height:l.icon.height||48,width:l.icon.width||48},null,8,["image","alt","height","width"])):l.icon?(m(),e("div",{key:2,class:"icon",innerHTML:l.icon},null,8,Bt)):k("",!0),J("h2",{class:"title",innerHTML:l.title},null,8,ut),l.details?(m(),e("p",{key:3,class:"details",innerHTML:l.details},null,8,pt)):k("",!0),l.linkText?(m(),e("div",ot,[J("p",yt,[wl(K(l.linkText)+" ",1),Lt])])):k("",!0)])]),_:1},8,["href","rel","target","tag"]))}}),kt=r(zt,[["__scopeId","data-v-a3976bdc"]]),Dt={key:0,class:"VPFeatures"},It={class:"container"},Et={class:"items"},Ct=E({__name:"VPFeatures",props:{features:{}},setup(c){const l=c,U=g(()=>{const d=l.features.length;if(d){if(d===2)return"grid-2";if(d===3)return"grid-3";if(d%3===0)return"grid-6";if(d>3)return"grid-4"}else return});return(d,Z)=>d.features?(m(),e("div",Dt,[J("div",It,[J("div",Et,[(m(!0),e(dl,null,Jl(d.features,F=>(m(),e("div",{key:F.title,class:tl(["item",[U.value]])},[L(kt,{icon:F.icon,title:F.title,details:F.details,link:F.link,"link-text":F.linkText,rel:F.rel,target:F.target},null,8,["icon","title","details","link","link-text","rel","target"])],2))),128))])])])):k("",!0)}}),wt=r(Ct,[["__scopeId","data-v-a6181336"]]),xt=E({__name:"VPHomeFeatures",setup(c){const{frontmatter:l}=A();return(U,d)=>M(l).features?(m(),x(wt,{key:0,class:"VPHomeFeatures",features:M(l).features},null,8,["features"])):k("",!0)}}),jt=E({__name:"VPHomeContent",setup(c){const{width:l}=yF({initialWidth:0,includeScrollbar:!1});return(U,d)=>(m(),e("div",{class:"vp-doc container",style:Cd(M(l)?{"--vp-offset":`calc(50% - ${M(l)/2}px)`}:{})},[X(U.$slots,"default",{},void 0,!0)],4))}}),Ot=r(jt,[["__scopeId","data-v-8e2d4988"]]),rt={class:"VPHome"},gt=E({__name:"VPHome",setup(c){const{frontmatter:l}=A();return(U,d)=>{const Z=VU("Content");return m(),e("div",rt,[X(U.$slots,"home-hero-before",{},void 0,!0),L(Tt,null,{"home-hero-info-before":B(()=>[X(U.$slots,"home-hero-info-before",{},void 0,!0)]),"home-hero-info":B(()=>[X(U.$slots,"home-hero-info",{},void 0,!0)]),"home-hero-info-after":B(()=>[X(U.$slots,"home-hero-info-after",{},void 0,!0)]),"home-hero-actions-after":B(()=>[X(U.$slots,"home-hero-actions-after",{},void 0,!0)]),"home-hero-image":B(()=>[X(U.$slots,"home-hero-image",{},void 0,!0)]),_:3}),X(U.$slots,"home-hero-after",{},void 0,!0),X(U.$slots,"home-features-before",{},void 0,!0),L(xt),X(U.$slots,"home-features-after",{},void 0,!0),M(l).markdownStyles!==!1?(m(),x(Ot,{key:0},{default:B(()=>[L(Z)]),_:1})):(m(),x(Z,{key:1}))])}}}),Kt=r(gt,[["__scopeId","data-v-686f80a6"]]),Ht={},vt={class:"VPPage"};function Pt(c,l){const U=VU("Content");return m(),e("div",vt,[X(c.$slots,"page-top"),L(U),X(c.$slots,"page-bottom")])}const ft=r(Ht,[["render",Pt]]),At=E({__name:"VPContent",setup(c){const{page:l,frontmatter:U}=A(),{hasSidebar:d}=FU();return(Z,F)=>(m(),e("div",{class:tl(["VPContent",{"has-sidebar":M(d),"is-home":M(U).layout==="home"}]),id:"VPContent"},[M(l).isNotFound?X(Z.$slots,"not-found",{key:0},()=>[L(t0)],!0):M(U).layout==="page"?(m(),x(ft,{key:1},{"page-top":B(()=>[X(Z.$slots,"page-top",{},void 0,!0)]),"page-bottom":B(()=>[X(Z.$slots,"page-bottom",{},void 0,!0)]),_:3})):M(U).layout==="home"?(m(),x(Kt,{key:2},{"home-hero-before":B(()=>[X(Z.$slots,"home-hero-before",{},void 0,!0)]),"home-hero-info-before":B(()=>[X(Z.$slots,"home-hero-info-before",{},void 0,!0)]),"home-hero-info":B(()=>[X(Z.$slots,"home-hero-info",{},void 0,!0)]),"home-hero-info-after":B(()=>[X(Z.$slots,"home-hero-info-after",{},void 0,!0)]),"home-hero-actions-after":B(()=>[X(Z.$slots,"home-hero-actions-after",{},void 0,!0)]),"home-hero-image":B(()=>[X(Z.$slots,"home-hero-image",{},void 0,!0)]),"home-hero-after":B(()=>[X(Z.$slots,"home-hero-after",{},void 0,!0)]),"home-features-before":B(()=>[X(Z.$slots,"home-features-before",{},void 0,!0)]),"home-features-after":B(()=>[X(Z.$slots,"home-features-after",{},void 0,!0)]),_:3})):M(U).layout&&M(U).layout!=="doc"?(m(),x(ql(M(U).layout),{key:3})):(m(),x(tt,{key:4},{"doc-top":B(()=>[X(Z.$slots,"doc-top",{},void 0,!0)]),"doc-bottom":B(()=>[X(Z.$slots,"doc-bottom",{},void 0,!0)]),"doc-footer-before":B(()=>[X(Z.$slots,"doc-footer-before",{},void 0,!0)]),"doc-before":B(()=>[X(Z.$slots,"doc-before",{},void 0,!0)]),"doc-after":B(()=>[X(Z.$slots,"doc-after",{},void 0,!0)]),"aside-top":B(()=>[X(Z.$slots,"aside-top",{},void 0,!0)]),"aside-outline-before":B(()=>[X(Z.$slots,"aside-outline-before",{},void 0,!0)]),"aside-outline-after":B(()=>[X(Z.$slots,"aside-outline-after",{},void 0,!0)]),"aside-ads-before":B(()=>[X(Z.$slots,"aside-ads-before",{},void 0,!0)]),"aside-ads-after":B(()=>[X(Z.$slots,"aside-ads-after",{},void 0,!0)]),"aside-bottom":B(()=>[X(Z.$slots,"aside-bottom",{},void 0,!0)]),_:3}))],2))}}),_t=r(At,[["__scopeId","data-v-1428d186"]]),qt={class:"container"},$t=["innerHTML"],lQ=["innerHTML"],UQ=E({__name:"VPFooter",setup(c){const{theme:l,frontmatter:U}=A(),{hasSidebar:d}=FU();return(Z,F)=>M(l).footer&&M(U).footer!==!1?(m(),e("footer",{key:0,class:tl(["VPFooter",{"has-sidebar":M(d)}])},[J("div",qt,[M(l).footer.message?(m(),e("p",{key:0,class:"message",innerHTML:M(l).footer.message},null,8,$t)):k("",!0),M(l).footer.copyright?(m(),e("p",{key:1,class:"copyright",innerHTML:M(l).footer.copyright},null,8,lQ)):k("",!0)])],2)):k("",!0)}}),dQ=r(UQ,[["__scopeId","data-v-e315a0ad"]]);function ZQ(){const{theme:c,frontmatter:l}=A(),U=GU([]),d=g(()=>U.value.length>0);return ld(()=>{U.value=xd(l.value.outline??c.value.outline)}),{headers:U,hasLocalNav:d}}const FQ=c=>(Ml("data-v-17a5e62e"),c=c(),Gl(),c),tQ={class:"menu-text"},QQ=FQ(()=>J("span",{class:"vpi-chevron-right icon"},null,-1)),cQ={class:"header"},VQ={class:"outline"},WQ=E({__name:"VPLocalNavOutlineDropdown",props:{headers:{},navHeight:{}},setup(c){const l=c,{theme:U}=A(),d=D(!1),Z=D(0),F=D(),t=D();function Q(N){F.value?.contains(N.target)||(d.value=!1)}Yl(d,N=>{if(N){document.addEventListener("click",Q);return}document.removeEventListener("click",Q)}),Td("Escape",()=>{d.value=!1}),ld(()=>{d.value=!1});function V(){d.value=!d.value,Z.value=window.innerHeight+Math.min(window.scrollY-l.navHeight,0)}function W(N){N.target.classList.contains("outline-link")&&(t.value&&(t.value.style.transition="none"),LF(()=>{d.value=!1}))}function R(){d.value=!1,window.scrollTo({top:0,left:0,behavior:"smooth"})}return(N,n)=>(m(),e("div",{class:"VPLocalNavOutlineDropdown",style:Cd({"--vp-vh":Z.value+"px"}),ref_key:"main",ref:F},[N.headers.length>0?(m(),e("button",{key:0,onClick:V,class:tl({open:d.value})},[J("span",tQ,K(M(CZ)(M(U))),1),QQ],2)):(m(),e("button",{key:1,onClick:R},K(M(U).returnToTopLabel||"Return to top"),1)),L(Id,{name:"flyout"},{default:B(()=>[d.value?(m(),e("div",{key:0,ref_key:"items",ref:t,class:"items",onClick:W},[J("div",cQ,[J("a",{class:"top-link",href:"#",onClick:R},K(M(U).returnToTopLabel||"Return to top"),1)]),J("div",VQ,[L(wZ,{headers:N.headers},null,8,["headers"])])],512)):k("",!0)]),_:1})],4))}}),RQ=r(WQ,[["__scopeId","data-v-17a5e62e"]]),NQ=c=>(Ml("data-v-a6f0e41e"),c=c(),Gl(),c),nQ={class:"container"},sQ=["aria-expanded"],aQ=NQ(()=>J("span",{class:"vpi-align-left menu-icon"},null,-1)),bQ={class:"menu-text"},iQ=E({__name:"VPLocalNav",props:{open:{type:Boolean}},emits:["open-menu"],setup(c){const{theme:l,frontmatter:U}=A(),{hasSidebar:d}=FU(),{headers:Z}=ZQ(),{y:F}=zZ(),t=D(0);Pl(()=>{t.value=parseInt(getComputedStyle(document.documentElement).getPropertyValue("--vp-nav-height"))}),ld(()=>{Z.value=xd(U.value.outline??l.value.outline)});const Q=g(()=>Z.value.length===0),V=g(()=>Q.value&&!d.value),W=g(()=>({VPLocalNav:!0,"has-sidebar":d.value,empty:Q.value,fixed:V.value}));return(R,N)=>M(U).layout!=="home"&&(!V.value||M(F)>=t.value)?(m(),e("div",{key:0,class:tl(W.value)},[J("div",nQ,[M(d)?(m(),e("button",{key:0,class:"menu","aria-expanded":R.open,"aria-controls":"VPSidebarNav",onClick:N[0]||(N[0]=n=>R.$emit("open-menu"))},[aQ,J("span",bQ,K(M(l).sidebarMenuLabel||"Menu"),1)],8,sQ)):k("",!0),L(RQ,{headers:M(Z),navHeight:t.value},null,8,["headers","navHeight"])])],2)):k("",!0)}}),hQ=r(iQ,[["__scopeId","data-v-a6f0e41e"]]);function mQ(){const c=D(!1);function l(){c.value=!0,window.addEventListener("resize",Z)}function U(){c.value=!1,window.removeEventListener("resize",Z)}function d(){c.value?U():l()}function Z(){window.outerWidth>=768&&U()}const F=Ud();return Yl(()=>F.path,U),{isScreenOpen:c,openScreen:l,closeScreen:U,toggleScreen:d}}const JQ={},MQ={class:"VPSwitch",type:"button",role:"switch"},GQ={class:"check"},eQ={key:0,class:"icon"};function TQ(c,l){return m(),e("button",MQ,[J("span",GQ,[c.$slots.default?(m(),e("span",eQ,[X(c.$slots,"default",{},void 0,!0)])):k("",!0)])])}const SQ=r(JQ,[["render",TQ],["__scopeId","data-v-1d5665e3"]]),jZ=c=>(Ml("data-v-5337faa4"),c=c(),Gl(),c),XQ=jZ(()=>J("span",{class:"vpi-sun sun"},null,-1)),YQ=jZ(()=>J("span",{class:"vpi-moon moon"},null,-1)),BQ=E({__name:"VPSwitchAppearance",setup(c){const{isDark:l,theme:U}=A(),d=dd("toggle-appearance",()=>{l.value=!l.value}),Z=D("");return Ed(()=>{Z.value=l.value?U.value.lightModeSwitchTitle||"Switch to light theme":U.value.darkModeSwitchTitle||"Switch to dark theme"}),(F,t)=>(m(),x(SQ,{title:Z.value,class:"VPSwitchAppearance","aria-checked":M(l),onClick:M(d)},{default:B(()=>[XQ,YQ]),_:1},8,["title","aria-checked","onClick"]))}}),jd=r(BQ,[["__scopeId","data-v-5337faa4"]]),uQ={key:0,class:"VPNavBarAppearance"},pQ=E({__name:"VPNavBarAppearance",setup(c){const{site:l}=A();return(U,d)=>M(l).appearance&&M(l).appearance!=="force-dark"&&M(l).appearance!=="force-auto"?(m(),e("div",uQ,[L(jd)])):k("",!0)}}),oQ=r(pQ,[["__scopeId","data-v-6c893767"]]),Od=D();let OZ=!1,bd=0;function yQ(c){const l=D(!1);if(Zd){!OZ&&LQ(),bd++;const U=Yl(Od,d=>{d===c.el.value||c.el.value?.contains(d)?(l.value=!0,c.onFocus?.()):(l.value=!1,c.onBlur?.())});$U(()=>{U(),bd--,bd||zQ()})}return zF(l)}function LQ(){document.addEventListener("focusin",rZ),OZ=!0,Od.value=document.activeElement}function zQ(){document.removeEventListener("focusin",rZ)}function rZ(){Od.value=document.activeElement}const kQ={class:"VPMenuLink"},DQ=E({__name:"VPMenuLink",props:{item:{}},setup(c){const{page:l}=A();return(U,d)=>(m(),e("div",kQ,[L($l,{class:tl({active:M(nU)(M(l).relativePath,U.item.activeMatch||U.item.link,!!U.item.activeMatch)}),href:U.item.link,target:U.item.target,rel:U.item.rel},{default:B(()=>[wl(K(U.item.text),1)]),_:1},8,["class","href","target","rel"])]))}}),Fd=r(DQ,[["__scopeId","data-v-43f1e123"]]),IQ={class:"VPMenuGroup"},EQ={key:0,class:"title"},CQ=E({__name:"VPMenuGroup",props:{text:{},items:{}},setup(c){return(l,U)=>(m(),e("div",IQ,[l.text?(m(),e("p",EQ,K(l.text),1)):k("",!0),(m(!0),e(dl,null,Jl(l.items,d=>(m(),e(dl,null,["link"in d?(m(),x(Fd,{key:0,item:d},null,8,["item"])):k("",!0)],64))),256))]))}}),wQ=r(CQ,[["__scopeId","data-v-69e747b5"]]),xQ={class:"VPMenu"},jQ={key:0,class:"items"},OQ=E({__name:"VPMenu",props:{items:{}},setup(c){return(l,U)=>(m(),e("div",xQ,[l.items?(m(),e("div",jQ,[(m(!0),e(dl,null,Jl(l.items,d=>(m(),e(dl,{key:JSON.stringify(d)},["link"in d?(m(),x(Fd,{key:0,item:d},null,8,["item"])):"component"in d?(m(),x(ql(d.component),Hl({key:1,ref_for:!0},d.props),null,16)):(m(),x(wQ,{key:2,text:d.text,items:d.items},null,8,["text","items"]))],64))),128))])):k("",!0),X(l.$slots,"default",{},void 0,!0)]))}}),rQ=r(OQ,[["__scopeId","data-v-b98bc113"]]),gQ=c=>(Ml("data-v-b6c34ac9"),c=c(),Gl(),c),KQ=["aria-expanded","aria-label"],HQ={key:0,class:"text"},vQ=["innerHTML"],PQ=gQ(()=>J("span",{class:"vpi-chevron-down text-icon"},null,-1)),fQ={key:1,class:"vpi-more-horizontal icon"},AQ={class:"menu"},_Q=E({__name:"VPFlyout",props:{icon:{},button:{},label:{},items:{}},setup(c){const l=D(!1),U=D();yQ({el:U,onBlur:d});function d(){l.value=!1}return(Z,F)=>(m(),e("div",{class:"VPFlyout",ref_key:"el",ref:U,onMouseenter:F[1]||(F[1]=t=>l.value=!0),onMouseleave:F[2]||(F[2]=t=>l.value=!1)},[J("button",{type:"button",class:"button","aria-haspopup":"true","aria-expanded":l.value,"aria-label":Z.label,onClick:F[0]||(F[0]=t=>l.value=!l.value)},[Z.button||Z.icon?(m(),e("span",HQ,[Z.icon?(m(),e("span",{key:0,class:tl([Z.icon,"option-icon"])},null,2)):k("",!0),Z.button?(m(),e("span",{key:1,innerHTML:Z.button},null,8,vQ)):k("",!0),PQ])):(m(),e("span",fQ))],8,KQ),J("div",AQ,[L(rQ,{items:Z.items},{default:B(()=>[X(Z.$slots,"default",{},void 0,!0)]),_:3},8,["items"])])],544))}}),rd=r(_Q,[["__scopeId","data-v-b6c34ac9"]]),qQ=["href","aria-label","innerHTML"],$Q=E({__name:"VPSocialLink",props:{icon:{},link:{},ariaLabel:{}},setup(c){const l=c,U=g(()=>typeof l.icon=="object"?l.icon.svg:`<span class="vpi-social-${l.icon}" />`);return(d,Z)=>(m(),e("a",{class:"VPSocialLink no-icon",href:d.link,"aria-label":d.ariaLabel??(typeof d.icon=="string"?d.icon:""),target:"_blank",rel:"noopener",innerHTML:U.value},null,8,qQ))}}),lc=r($Q,[["__scopeId","data-v-eee4e7cb"]]),Uc={class:"VPSocialLinks"},dc=E({__name:"VPSocialLinks",props:{links:{}},setup(c){return(l,U)=>(m(),e("div",Uc,[(m(!0),e(dl,null,Jl(l.links,({link:d,icon:Z,ariaLabel:F})=>(m(),x(lc,{key:d,icon:Z,link:d,ariaLabel:F},null,8,["icon","link","ariaLabel"]))),128))]))}}),gd=r(dc,[["__scopeId","data-v-7bc22406"]]),Zc={key:0,class:"group translations"},Fc={class:"trans-title"},tc={key:1,class:"group"},Qc={class:"item appearance"},cc={class:"label"},Vc={class:"appearance-action"},Wc={key:2,class:"group"},Rc={class:"item social-links"},Nc=E({__name:"VPNavBarExtra",setup(c){const{site:l,theme:U}=A(),{localeLinks:d,currentLang:Z}=CU({correspondingLink:!0}),F=g(()=>d.value.length&&Z.value.label||l.value.appearance||U.value.socialLinks);return(t,Q)=>F.value?(m(),x(rd,{key:0,class:"VPNavBarExtra",label:"extra navigation"},{default:B(()=>[M(d).length&&M(Z).label?(m(),e("div",Zc,[J("p",Fc,K(M(Z).label),1),(m(!0),e(dl,null,Jl(M(d),V=>(m(),x(Fd,{key:V.link,item:V},null,8,["item"]))),128))])):k("",!0),M(l).appearance&&M(l).appearance!=="force-dark"&&M(l).appearance!=="force-auto"?(m(),e("div",tc,[J("div",Qc,[J("p",cc,K(M(U).darkModeSwitchLabel||"Appearance"),1),J("div",Vc,[L(jd)])])])):k("",!0),M(U).socialLinks?(m(),e("div",Wc,[J("div",Rc,[L(gd,{class:"social-links-list",links:M(U).socialLinks},null,8,["links"])])])):k("",!0)]),_:1})):k("",!0)}}),nc=r(Nc,[["__scopeId","data-v-bb2aa2f0"]]),sc=c=>(Ml("data-v-e5dd9c1c"),c=c(),Gl(),c),ac=["aria-expanded"],bc=sc(()=>J("span",{class:"container"},[J("span",{class:"top"}),J("span",{class:"middle"}),J("span",{class:"bottom"})],-1)),ic=[bc],hc=E({__name:"VPNavBarHamburger",props:{active:{type:Boolean}},emits:["click"],setup(c){return(l,U)=>(m(),e("button",{type:"button",class:tl(["VPNavBarHamburger",{active:l.active}]),"aria-label":"mobile navigation","aria-expanded":l.active,"aria-controls":"VPNavScreen",onClick:U[0]||(U[0]=d=>l.$emit("click"))},ic,10,ac))}}),mc=r(hc,[["__scopeId","data-v-e5dd9c1c"]]),Jc=["innerHTML"],Mc=E({__name:"VPNavBarMenuLink",props:{item:{}},setup(c){const{page:l}=A();return(U,d)=>(m(),x($l,{class:tl({VPNavBarMenuLink:!0,active:M(nU)(M(l).relativePath,U.item.activeMatch||U.item.link,!!U.item.activeMatch)}),href:U.item.link,noIcon:U.item.noIcon,target:U.item.target,rel:U.item.rel,tabindex:"0"},{default:B(()=>[J("span",{innerHTML:U.item.text},null,8,Jc)]),_:1},8,["class","href","noIcon","target","rel"]))}}),Gc=r(Mc,[["__scopeId","data-v-9c663999"]]),ec=E({__name:"VPNavBarMenuGroup",props:{item:{}},setup(c){const l=c,{page:U}=A(),d=F=>"component"in F?!1:"link"in F?nU(U.value.relativePath,F.link,!!l.item.activeMatch):F.items.some(d),Z=g(()=>d(l.item));return(F,t)=>(m(),x(rd,{class:tl({VPNavBarMenuGroup:!0,active:M(nU)(M(U).relativePath,F.item.activeMatch,!!F.item.activeMatch)||Z.value}),button:F.item.text,items:F.item.items},null,8,["class","button","items"]))}}),Tc=c=>(Ml("data-v-dc692963"),c=c(),Gl(),c),Sc={key:0,"aria-labelledby":"main-nav-aria-label",class:"VPNavBarMenu"},Xc=Tc(()=>J("span",{id:"main-nav-aria-label",class:"visually-hidden"}," Main Navigation ",-1)),Yc=E({__name:"VPNavBarMenu",setup(c){const{theme:l}=A();return(U,d)=>M(l).nav?(m(),e("nav",Sc,[Xc,(m(!0),e(dl,null,Jl(M(l).nav,Z=>(m(),e(dl,{key:JSON.stringify(Z)},["link"in Z?(m(),x(Gc,{key:0,item:Z},null,8,["item"])):"component"in Z?(m(),x(ql(Z.component),Hl({key:1,ref_for:!0},Z.props),null,16)):(m(),x(ec,{key:2,item:Z},null,8,["item"]))],64))),128))])):k("",!0)}}),Bc=r(Yc,[["__scopeId","data-v-dc692963"]]);function uc(c){const{localeIndex:l,theme:U}=A();function d(Z){const F=Z.split("."),t=U.value.search?.options,Q=t&&typeof t=="object",V=Q&&t.locales?.[l.value]?.translations||null,W=Q&&t.translations||null;let R=V,N=W,n=c;const s=F.pop();for(const a of F){let b=null;const i=n?.[a];i&&(b=n=i);const h=N?.[a];h&&(b=N=h);const G=R?.[a];G&&(b=R=G),i||(n=b),h||(N=b),G||(R=b)}return R?.[s]??N?.[s]??n?.[s]??""}return d}const pc=["aria-label"],oc={class:"DocSearch-Button-Container"},yc=J("span",{class:"vp-icon DocSearch-Search-Icon"},null,-1),Lc={class:"DocSearch-Button-Placeholder"},zc=J("span",{class:"DocSearch-Button-Keys"},[J("kbd",{class:"DocSearch-Button-Key"}),J("kbd",{class:"DocSearch-Button-Key"},"K")],-1),WZ=E({__name:"VPNavBarSearchButton",setup(c){const U=uc({button:{buttonText:"Search",buttonAriaLabel:"Search"}});return(d,Z)=>(m(),e("button",{type:"button",class:"DocSearch DocSearch-Button","aria-label":M(U)("button.buttonAriaLabel")},[J("span",oc,[yc,J("span",Lc,K(M(U)("button.buttonText")),1)]),zc],8,pc))}}),kc={class:"VPNavBarSearch"},Dc={id:"local-search"},Ic={key:1,id:"docsearch"},Ec=E({__name:"VPNavBarSearch",setup(c){const l=kF(()=>DF(()=>import("./VPLocalSearchBox.BlAXwD09.js"),__vite__mapDeps([0,1]))),U=()=>null,{theme:d}=A(),Z=D(!1),F=D(!1);Pl(()=>{});function t(){Z.value||(Z.value=!0,setTimeout(Q,16))}function Q(){const N=new Event("keydown");N.key="k",N.metaKey=!0,window.dispatchEvent(N),setTimeout(()=>{document.querySelector(".DocSearch-Modal")||Q()},16)}function V(N){const n=N.target,s=n.tagName;return n.isContentEditable||s==="INPUT"||s==="SELECT"||s==="TEXTAREA"}const W=D(!1);Td("k",N=>{(N.ctrlKey||N.metaKey)&&(N.preventDefault(),W.value=!0)}),Td("/",N=>{V(N)||(N.preventDefault(),W.value=!0)});const R="local";return(N,n)=>(m(),e("div",kc,[M(R)==="local"?(m(),e(dl,{key:0},[W.value?(m(),x(M(l),{key:0,onClose:n[0]||(n[0]=s=>W.value=!1)})):k("",!0),J("div",Dc,[L(WZ,{onClick:n[1]||(n[1]=s=>W.value=!0)})])],64)):M(R)==="algolia"?(m(),e(dl,{key:1},[Z.value?(m(),x(M(U),{key:0,algolia:M(d).search?.options??M(d).algolia,onVnodeBeforeMount:n[2]||(n[2]=s=>F.value=!0)},null,8,["algolia"])):k("",!0),F.value?k("",!0):(m(),e("div",Ic,[L(WZ,{onClick:t})]))],64)):k("",!0)]))}}),Cc=E({__name:"VPNavBarSocialLinks",setup(c){const{theme:l}=A();return(U,d)=>M(l).socialLinks?(m(),x(gd,{key:0,class:"VPNavBarSocialLinks",links:M(l).socialLinks},null,8,["links"])):k("",!0)}}),wc=r(Cc,[["__scopeId","data-v-0394ad82"]]),xc=["href","rel","target"],jc={key:1},Oc={key:2},rc=E({__name:"VPNavBarTitle",setup(c){const{site:l,theme:U}=A(),{hasSidebar:d}=FU(),{currentLang:Z}=CU(),F=g(()=>typeof U.value.logoLink=="string"?U.value.logoLink:U.value.logoLink?.link),t=g(()=>typeof U.value.logoLink=="string"?void 0:U.value.logoLink?.rel),Q=g(()=>typeof U.value.logoLink=="string"?void 0:U.value.logoLink?.target);return(V,W)=>(m(),e("div",{class:tl(["VPNavBarTitle",{"has-sidebar":M(d)}])},[J("a",{class:"title",href:F.value??M(wd)(M(Z).link),rel:t.value,target:Q.value},[X(V.$slots,"nav-bar-title-before",{},void 0,!0),M(U).logo?(m(),x(_U,{key:0,class:"logo",image:M(U).logo},null,8,["image"])):k("",!0),M(U).siteTitle?(m(),e("span",jc,K(M(U).siteTitle),1)):M(U).siteTitle===void 0?(m(),e("span",Oc,K(M(l).title),1)):k("",!0),X(V.$slots,"nav-bar-title-after",{},void 0,!0)],8,xc)],2))}}),gc=r(rc,[["__scopeId","data-v-ab179fa1"]]),Kc={class:"items"},Hc={class:"title"},vc=E({__name:"VPNavBarTranslations",setup(c){const{theme:l}=A(),{localeLinks:U,currentLang:d}=CU({correspondingLink:!0});return(Z,F)=>M(U).length&&M(d).label?(m(),x(rd,{key:0,class:"VPNavBarTranslations",icon:"vpi-languages",label:M(l).langMenuLabel||"Change language"},{default:B(()=>[J("div",Kc,[J("p",Hc,K(M(d).label),1),(m(!0),e(dl,null,Jl(M(U),t=>(m(),x(Fd,{key:t.link,item:t},null,8,["item"]))),128))])]),_:1},8,["label"])):k("",!0)}}),Pc=r(vc,[["__scopeId","data-v-88af2de4"]]),fc=c=>(Ml("data-v-6aa21345"),c=c(),Gl(),c),Ac={class:"wrapper"},_c={class:"container"},qc={class:"title"},$c={class:"content"},lV={class:"content-body"},UV=fc(()=>J("div",{class:"divider"},[J("div",{class:"divider-line"})],-1)),dV=E({__name:"VPNavBar",props:{isScreenOpen:{type:Boolean}},emits:["toggle-screen"],setup(c){const l=c,{y:U}=zZ(),{hasSidebar:d}=FU(),{frontmatter:Z}=A(),F=D({});return Ed(()=>{F.value={"has-sidebar":d.value,home:Z.value.layout==="home",top:U.value===0,"screen-open":l.isScreenOpen}}),(t,Q)=>(m(),e("div",{class:tl(["VPNavBar",F.value])},[J("div",Ac,[J("div",_c,[J("div",qc,[L(gc,null,{"nav-bar-title-before":B(()=>[X(t.$slots,"nav-bar-title-before",{},void 0,!0)]),"nav-bar-title-after":B(()=>[X(t.$slots,"nav-bar-title-after",{},void 0,!0)]),_:3})]),J("div",$c,[J("div",lV,[X(t.$slots,"nav-bar-content-before",{},void 0,!0),L(Ec,{class:"search"}),L(Bc,{class:"menu"}),L(Pc,{class:"translations"}),L(oQ,{class:"appearance"}),L(wc,{class:"social-links"}),L(nc,{class:"extra"}),X(t.$slots,"nav-bar-content-after",{},void 0,!0),L(mc,{class:"hamburger",active:t.isScreenOpen,onClick:Q[0]||(Q[0]=V=>t.$emit("toggle-screen"))},null,8,["active"])])])])]),UV],2))}}),ZV=r(dV,[["__scopeId","data-v-6aa21345"]]),FV={key:0,class:"VPNavScreenAppearance"},tV={class:"text"},QV=E({__name:"VPNavScreenAppearance",setup(c){const{site:l,theme:U}=A();return(d,Z)=>M(l).appearance&&M(l).appearance!=="force-dark"&&M(l).appearance!=="force-auto"?(m(),e("div",FV,[J("p",tV,K(M(U).darkModeSwitchLabel||"Appearance"),1),L(jd)])):k("",!0)}}),cV=r(QV,[["__scopeId","data-v-b44890b2"]]),VV=E({__name:"VPNavScreenMenuLink",props:{item:{}},setup(c){const l=dd("close-screen");return(U,d)=>(m(),x($l,{class:"VPNavScreenMenuLink",href:U.item.link,target:U.item.target,rel:U.item.rel,onClick:M(l),innerHTML:U.item.text},null,8,["href","target","rel","onClick","innerHTML"]))}}),WV=r(VV,[["__scopeId","data-v-7f31e1f6"]]),RV=E({__name:"VPNavScreenMenuGroupLink",props:{item:{}},setup(c){const l=dd("close-screen");return(U,d)=>(m(),x($l,{class:"VPNavScreenMenuGroupLink",href:U.item.link,target:U.item.target,rel:U.item.rel,onClick:M(l)},{default:B(()=>[wl(K(U.item.text),1)]),_:1},8,["href","target","rel","onClick"]))}}),gZ=r(RV,[["__scopeId","data-v-19976ae1"]]),NV={class:"VPNavScreenMenuGroupSection"},nV={key:0,class:"title"},sV=E({__name:"VPNavScreenMenuGroupSection",props:{text:{},items:{}},setup(c){return(l,U)=>(m(),e("div",NV,[l.text?(m(),e("p",nV,K(l.text),1)):k("",!0),(m(!0),e(dl,null,Jl(l.items,d=>(m(),x(gZ,{key:d.text,item:d},null,8,["item"]))),128))]))}}),aV=r(sV,[["__scopeId","data-v-8133b170"]]),bV=c=>(Ml("data-v-b9ab8c58"),c=c(),Gl(),c),iV=["aria-controls","aria-expanded"],hV=["innerHTML"],mV=bV(()=>J("span",{class:"vpi-plus button-icon"},null,-1)),JV=["id"],MV={key:0,class:"item"},GV={key:1,class:"item"},eV={key:2,class:"group"},TV=E({__name:"VPNavScreenMenuGroup",props:{text:{},items:{}},setup(c){const l=c,U=D(!1),d=g(()=>`NavScreenGroup-${l.text.replace(" ","-").toLowerCase()}`);function Z(){U.value=!U.value}return(F,t)=>(m(),e("div",{class:tl(["VPNavScreenMenuGroup",{open:U.value}])},[J("button",{class:"button","aria-controls":d.value,"aria-expanded":U.value,onClick:Z},[J("span",{class:"button-text",innerHTML:F.text},null,8,hV),mV],8,iV),J("div",{id:d.value,class:"items"},[(m(!0),e(dl,null,Jl(F.items,Q=>(m(),e(dl,{key:JSON.stringify(Q)},["link"in Q?(m(),e("div",MV,[L(gZ,{item:Q},null,8,["item"])])):"component"in Q?(m(),e("div",GV,[(m(),x(ql(Q.component),Hl({ref_for:!0},Q.props,{"screen-menu":""}),null,16))])):(m(),e("div",eV,[L(aV,{text:Q.text,items:Q.items},null,8,["text","items"])]))],64))),128))],8,JV)],2))}}),SV=r(TV,[["__scopeId","data-v-b9ab8c58"]]),XV={key:0,class:"VPNavScreenMenu"},YV=E({__name:"VPNavScreenMenu",setup(c){const{theme:l}=A();return(U,d)=>M(l).nav?(m(),e("nav",XV,[(m(!0),e(dl,null,Jl(M(l).nav,Z=>(m(),e(dl,{key:JSON.stringify(Z)},["link"in Z?(m(),x(WV,{key:0,item:Z},null,8,["item"])):"component"in Z?(m(),x(ql(Z.component),Hl({key:1,ref_for:!0},Z.props,{"screen-menu":""}),null,16)):(m(),x(SV,{key:2,text:Z.text||"",items:Z.items},null,8,["text","items"]))],64))),128))])):k("",!0)}}),BV=E({__name:"VPNavScreenSocialLinks",setup(c){const{theme:l}=A();return(U,d)=>M(l).socialLinks?(m(),x(gd,{key:0,class:"VPNavScreenSocialLinks",links:M(l).socialLinks},null,8,["links"])):k("",!0)}}),KZ=c=>(Ml("data-v-858fe1a4"),c=c(),Gl(),c),uV=KZ(()=>J("span",{class:"vpi-languages icon lang"},null,-1)),pV=KZ(()=>J("span",{class:"vpi-chevron-down icon chevron"},null,-1)),oV={class:"list"},yV=E({__name:"VPNavScreenTranslations",setup(c){const{localeLinks:l,currentLang:U}=CU({correspondingLink:!0}),d=D(!1);function Z(){d.value=!d.value}return(F,t)=>M(l).length&&M(U).label?(m(),e("div",{key:0,class:tl(["VPNavScreenTranslations",{open:d.value}])},[J("button",{class:"title",onClick:Z},[uV,wl(" "+K(M(U).label)+" ",1),pV]),J("ul",oV,[(m(!0),e(dl,null,Jl(M(l),Q=>(m(),e("li",{key:Q.link,class:"item"},[L($l,{class:"link",href:Q.link},{default:B(()=>[wl(K(Q.text),1)]),_:2},1032,["href"])]))),128))])],2)):k("",!0)}}),LV=r(yV,[["__scopeId","data-v-858fe1a4"]]),zV={class:"container"},kV=E({__name:"VPNavScreen",props:{open:{type:Boolean}},setup(c){const l=D(null),U=kZ(Zd?document.body:null);return(d,Z)=>(m(),x(Id,{name:"fade",onEnter:Z[0]||(Z[0]=F=>U.value=!0),onAfterLeave:Z[1]||(Z[1]=F=>U.value=!1)},{default:B(()=>[d.open?(m(),e("div",{key:0,class:"VPNavScreen",ref_key:"screen",ref:l,id:"VPNavScreen"},[J("div",zV,[X(d.$slots,"nav-screen-content-before",{},void 0,!0),L(YV,{class:"menu"}),L(LV,{class:"translations"}),L(cV,{class:"appearance"}),L(BV,{class:"social-links"}),X(d.$slots,"nav-screen-content-after",{},void 0,!0)])],512)):k("",!0)]),_:3}))}}),DV=r(kV,[["__scopeId","data-v-f2779853"]]),IV={key:0,class:"VPNav"},EV=E({__name:"VPNav",setup(c){const{isScreenOpen:l,closeScreen:U,toggleScreen:d}=mQ(),{frontmatter:Z}=A(),F=g(()=>Z.value.navbar!==!1);return DZ("close-screen",U),EU(()=>{Zd&&document.documentElement.classList.toggle("hide-nav",!F.value)}),(t,Q)=>F.value?(m(),e("header",IV,[L(ZV,{"is-screen-open":M(l),onToggleScreen:M(d)},{"nav-bar-title-before":B(()=>[X(t.$slots,"nav-bar-title-before",{},void 0,!0)]),"nav-bar-title-after":B(()=>[X(t.$slots,"nav-bar-title-after",{},void 0,!0)]),"nav-bar-content-before":B(()=>[X(t.$slots,"nav-bar-content-before",{},void 0,!0)]),"nav-bar-content-after":B(()=>[X(t.$slots,"nav-bar-content-after",{},void 0,!0)]),_:3},8,["is-screen-open","onToggleScreen"]),L(DV,{open:M(l)},{"nav-screen-content-before":B(()=>[X(t.$slots,"nav-screen-content-before",{},void 0,!0)]),"nav-screen-content-after":B(()=>[X(t.$slots,"nav-screen-content-after",{},void 0,!0)]),_:3},8,["open"])])):k("",!0)}}),CV=r(EV,[["__scopeId","data-v-ae24b3ad"]]),HZ=c=>(Ml("data-v-b7550ba0"),c=c(),Gl(),c),wV=["role","tabindex"],xV=HZ(()=>J("div",{class:"indicator"},null,-1)),jV=HZ(()=>J("span",{class:"vpi-chevron-right caret-icon"},null,-1)),OV=[jV],rV={key:1,class:"items"},gV=E({__name:"VPSidebarItem",props:{item:{},depth:{}},setup(c){const l=c,{collapsed:U,collapsible:d,isLink:Z,isActiveLink:F,hasActiveLink:t,hasChildren:Q,toggle:V}=W0(g(()=>l.item)),W=g(()=>Q.value?"section":"div"),R=g(()=>Z.value?"a":"div"),N=g(()=>Q.value?l.depth+2===7?"p":`h${l.depth+2}`:"p"),n=g(()=>Z.value?void 0:"button"),s=g(()=>[[`level-${l.depth}`],{collapsible:d.value},{collapsed:U.value},{"is-link":Z.value},{"is-active":F.value},{"has-active":t.value}]);function a(i){"key"in i&&i.key!=="Enter"||!l.item.link&&V()}function b(){l.item.link&&V()}return(i,h)=>{const G=VU("VPSidebarItem",!0);return m(),x(ql(W.value),{class:tl(["VPSidebarItem",s.value])},{default:B(()=>[i.item.text?(m(),e("div",Hl({key:0,class:"item",role:n.value},IF(i.item.items?{click:a,keydown:a}:{},!0),{tabindex:i.item.items&&0}),[xV,i.item.link?(m(),x($l,{key:0,tag:R.value,class:"link",href:i.item.link,rel:i.item.rel,target:i.item.target},{default:B(()=>[(m(),x(ql(N.value),{class:"text",innerHTML:i.item.text},null,8,["innerHTML"]))]),_:1},8,["tag","href","rel","target"])):(m(),x(ql(N.value),{key:1,class:"text",innerHTML:i.item.text},null,8,["innerHTML"])),i.item.collapsed!=null&&i.item.items&&i.item.items.length?(m(),e("div",{key:2,class:"caret",role:"button","aria-label":"toggle section",onClick:b,onKeydown:EF(b,["enter"]),tabindex:"0"},OV,32)):k("",!0)],16,wV)):k("",!0),i.item.items&&i.item.items.length?(m(),e("div",rV,[i.depth<5?(m(!0),e(dl,{key:0},Jl(i.item.items,S=>(m(),x(G,{key:S.text,item:S,depth:i.depth+1},null,8,["item","depth"]))),128)):k("",!0)])):k("",!0)]),_:1},8,["class"])}}}),KV=r(gV,[["__scopeId","data-v-b7550ba0"]]),HV=E({__name:"VPSidebarGroup",props:{items:{}},setup(c){const l=D(!0);let U=null;return Pl(()=>{U=setTimeout(()=>{U=null,l.value=!1},300)}),CF(()=>{U!=null&&(clearTimeout(U),U=null)}),(d,Z)=>(m(!0),e(dl,null,Jl(d.items,F=>(m(),e("div",{key:F.text,class:tl(["group",{"no-transition":l.value}])},[L(KV,{item:F,depth:0},null,8,["item"])],2))),128))}}),vV=r(HV,[["__scopeId","data-v-c40bc020"]]),vZ=c=>(Ml("data-v-319d5ca6"),c=c(),Gl(),c),PV=vZ(()=>J("div",{class:"curtain"},null,-1)),fV={class:"nav",id:"VPSidebarNav","aria-labelledby":"sidebar-aria-label",tabindex:"-1"},AV=vZ(()=>J("span",{class:"visually-hidden",id:"sidebar-aria-label"}," Sidebar Navigation ",-1)),_V=E({__name:"VPSidebar",props:{open:{type:Boolean}},setup(c){const{sidebarGroups:l,hasSidebar:U}=FU(),d=c,Z=D(null),F=kZ(Zd?document.body:null);Yl([d,Z],()=>{d.open?(F.value=!0,Z.value?.focus()):F.value=!1},{immediate:!0,flush:"post"});const t=D(0);return Yl(l,()=>{t.value+=1},{deep:!0}),(Q,V)=>M(U)?(m(),e("aside",{key:0,class:tl(["VPSidebar",{open:Q.open}]),ref_key:"navEl",ref:Z,onClick:V[0]||(V[0]=IZ(()=>{},["stop"]))},[PV,J("nav",fV,[AV,X(Q.$slots,"sidebar-nav-before",{},void 0,!0),(m(),x(vV,{items:M(l),key:t.value},null,8,["items"])),X(Q.$slots,"sidebar-nav-after",{},void 0,!0)])],2)):k("",!0)}}),qV=r(_V,[["__scopeId","data-v-319d5ca6"]]),$V=E({__name:"VPSkipLink",setup(c){const l=Ud(),U=D();Yl(()=>l.path,()=>U.value.focus());function d({target:Z}){const F=document.getElementById(decodeURIComponent(Z.hash).slice(1));if(F){const t=()=>{F.removeAttribute("tabindex"),F.removeEventListener("blur",t)};F.setAttribute("tabindex","-1"),F.addEventListener("blur",t),F.focus(),window.scrollTo(0,0)}}return(Z,F)=>(m(),e(dl,null,[J("span",{ref_key:"backToTop",ref:U,tabindex:"-1"},null,512),J("a",{href:"#VPContent",class:"VPSkipLink visually-hidden",onClick:d}," Skip to content ")],64))}}),lW=r($V,[["__scopeId","data-v-0f60ec36"]]),UW=E({__name:"Layout",setup(c){const{isOpen:l,open:U,close:d}=FU(),Z=Ud();Yl(()=>Z.path,d),V0(l,d);const{frontmatter:F}=A(),t=wF(),Q=g(()=>!!t["home-hero-image"]);return DZ("hero-image-slot-exists",Q),(V,W)=>{const R=VU("Content");return M(F).layout!==!1?(m(),e("div",{key:0,class:tl(["Layout",M(F).pageClass])},[X(V.$slots,"layout-top",{},void 0,!0),L(lW),L(vF,{class:"backdrop",show:M(l),onClick:M(d)},null,8,["show","onClick"]),L(CV,null,{"nav-bar-title-before":B(()=>[X(V.$slots,"nav-bar-title-before",{},void 0,!0)]),"nav-bar-title-after":B(()=>[X(V.$slots,"nav-bar-title-after",{},void 0,!0)]),"nav-bar-content-before":B(()=>[X(V.$slots,"nav-bar-content-before",{},void 0,!0)]),"nav-bar-content-after":B(()=>[X(V.$slots,"nav-bar-content-after",{},void 0,!0)]),"nav-screen-content-before":B(()=>[X(V.$slots,"nav-screen-content-before",{},void 0,!0)]),"nav-screen-content-after":B(()=>[X(V.$slots,"nav-screen-content-after",{},void 0,!0)]),_:3}),L(hQ,{open:M(l),onOpenMenu:M(U)},null,8,["open","onOpenMenu"]),L(qV,{open:M(l)},{"sidebar-nav-before":B(()=>[X(V.$slots,"sidebar-nav-before",{},void 0,!0)]),"sidebar-nav-after":B(()=>[X(V.$slots,"sidebar-nav-after",{},void 0,!0)]),_:3},8,["open"]),L(_t,null,{"page-top":B(()=>[X(V.$slots,"page-top",{},void 0,!0)]),"page-bottom":B(()=>[X(V.$slots,"page-bottom",{},void 0,!0)]),"not-found":B(()=>[X(V.$slots,"not-found",{},void 0,!0)]),"home-hero-before":B(()=>[X(V.$slots,"home-hero-before",{},void 0,!0)]),"home-hero-info-before":B(()=>[X(V.$slots,"home-hero-info-before",{},void 0,!0)]),"home-hero-info":B(()=>[X(V.$slots,"home-hero-info",{},void 0,!0)]),"home-hero-info-after":B(()=>[X(V.$slots,"home-hero-info-after",{},void 0,!0)]),"home-hero-actions-after":B(()=>[X(V.$slots,"home-hero-actions-after",{},void 0,!0)]),"home-hero-image":B(()=>[X(V.$slots,"home-hero-image",{},void 0,!0)]),"home-hero-after":B(()=>[X(V.$slots,"home-hero-after",{},void 0,!0)]),"home-features-before":B(()=>[X(V.$slots,"home-features-before",{},void 0,!0)]),"home-features-after":B(()=>[X(V.$slots,"home-features-after",{},void 0,!0)]),"doc-footer-before":B(()=>[X(V.$slots,"doc-footer-before",{},void 0,!0)]),"doc-before":B(()=>[X(V.$slots,"doc-before",{},void 0,!0)]),"doc-after":B(()=>[X(V.$slots,"doc-after",{},void 0,!0)]),"doc-top":B(()=>[X(V.$slots,"doc-top",{},void 0,!0)]),"doc-bottom":B(()=>[X(V.$slots,"doc-bottom",{},void 0,!0)]),"aside-top":B(()=>[X(V.$slots,"aside-top",{},void 0,!0)]),"aside-bottom":B(()=>[X(V.$slots,"aside-bottom",{},void 0,!0)]),"aside-outline-before":B(()=>[X(V.$slots,"aside-outline-before",{},void 0,!0)]),"aside-outline-after":B(()=>[X(V.$slots,"aside-outline-after",{},void 0,!0)]),"aside-ads-before":B(()=>[X(V.$slots,"aside-ads-before",{},void 0,!0)]),"aside-ads-after":B(()=>[X(V.$slots,"aside-ads-after",{},void 0,!0)]),_:3}),L(dQ),X(V.$slots,"layout-bottom",{},void 0,!0)],2)):(m(),x(R,{key:1}))}}}),dW=r(UW,[["__scopeId","data-v-5d98c3a5"]]),ZW={Layout:dW,enhanceApp:({app:c})=>{c.component("Badge",gF)}};var zU={};zU.d=(c,l)=>{for(var U in l)zU.o(l,U)&&!zU.o(c,U)&&Object.defineProperty(c,U,{enumerable:!0,get:l[U]})};zU.o=(c,l)=>Object.prototype.hasOwnProperty.call(c,l);var H=globalThis.pdfjsLib={};zU.d(H,{AbortException:()=>bU,AnnotationEditorLayer:()=>dU,AnnotationEditorParamsType:()=>Ul,AnnotationEditorType:()=>v,AnnotationEditorUIManager:()=>cU,AnnotationLayer:()=>qR,AnnotationMode:()=>QU,ColorPicker:()=>jl,DOMSVGFactory:()=>dZ,DrawLayer:()=>Bl,FeatureTest:()=>ol,GlobalWorkerOptions:()=>DU,ImageKind:()=>AU,InvalidPDFException:()=>fZ,MissingPDFException:()=>wU,OPS:()=>rl,OutputScale:()=>od,PDFDataRangeTransport:()=>sF,PDFDateString:()=>_Z,PDFWorker:()=>ml,PasswordResponses:()=>cW,PermissionFlag:()=>QW,PixelsPerInch:()=>SU,RenderingCancelledException:()=>vd,TextLayer:()=>ul,UnexpectedResponseException:()=>Vd,Util:()=>w,VerbosityLevel:()=>td,XfaLayer:()=>bF,build:()=>LR,createValidAbsoluteUrl:()=>NW,fetchData:()=>Rd,getDocument:()=>TR,getFilenameFromUrl:()=>MW,getPdfFilenameFromUrl:()=>GW,getXfaPageViewport:()=>eW,isDataScheme:()=>Nd,isPdfFile:()=>Pd,noContextMenu:()=>vl,normalizeUnicode:()=>hW,setLayerDimensions:()=>sU,shadow:()=>$,stopEvent:()=>gl,version:()=>yR});const pl=typeof process=="object"&&process+""=="[object process]"&&!process.versions.nw&&!(process.versions.electron&&process.type&&process.type!=="browser"),PZ=[1,0,0,1,0,0],Bd=[.001,0,0,.001,0,0],FW=1e7,id=1.35,Cl={ANY:1,DISPLAY:2,PRINT:4,SAVE:8,ANNOTATIONS_FORMS:16,ANNOTATIONS_STORAGE:32,ANNOTATIONS_DISABLE:64,IS_EDITING:128,OPLIST:256},QU={DISABLE:0,ENABLE:1,ENABLE_FORMS:2,ENABLE_STORAGE:3},tW="pdfjs_internal_editor_",v={DISABLE:-1,NONE:0,FREETEXT:3,HIGHLIGHT:9,STAMP:13,INK:15},Ul={RESIZE:1,CREATE:2,FREETEXT_SIZE:11,FREETEXT_COLOR:12,FREETEXT_OPACITY:13,INK_COLOR:21,INK_THICKNESS:22,INK_OPACITY:23,HIGHLIGHT_COLOR:31,HIGHLIGHT_DEFAULT_COLOR:32,HIGHLIGHT_THICKNESS:33,HIGHLIGHT_FREE:34,HIGHLIGHT_SHOW_ALL:35,DRAW_STEP:41},QW={PRINT:4,MODIFY_CONTENTS:8,COPY:16,MODIFY_ANNOTATIONS:32,FILL_INTERACTIVE_FORMS:256,COPY_FOR_ACCESSIBILITY:512,ASSEMBLE:1024,PRINT_HIGH_QUALITY:2048},Tl={FILL:0,STROKE:1,FILL_STROKE:2,INVISIBLE:3,FILL_ADD_TO_PATH:4,STROKE_ADD_TO_PATH:5,FILL_STROKE_ADD_TO_PATH:6,ADD_TO_PATH:7,FILL_STROKE_MASK:3,ADD_TO_PATH_FLAG:4},AU={GRAYSCALE_1BPP:1,RGB_24BPP:2,RGBA_32BPP:3},il={TEXT:1,LINK:2,FREETEXT:3,LINE:4,SQUARE:5,CIRCLE:6,POLYGON:7,POLYLINE:8,HIGHLIGHT:9,UNDERLINE:10,SQUIGGLY:11,STRIKEOUT:12,STAMP:13,CARET:14,INK:15,POPUP:16,FILEATTACHMENT:17,SOUND:18,MOVIE:19,WIDGET:20,SCREEN:21,PRINTERMARK:22,TRAPNET:23,WATERMARK:24,THREED:25,REDACT:26},YU={SOLID:1,DASHED:2,BEVELED:3,INSET:4,UNDERLINE:5},td={ERRORS:0,WARNINGS:1,INFOS:5},rl={dependency:1,setLineWidth:2,setLineCap:3,setLineJoin:4,setMiterLimit:5,setDash:6,setRenderingIntent:7,setFlatness:8,setGState:9,save:10,restore:11,transform:12,moveTo:13,lineTo:14,curveTo:15,curveTo2:16,curveTo3:17,closePath:18,rectangle:19,stroke:20,closeStroke:21,fill:22,eoFill:23,fillStroke:24,eoFillStroke:25,closeFillStroke:26,closeEOFillStroke:27,endPath:28,clip:29,eoClip:30,beginText:31,endText:32,setCharSpacing:33,setWordSpacing:34,setHScale:35,setLeading:36,setFont:37,setTextRenderingMode:38,setTextRise:39,moveText:40,setLeadingMoveText:41,setTextMatrix:42,nextLine:43,showText:44,showSpacedText:45,nextLineShowText:46,nextLineSetSpacingShowText:47,setCharWidth:48,setCharWidthAndBounds:49,setStrokeColorSpace:50,setFillColorSpace:51,setStrokeColor:52,setStrokeColorN:53,setFillColor:54,setFillColorN:55,setStrokeGray:56,setFillGray:57,setStrokeRGBColor:58,setFillRGBColor:59,setStrokeCMYKColor:60,setFillCMYKColor:61,shadingFill:62,beginInlineImage:63,beginImageData:64,endInlineImage:65,paintXObject:66,markPoint:67,markPointProps:68,beginMarkedContent:69,beginMarkedContentProps:70,endMarkedContent:71,beginCompat:72,endCompat:73,paintFormXObjectBegin:74,paintFormXObjectEnd:75,beginGroup:76,endGroup:77,beginAnnotation:80,endAnnotation:81,paintImageMaskXObject:83,paintImageMaskXObjectGroup:84,paintImageXObject:85,paintInlineImageXObject:86,paintInlineImageXObjectGroup:87,paintImageXObjectRepeat:88,paintImageMaskXObjectRepeat:89,paintSolidColorImageMask:90,constructPath:91,setStrokeTransparent:92,setFillTransparent:93},cW={NEED_PASSWORD:1,INCORRECT_PASSWORD:2};let Qd=td.WARNINGS;function VW(c){Number.isInteger(c)&&(Qd=c)}function WW(){return Qd}function cd(c){Qd>=td.INFOS&&console.log(`Info: ${c}`)}function f(c){Qd>=td.WARNINGS&&console.log(`Warning: ${c}`)}function Zl(c){throw new Error(c)}function al(c,l){c||Zl(l)}function RW(c){switch(c?.protocol){case"http:":case"https:":case"ftp:":case"mailto:":case"tel:":return!0;default:return!1}}function NW(c,l=null,U=null){if(!c)return null;try{if(U&&typeof c=="string"&&(U.addDefaultProtocol&&c.startsWith("www.")&&c.match(/\./g)?.length>=2&&(c=`http://${c}`),U.tryConvertEncoding))try{c=iW(c)}catch{}const d=l?new URL(c,l):new URL(c);if(RW(d))return d}catch{}return null}function $(c,l,U,d=!1){return Object.defineProperty(c,l,{value:U,enumerable:!d,configurable:!0,writable:!1}),U}const WU=function(){function l(U,d){this.message=U,this.name=d}return l.prototype=new Error,l.constructor=l,l}();class ud extends WU{constructor(l,U){super(l,"PasswordException"),this.code=U}}class pd extends WU{constructor(l,U){super(l,"UnknownErrorException"),this.details=U}}class fZ extends WU{constructor(l){super(l,"InvalidPDFException")}}class wU extends WU{constructor(l){super(l,"MissingPDFException")}}class Vd extends WU{constructor(l,U){super(l,"UnexpectedResponseException"),this.status=U}}class nW extends WU{constructor(l){super(l,"FormatError")}}class bU extends WU{constructor(l){super(l,"AbortException")}}function AZ(c){(typeof c!="object"||c?.length===void 0)&&Zl("Invalid argument for bytesToString");const l=c.length,U=8192;if(l<U)return String.fromCharCode.apply(null,c);const d=[];for(let Z=0;Z<l;Z+=U){const F=Math.min(Z+U,l),t=c.subarray(Z,F);d.push(String.fromCharCode.apply(null,t))}return d.join("")}function Wd(c){typeof c!="string"&&Zl("Invalid argument for stringToBytes");const l=c.length,U=new Uint8Array(l);for(let d=0;d<l;++d)U[d]=c.charCodeAt(d)&255;return U}function sW(c){return String.fromCharCode(c>>24&255,c>>16&255,c>>8&255,c&255)}function Kd(c){const l=Object.create(null);for(const[U,d]of c)l[U]=d;return l}function aW(){const c=new Uint8Array(4);return c[0]=1,new Uint32Array(c.buffer,0,1)[0]===1}function bW(){try{return new Function(""),!0}catch{return!1}}class ol{static get isLittleEndian(){return $(this,"isLittleEndian",aW())}static get isEvalSupported(){return $(this,"isEvalSupported",bW())}static get isOffscreenCanvasSupported(){return $(this,"isOffscreenCanvasSupported",typeof OffscreenCanvas<"u")}static get isImageDecoderSupported(){return $(this,"isImageDecoderSupported",typeof ImageDecoder<"u")}static get platform(){return typeof navigator<"u"&&typeof navigator?.platform=="string"?$(this,"platform",{isMac:navigator.platform.includes("Mac"),isWindows:navigator.platform.includes("Win"),isFirefox:typeof navigator?.userAgent=="string"&&navigator.userAgent.includes("Firefox")}):$(this,"platform",{isMac:!1,isWindows:!1,isFirefox:!1})}static get isCSSRoundSupported(){return $(this,"isCSSRoundSupported",globalThis.CSS?.supports?.("width: round(1.5px, 1px)"))}}const hd=Array.from(Array(256).keys(),c=>c.toString(16).padStart(2,"0"));class w{static makeHexColor(l,U,d){return`#${hd[l]}${hd[U]}${hd[d]}`}static scaleMinMax(l,U){let d;l[0]?(l[0]<0&&(d=U[0],U[0]=U[2],U[2]=d),U[0]*=l[0],U[2]*=l[0],l[3]<0&&(d=U[1],U[1]=U[3],U[3]=d),U[1]*=l[3],U[3]*=l[3]):(d=U[0],U[0]=U[1],U[1]=d,d=U[2],U[2]=U[3],U[3]=d,l[1]<0&&(d=U[1],U[1]=U[3],U[3]=d),U[1]*=l[1],U[3]*=l[1],l[2]<0&&(d=U[0],U[0]=U[2],U[2]=d),U[0]*=l[2],U[2]*=l[2]),U[0]+=l[4],U[1]+=l[5],U[2]+=l[4],U[3]+=l[5]}static transform(l,U){return[l[0]*U[0]+l[2]*U[1],l[1]*U[0]+l[3]*U[1],l[0]*U[2]+l[2]*U[3],l[1]*U[2]+l[3]*U[3],l[0]*U[4]+l[2]*U[5]+l[4],l[1]*U[4]+l[3]*U[5]+l[5]]}static applyTransform(l,U){const d=l[0]*U[0]+l[1]*U[2]+U[4],Z=l[0]*U[1]+l[1]*U[3]+U[5];return[d,Z]}static applyInverseTransform(l,U){const d=U[0]*U[3]-U[1]*U[2],Z=(l[0]*U[3]-l[1]*U[2]+U[2]*U[5]-U[4]*U[3])/d,F=(-l[0]*U[1]+l[1]*U[0]+U[4]*U[1]-U[5]*U[0])/d;return[Z,F]}static getAxialAlignedBoundingBox(l,U){const d=this.applyTransform(l,U),Z=this.applyTransform(l.slice(2,4),U),F=this.applyTransform([l[0],l[3]],U),t=this.applyTransform([l[2],l[1]],U);return[Math.min(d[0],Z[0],F[0],t[0]),Math.min(d[1],Z[1],F[1],t[1]),Math.max(d[0],Z[0],F[0],t[0]),Math.max(d[1],Z[1],F[1],t[1])]}static inverseTransform(l){const U=l[0]*l[3]-l[1]*l[2];return[l[3]/U,-l[1]/U,-l[2]/U,l[0]/U,(l[2]*l[5]-l[4]*l[3])/U,(l[4]*l[1]-l[5]*l[0])/U]}static singularValueDecompose2dScale(l){const U=[l[0],l[2],l[1],l[3]],d=l[0]*U[0]+l[1]*U[2],Z=l[0]*U[1]+l[1]*U[3],F=l[2]*U[0]+l[3]*U[2],t=l[2]*U[1]+l[3]*U[3],Q=(d+t)/2,V=Math.sqrt((d+t)**2-4*(d*t-F*Z))/2,W=Q+V||1,R=Q-V||1;return[Math.sqrt(W),Math.sqrt(R)]}static normalizeRect(l){const U=l.slice(0);return l[0]>l[2]&&(U[0]=l[2],U[2]=l[0]),l[1]>l[3]&&(U[1]=l[3],U[3]=l[1]),U}static intersect(l,U){const d=Math.max(Math.min(l[0],l[2]),Math.min(U[0],U[2])),Z=Math.min(Math.max(l[0],l[2]),Math.max(U[0],U[2]));if(d>Z)return null;const F=Math.max(Math.min(l[1],l[3]),Math.min(U[1],U[3])),t=Math.min(Math.max(l[1],l[3]),Math.max(U[1],U[3]));return F>t?null:[d,F,Z,t]}static#l(l,U,d,Z,F,t,Q,V,W,R){if(W<=0||W>=1)return;const N=1-W,n=W*W,s=n*W,a=N*(N*(N*l+3*W*U)+3*n*d)+s*Z,b=N*(N*(N*F+3*W*t)+3*n*Q)+s*V;R[0]=Math.min(R[0],a),R[1]=Math.min(R[1],b),R[2]=Math.max(R[2],a),R[3]=Math.max(R[3],b)}static#U(l,U,d,Z,F,t,Q,V,W,R,N,n){if(Math.abs(W)<1e-12){Math.abs(R)>=1e-12&&this.#l(l,U,d,Z,F,t,Q,V,-N/R,n);return}const s=R**2-4*N*W;if(s<0)return;const a=Math.sqrt(s),b=2*W;this.#l(l,U,d,Z,F,t,Q,V,(-R+a)/b,n),this.#l(l,U,d,Z,F,t,Q,V,(-R-a)/b,n)}static bezierBoundingBox(l,U,d,Z,F,t,Q,V,W){return W?(W[0]=Math.min(W[0],l,Q),W[1]=Math.min(W[1],U,V),W[2]=Math.max(W[2],l,Q),W[3]=Math.max(W[3],U,V)):W=[Math.min(l,Q),Math.min(U,V),Math.max(l,Q),Math.max(U,V)],this.#U(l,d,F,Q,U,Z,t,V,3*(-l+3*(d-F)+Q),6*(l-2*d+F),3*(d-l),W),this.#U(l,d,F,Q,U,Z,t,V,3*(-U+3*(Z-t)+V),6*(U-2*Z+t),3*(Z-U),W),W}}function iW(c){return decodeURIComponent(escape(c))}let md=null,RZ=null;function hW(c){return md||(md=/([\u00a0\u00b5\u037e\u0eb3\u2000-\u200a\u202f\u2126\ufb00-\ufb04\ufb06\ufb20-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufba1\ufba4-\ufba9\ufbae-\ufbb1\ufbd3-\ufbdc\ufbde-\ufbe7\ufbea-\ufbf8\ufbfc-\ufbfd\ufc00-\ufc5d\ufc64-\ufcf1\ufcf5-\ufd3d\ufd88\ufdf4\ufdfa-\ufdfb\ufe71\ufe77\ufe79\ufe7b\ufe7d]+)|(\ufb05+)/gu,RZ=new Map([["ﬅ","ſt"]])),c.replaceAll(md,(l,U,d)=>U?U.normalize("NFKC"):RZ.get(d))}function mW(){if(typeof crypto.randomUUID=="function")return crypto.randomUUID();const c=new Uint8Array(32);return crypto.getRandomValues(c),AZ(c)}const Hd="pdfjs_internal_id_",lU={BEZIER_CURVE_TO:0,MOVE_TO:1,LINE_TO:2,QUADRATIC_CURVE_TO:3,RESTORE:4,SAVE:5,SCALE:6,TRANSFORM:7,TRANSLATE:8};function JW(c){return Uint8Array.prototype.toBase64?c.toBase64():btoa(AZ(c))}const UU="http://www.w3.org/2000/svg";class SU{static CSS=96;static PDF=72;static PDF_TO_CSS_UNITS=this.CSS/this.PDF}async function Rd(c,l="text"){if(oU(c,document.baseURI)){const U=await fetch(c);if(!U.ok)throw new Error(U.statusText);switch(l){case"arraybuffer":return U.arrayBuffer();case"blob":return U.blob();case"json":return U.json()}return U.text()}return new Promise((U,d)=>{const Z=new XMLHttpRequest;Z.open("GET",c,!0),Z.responseType=l,Z.onreadystatechange=()=>{if(Z.readyState===XMLHttpRequest.DONE){if(Z.status===200||Z.status===0){switch(l){case"arraybuffer":case"blob":case"json":U(Z.response);return}U(Z.responseText);return}d(new Error(Z.statusText))}},Z.send(null)})}class xU{constructor({viewBox:l,scale:U,rotation:d,offsetX:Z=0,offsetY:F=0,dontFlip:t=!1}){this.viewBox=l,this.scale=U,this.rotation=d,this.offsetX=Z,this.offsetY=F;const Q=(l[2]+l[0])/2,V=(l[3]+l[1])/2;let W,R,N,n;switch(d%=360,d<0&&(d+=360),d){case 180:W=-1,R=0,N=0,n=1;break;case 90:W=0,R=1,N=1,n=0;break;case 270:W=0,R=-1,N=-1,n=0;break;case 0:W=1,R=0,N=0,n=-1;break;default:throw new Error("PageViewport: Invalid rotation, must be a multiple of 90 degrees.")}t&&(N=-N,n=-n);let s,a,b,i;W===0?(s=Math.abs(V-l[1])*U+Z,a=Math.abs(Q-l[0])*U+F,b=(l[3]-l[1])*U,i=(l[2]-l[0])*U):(s=Math.abs(Q-l[0])*U+Z,a=Math.abs(V-l[1])*U+F,b=(l[2]-l[0])*U,i=(l[3]-l[1])*U),this.transform=[W*U,R*U,N*U,n*U,s-W*U*Q-N*U*V,a-R*U*Q-n*U*V],this.width=b,this.height=i}get rawDims(){const{viewBox:l}=this;return $(this,"rawDims",{pageWidth:l[2]-l[0],pageHeight:l[3]-l[1],pageX:l[0],pageY:l[1]})}clone({scale:l=this.scale,rotation:U=this.rotation,offsetX:d=this.offsetX,offsetY:Z=this.offsetY,dontFlip:F=!1}={}){return new xU({viewBox:this.viewBox.slice(),scale:l,rotation:U,offsetX:d,offsetY:Z,dontFlip:F})}convertToViewportPoint(l,U){return w.applyTransform([l,U],this.transform)}convertToViewportRectangle(l){const U=w.applyTransform([l[0],l[1]],this.transform),d=w.applyTransform([l[2],l[3]],this.transform);return[U[0],U[1],d[0],d[1]]}convertToPdfPoint(l,U){return w.applyInverseTransform([l,U],this.transform)}}class vd extends WU{constructor(l,U=0){super(l,"RenderingCancelledException"),this.extraDelay=U}}function Nd(c){const l=c.length;let U=0;for(;U<l&&c[U].trim()==="";)U++;return c.substring(U,U+5).toLowerCase()==="data:"}function Pd(c){return typeof c=="string"&&/\.pdf$/i.test(c)}function MW(c){return[c]=c.split(/[#?]/,1),c.substring(c.lastIndexOf("/")+1)}function GW(c,l="document.pdf"){if(typeof c!="string")return l;if(Nd(c))return f('getPdfFilenameFromUrl: ignore "data:"-URL for performance reasons.'),l;const U=/^(?:(?:[^:]+:)?\/\/[^/]+)?([^?#]*)(\?[^#]*)?(#.*)?$/,d=/[^/?#=]+\.pdf\b(?!.*\.pdf\b)/i,Z=U.exec(c);let F=d.exec(Z[1])||d.exec(Z[2])||d.exec(Z[3]);if(F&&(F=F[0],F.includes("%")))try{F=d.exec(decodeURIComponent(F))[0]}catch{}return F||l}class NZ{started=Object.create(null);times=[];time(l){l in this.started&&f(`Timer is already running for ${l}`),this.started[l]=Date.now()}timeEnd(l){l in this.started||f(`Timer has not been started for ${l}`),this.times.push({name:l,start:this.started[l],end:Date.now()}),delete this.started[l]}toString(){const l=[];let U=0;for(const{name:d}of this.times)U=Math.max(d.length,U);for(const{name:d,start:Z,end:F}of this.times)l.push(`${d.padEnd(U)} ${F-Z}ms
`);return l.join("")}}function oU(c,l){try{const{protocol:U}=l?new URL(c,l):new URL(c);return U==="http:"||U==="https:"}catch{return!1}}function vl(c){c.preventDefault()}function gl(c){c.preventDefault(),c.stopPropagation()}function nZ(c){console.log("Deprecated API usage: "+c)}class _Z{static#l;static toDateObject(l){if(!l||typeof l!="string")return null;this.#l||=new RegExp("^D:(\\d{4})(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?([Z|+|-])?(\\d{2})?'?(\\d{2})?'?");const U=this.#l.exec(l);if(!U)return null;const d=parseInt(U[1],10);let Z=parseInt(U[2],10);Z=Z>=1&&Z<=12?Z-1:0;let F=parseInt(U[3],10);F=F>=1&&F<=31?F:1;let t=parseInt(U[4],10);t=t>=0&&t<=23?t:0;let Q=parseInt(U[5],10);Q=Q>=0&&Q<=59?Q:0;let V=parseInt(U[6],10);V=V>=0&&V<=59?V:0;const W=U[7]||"Z";let R=parseInt(U[8],10);R=R>=0&&R<=23?R:0;let N=parseInt(U[9],10)||0;return N=N>=0&&N<=59?N:0,W==="-"?(t+=R,Q+=N):W==="+"&&(t-=R,Q-=N),new Date(Date.UTC(d,Z,F,t,Q,V))}}function eW(c,{scale:l=1,rotation:U=0}){const{width:d,height:Z}=c.attributes.style,F=[0,0,parseInt(d),parseInt(Z)];return new xU({viewBox:F,scale:l,rotation:U})}function fd(c){if(c.startsWith("#")){const l=parseInt(c.slice(1),16);return[(l&16711680)>>16,(l&65280)>>8,l&255]}return c.startsWith("rgb(")?c.slice(4,-1).split(",").map(l=>parseInt(l)):c.startsWith("rgba(")?c.slice(5,-1).split(",").map(l=>parseInt(l)).slice(0,3):(f(`Not a valid color format: "${c}"`),[0,0,0])}function TW(c){const l=document.createElement("span");l.style.visibility="hidden",document.body.append(l);for(const U of c.keys()){l.style.color=U;const d=window.getComputedStyle(l).color;c.set(U,fd(d))}l.remove()}function cl(c){const{a:l,b:U,c:d,d:Z,e:F,f:t}=c.getTransform();return[l,U,d,Z,F,t]}function fl(c){const{a:l,b:U,c:d,d:Z,e:F,f:t}=c.getTransform().invertSelf();return[l,U,d,Z,F,t]}function sU(c,l,U=!1,d=!0){if(l instanceof xU){const{pageWidth:Z,pageHeight:F}=l.rawDims,{style:t}=c,Q=ol.isCSSRoundSupported,V=`var(--scale-factor) * ${Z}px`,W=`var(--scale-factor) * ${F}px`,R=Q?`round(down, ${V}, var(--scale-round-x, 1px))`:`calc(${V})`,N=Q?`round(down, ${W}, var(--scale-round-y, 1px))`:`calc(${W})`;!U||l.rotation%180===0?(t.width=R,t.height=N):(t.width=N,t.height=R)}d&&c.setAttribute("data-main-rotation",l.rotation)}class od{constructor(){const l=window.devicePixelRatio||1;this.sx=l,this.sy=l}get scaled(){return this.sx!==1||this.sy!==1}get symmetric(){return this.sx===this.sy}}class kU{#l=null;#U=null;#d;#Z=null;#t=null;static#F=null;constructor(l){this.#d=l,kU.#F||=Object.freeze({freetext:"pdfjs-editor-remove-freetext-button",highlight:"pdfjs-editor-remove-highlight-button",ink:"pdfjs-editor-remove-ink-button",stamp:"pdfjs-editor-remove-stamp-button"})}render(){const l=this.#l=document.createElement("div");l.classList.add("editToolbar","hidden"),l.setAttribute("role","toolbar");const U=this.#d._uiManager._signal;l.addEventListener("contextmenu",vl,{signal:U}),l.addEventListener("pointerdown",kU.#W,{signal:U});const d=this.#Z=document.createElement("div");d.className="buttons",l.append(d);const Z=this.#d.toolbarPosition;if(Z){const{style:F}=l,t=this.#d._uiManager.direction==="ltr"?1-Z[0]:Z[0];F.insetInlineEnd=`${100*t}%`,F.top=`calc(${100*Z[1]}% + var(--editor-toolbar-vert-offset))`}return this.#N(),l}get div(){return this.#l}static#W(l){l.stopPropagation()}#c(l){this.#d._focusEventsAllowed=!1,gl(l)}#R(l){this.#d._focusEventsAllowed=!0,gl(l)}#V(l){const U=this.#d._uiManager._signal;l.addEventListener("focusin",this.#c.bind(this),{capture:!0,signal:U}),l.addEventListener("focusout",this.#R.bind(this),{capture:!0,signal:U}),l.addEventListener("contextmenu",vl,{signal:U})}hide(){this.#l.classList.add("hidden"),this.#U?.hideDropdown()}show(){this.#l.classList.remove("hidden"),this.#t?.shown()}#N(){const{editorType:l,_uiManager:U}=this.#d,d=document.createElement("button");d.className="delete",d.tabIndex=0,d.setAttribute("data-l10n-id",kU.#F[l]),this.#V(d),d.addEventListener("click",Z=>{U.delete()},{signal:U._signal}),this.#Z.append(d)}get#Q(){const l=document.createElement("div");return l.className="divider",l}async addAltText(l){const U=await l.render();this.#V(U),this.#Z.prepend(U,this.#Q),this.#t=l}addColorPicker(l){this.#U=l;const U=l.renderButton();this.#V(U),this.#Z.prepend(U,this.#Q)}remove(){this.#l.remove(),this.#U?.destroy(),this.#U=null}}class SW{#l=null;#U=null;#d;constructor(l){this.#d=l}#Z(){const l=this.#U=document.createElement("div");l.className="editToolbar",l.setAttribute("role","toolbar"),l.addEventListener("contextmenu",vl,{signal:this.#d._signal});const U=this.#l=document.createElement("div");return U.className="buttons",l.append(U),this.#F(),l}#t(l,U){let d=0,Z=0;for(const F of l){const t=F.y+F.height;if(t<d)continue;const Q=F.x+(U?F.width:0);if(t>d){Z=Q,d=t;continue}U?Q>Z&&(Z=Q):Q<Z&&(Z=Q)}return[U?1-Z:Z,d]}show(l,U,d){const[Z,F]=this.#t(U,d),{style:t}=this.#U||=this.#Z();l.append(this.#U),t.insetInlineEnd=`${100*Z}%`,t.top=`calc(${100*F}% + var(--editor-toolbar-vert-offset))`}hide(){this.#U.remove()}#F(){const l=document.createElement("button");l.className="highlightButton",l.tabIndex=0,l.setAttribute("data-l10n-id","pdfjs-highlight-floating-button1");const U=document.createElement("span");l.append(U),U.className="visuallyHidden",U.setAttribute("data-l10n-id","pdfjs-highlight-floating-button-label");const d=this.#d._signal;l.addEventListener("contextmenu",vl,{signal:d}),l.addEventListener("click",()=>{this.#d.highlightSelection("floating_button")},{signal:d}),this.#l.append(l)}}function qU(c,l,U){for(const d of U)l.addEventListener(d,c[d].bind(c))}class XW{#l=0;get id(){return`${tW}${this.#l++}`}}class Ad{#l=mW();#U=0;#d=null;static get _isSVGFittingCanvas(){const l='data:image/svg+xml;charset=UTF-8,<svg viewBox="0 0 1 1" width="1" height="1" xmlns="http://www.w3.org/2000/svg"><rect width="1" height="1" style="fill:red;"/></svg>',d=new OffscreenCanvas(1,3).getContext("2d",{willReadFrequently:!0}),Z=new Image;Z.src=l;const F=Z.decode().then(()=>(d.drawImage(Z,0,0,1,1,0,0,1,3),new Uint32Array(d.getImageData(0,0,1,1).data.buffer)[0]===0));return $(this,"_isSVGFittingCanvas",F)}async#Z(l,U){this.#d||=new Map;let d=this.#d.get(l);if(d===null)return null;if(d?.bitmap)return d.refCounter+=1,d;try{d||={bitmap:null,id:`image_${this.#l}_${this.#U++}`,refCounter:0,isSvg:!1};let Z;if(typeof U=="string"?(d.url=U,Z=await Rd(U,"blob")):U instanceof File?Z=d.file=U:U instanceof Blob&&(Z=U),Z.type==="image/svg+xml"){const F=Ad._isSVGFittingCanvas,t=new FileReader,Q=new Image,V=new Promise((W,R)=>{Q.onload=()=>{d.bitmap=Q,d.isSvg=!0,W()},t.onload=async()=>{const N=d.svgUrl=t.result;Q.src=await F?`${N}#svgView(preserveAspectRatio(none))`:N},Q.onerror=t.onerror=R});t.readAsDataURL(Z),await V}else d.bitmap=await createImageBitmap(Z);d.refCounter=1}catch(Z){f(Z),d=null}return this.#d.set(l,d),d&&this.#d.set(d.id,d),d}async getFromFile(l){const{lastModified:U,name:d,size:Z,type:F}=l;return this.#Z(`${U}_${d}_${Z}_${F}`,l)}async getFromUrl(l){return this.#Z(l,l)}async getFromBlob(l,U){const d=await U;return this.#Z(l,d)}async getFromId(l){this.#d||=new Map;const U=this.#d.get(l);if(!U)return null;if(U.bitmap)return U.refCounter+=1,U;if(U.file)return this.getFromFile(U.file);if(U.blobPromise){const{blobPromise:d}=U;return delete U.blobPromise,this.getFromBlob(U.id,d)}return this.getFromUrl(U.url)}getFromCanvas(l,U){this.#d||=new Map;let d=this.#d.get(l);if(d?.bitmap)return d.refCounter+=1,d;const Z=new OffscreenCanvas(U.width,U.height);return Z.getContext("2d").drawImage(U,0,0),d={bitmap:Z.transferToImageBitmap(),id:`image_${this.#l}_${this.#U++}`,refCounter:1,isSvg:!1},this.#d.set(l,d),this.#d.set(d.id,d),d}getSvgUrl(l){const U=this.#d.get(l);return U?.isSvg?U.svgUrl:null}deleteId(l){this.#d||=new Map;const U=this.#d.get(l);if(!U||(U.refCounter-=1,U.refCounter!==0))return;const{bitmap:d}=U;if(!U.url&&!U.file){const Z=new OffscreenCanvas(d.width,d.height);Z.getContext("bitmaprenderer").transferFromImageBitmap(d),U.blobPromise=Z.convertToBlob()}d.close?.(),U.bitmap=null}isValidId(l){return l.startsWith(`image_${this.#l}_`)}}class YW{#l=[];#U=!1;#d;#Z=-1;constructor(l=128){this.#d=l}add({cmd:l,undo:U,post:d,mustExec:Z,type:F=NaN,overwriteIfSameType:t=!1,keepUndo:Q=!1}){if(Z&&l(),this.#U)return;const V={cmd:l,undo:U,post:d,type:F};if(this.#Z===-1){this.#l.length>0&&(this.#l.length=0),this.#Z=0,this.#l.push(V);return}if(t&&this.#l[this.#Z].type===F){Q&&(V.undo=this.#l[this.#Z].undo),this.#l[this.#Z]=V;return}const W=this.#Z+1;W===this.#d?this.#l.splice(0,1):(this.#Z=W,W<this.#l.length&&this.#l.splice(W)),this.#l.push(V)}undo(){if(this.#Z===-1)return;this.#U=!0;const{undo:l,post:U}=this.#l[this.#Z];l(),U?.(),this.#U=!1,this.#Z-=1}redo(){if(this.#Z<this.#l.length-1){this.#Z+=1,this.#U=!0;const{cmd:l,post:U}=this.#l[this.#Z];l(),U?.(),this.#U=!1}}hasSomethingToUndo(){return this.#Z!==-1}hasSomethingToRedo(){return this.#Z<this.#l.length-1}cleanType(l){if(this.#Z!==-1){for(let U=this.#Z;U>=0;U--)if(this.#l[U].type!==l){this.#l.splice(U+1,this.#Z-U),this.#Z=U;return}this.#l.length=0,this.#Z=-1}}destroy(){this.#l=null}}class jU{constructor(l){this.buffer=[],this.callbacks=new Map,this.allKeys=new Set;const{isMac:U}=ol.platform;for(const[d,Z,F={}]of l)for(const t of d){const Q=t.startsWith("mac+");U&&Q?(this.callbacks.set(t.slice(4),{callback:Z,options:F}),this.allKeys.add(t.split("+").at(-1))):!U&&!Q&&(this.callbacks.set(t,{callback:Z,options:F}),this.allKeys.add(t.split("+").at(-1)))}}#l(l){l.altKey&&this.buffer.push("alt"),l.ctrlKey&&this.buffer.push("ctrl"),l.metaKey&&this.buffer.push("meta"),l.shiftKey&&this.buffer.push("shift"),this.buffer.push(l.key);const U=this.buffer.join("+");return this.buffer.length=0,U}exec(l,U){if(!this.allKeys.has(U.key))return;const d=this.callbacks.get(this.#l(U));if(!d)return;const{callback:Z,options:{bubbles:F=!1,args:t=[],checker:Q=null}}=d;Q&&!Q(l,U)||(Z.bind(l,...t,U)(),F||gl(U))}}class _d{static _colorsMapping=new Map([["CanvasText",[0,0,0]],["Canvas",[255,255,255]]]);get _colors(){const l=new Map([["CanvasText",null],["Canvas",null]]);return TW(l),$(this,"_colors",l)}convert(l){const U=fd(l);if(!window.matchMedia("(forced-colors: active)").matches)return U;for(const[d,Z]of this._colors)if(Z.every((F,t)=>F===U[t]))return _d._colorsMapping.get(d);return U}getHexCode(l){const U=this._colors.get(l);return U?w.makeHexColor(...U):l}}class cU{#l=new AbortController;#U=null;#d=new Map;#Z=new Map;#t=null;#F=null;#W=null;#c=new YW;#R=null;#V=0;#N=new Set;#Q=null;#n=null;#a=new Set;#s=!1;#i=!1;#b=!1;#h=null;#m=null;#M=null;#G=null;#e=!1;#S=null;#y=new XW;#X=!1;#Y=!1;#B=null;#u=null;#o=null;#D=null;#T=v.NONE;#J=new Set;#z=null;#I=null;#x=null;#j={isEditing:!1,isEmpty:!0,hasSomethingToUndo:!1,hasSomethingToRedo:!1,hasSelectedEditor:!1,hasSelectedText:!1};#w=[0,0];#k=null;#L=null;#K=null;#E=null;static TRANSLATE_SMALL=1;static TRANSLATE_BIG=10;static get _keyboardManager(){const l=cU.prototype,U=t=>t.#L.contains(document.activeElement)&&document.activeElement.tagName!=="BUTTON"&&t.hasSomethingToControl(),d=(t,{target:Q})=>{if(Q instanceof HTMLInputElement){const{type:V}=Q;return V!=="text"&&V!=="number"}return!0},Z=this.TRANSLATE_SMALL,F=this.TRANSLATE_BIG;return $(this,"_keyboardManager",new jU([[["ctrl+a","mac+meta+a"],l.selectAll,{checker:d}],[["ctrl+z","mac+meta+z"],l.undo,{checker:d}],[["ctrl+y","ctrl+shift+z","mac+meta+shift+z","ctrl+shift+Z","mac+meta+shift+Z"],l.redo,{checker:d}],[["Backspace","alt+Backspace","ctrl+Backspace","shift+Backspace","mac+Backspace","mac+alt+Backspace","mac+ctrl+Backspace","Delete","ctrl+Delete","shift+Delete","mac+Delete"],l.delete,{checker:d}],[["Enter","mac+Enter"],l.addNewEditorFromKeyboard,{checker:(t,{target:Q})=>!(Q instanceof HTMLButtonElement)&&t.#L.contains(Q)&&!t.isEnterHandled}],[[" ","mac+ "],l.addNewEditorFromKeyboard,{checker:(t,{target:Q})=>!(Q instanceof HTMLButtonElement)&&t.#L.contains(document.activeElement)}],[["Escape","mac+Escape"],l.unselectAll],[["ArrowLeft","mac+ArrowLeft"],l.translateSelectedEditors,{args:[-Z,0],checker:U}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],l.translateSelectedEditors,{args:[-F,0],checker:U}],[["ArrowRight","mac+ArrowRight"],l.translateSelectedEditors,{args:[Z,0],checker:U}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],l.translateSelectedEditors,{args:[F,0],checker:U}],[["ArrowUp","mac+ArrowUp"],l.translateSelectedEditors,{args:[0,-Z],checker:U}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],l.translateSelectedEditors,{args:[0,-F],checker:U}],[["ArrowDown","mac+ArrowDown"],l.translateSelectedEditors,{args:[0,Z],checker:U}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],l.translateSelectedEditors,{args:[0,F],checker:U}]]))}constructor(l,U,d,Z,F,t,Q,V,W,R,N){const n=this._signal=this.#l.signal;this.#L=l,this.#K=U,this.#t=d,this._eventBus=Z,Z._on("editingaction",this.onEditingAction.bind(this),{signal:n}),Z._on("pagechanging",this.onPageChanging.bind(this),{signal:n}),Z._on("scalechanging",this.onScaleChanging.bind(this),{signal:n}),Z._on("rotationchanging",this.onRotationChanging.bind(this),{signal:n}),Z._on("setpreference",this.onSetPreference.bind(this),{signal:n}),Z._on("switchannotationeditorparams",s=>this.updateParams(s.type,s.value),{signal:n}),this.#ll(),this.#Fl(),this.#v(),this.#F=F.annotationStorage,this.#h=F.filterFactory,this.#I=t,this.#G=Q||null,this.#s=V,this.#i=W,this.#b=R,this.#D=N||null,this.viewParameters={realScale:SU.PDF_TO_CSS_UNITS,rotation:0},this.isShiftKeyDown=!1}destroy(){this.#E?.resolve(),this.#E=null,this.#l?.abort(),this.#l=null,this._signal=null;for(const l of this.#Z.values())l.destroy();this.#Z.clear(),this.#d.clear(),this.#a.clear(),this.#U=null,this.#J.clear(),this.#c.destroy(),this.#t?.destroy(),this.#S?.hide(),this.#S=null,this.#m&&(clearTimeout(this.#m),this.#m=null),this.#k&&(clearTimeout(this.#k),this.#k=null)}combinedSignal(l){return AbortSignal.any([this._signal,l.signal])}get mlManager(){return this.#D}get useNewAltTextFlow(){return this.#i}get useNewAltTextWhenAddingImage(){return this.#b}get hcmFilter(){return $(this,"hcmFilter",this.#I?this.#h.addHCMFilter(this.#I.foreground,this.#I.background):"none")}get direction(){return $(this,"direction",getComputedStyle(this.#L).direction)}get highlightColors(){return $(this,"highlightColors",this.#G?new Map(this.#G.split(",").map(l=>l.split("=").map(U=>U.trim()))):null)}get highlightColorNames(){return $(this,"highlightColorNames",this.highlightColors?new Map(Array.from(this.highlightColors,l=>l.reverse())):null)}setMainHighlightColorPicker(l){this.#o=l}editAltText(l,U=!1){this.#t?.editAltText(this,l,U)}switchToMode(l,U){this._eventBus.on("annotationeditormodechanged",U,{once:!0,signal:this._signal}),this._eventBus.dispatch("showannotationeditorui",{source:this,mode:l})}setPreference(l,U){this._eventBus.dispatch("setpreference",{source:this,name:l,value:U})}onSetPreference({name:l,value:U}){switch(l){case"enableNewAltTextWhenAddingImage":this.#b=U;break}}onPageChanging({pageNumber:l}){this.#V=l-1}focusMainContainer(){this.#L.focus()}findParent(l,U){for(const d of this.#Z.values()){const{x:Z,y:F,width:t,height:Q}=d.div.getBoundingClientRect();if(l>=Z&&l<=Z+t&&U>=F&&U<=F+Q)return d}return null}disableUserSelect(l=!1){this.#K.classList.toggle("noUserSelect",l)}addShouldRescale(l){this.#a.add(l)}removeShouldRescale(l){this.#a.delete(l)}onScaleChanging({scale:l}){this.commitOrRemove(),this.viewParameters.realScale=l*SU.PDF_TO_CSS_UNITS;for(const U of this.#a)U.onScaleChanging();this.currentLayer?.onScaleChanging()}onRotationChanging({pagesRotation:l}){this.commitOrRemove(),this.viewParameters.rotation=l}#r({anchorNode:l}){return l.nodeType===Node.TEXT_NODE?l.parentElement:l}#H(l){const{currentLayer:U}=this;if(U.hasTextLayer(l))return U;for(const d of this.#Z.values())if(d.hasTextLayer(l))return d;return null}highlightSelection(l=""){const U=document.getSelection();if(!U||U.isCollapsed)return;const{anchorNode:d,anchorOffset:Z,focusNode:F,focusOffset:t}=U,Q=U.toString(),W=this.#r(U).closest(".textLayer"),R=this.getSelectionBoxes(W);if(!R)return;U.empty();const N=this.#H(W),n=this.#T===v.NONE,s=()=>{N?.createAndAddNewEditor({x:0,y:0},!1,{methodOfCreation:l,boxes:R,anchorNode:d,anchorOffset:Z,focusNode:F,focusOffset:t,text:Q}),n&&this.showAllEditors("highlight",!0,!0)};if(n){this.switchToMode(v.HIGHLIGHT,s);return}s()}#q(){const l=document.getSelection();if(!l||l.isCollapsed)return;const d=this.#r(l).closest(".textLayer"),Z=this.getSelectionBoxes(d);Z&&(this.#S||=new SW(this),this.#S.show(d,Z,this.direction==="ltr"))}addToAnnotationStorage(l){!l.isEmpty()&&this.#F&&!this.#F.has(l.id)&&this.#F.setValue(l.id,l)}#$(){const l=document.getSelection();if(!l||l.isCollapsed){this.#z&&(this.#S?.hide(),this.#z=null,this.#p({hasSelectedText:!1}));return}const{anchorNode:U}=l;if(U===this.#z)return;const Z=this.#r(l).closest(".textLayer");if(!Z){this.#z&&(this.#S?.hide(),this.#z=null,this.#p({hasSelectedText:!1}));return}if(this.#S?.hide(),this.#z=U,this.#p({hasSelectedText:!0}),!(this.#T!==v.HIGHLIGHT&&this.#T!==v.NONE)&&(this.#T===v.HIGHLIGHT&&this.showAllEditors("highlight",!0,!0),this.#e=this.isShiftKeyDown,!this.isShiftKeyDown)){const F=this.#T===v.HIGHLIGHT?this.#H(Z):null;F?.toggleDrawing();const t=new AbortController,Q=this.combinedSignal(t),V=W=>{W.type==="pointerup"&&W.button!==0||(t.abort(),F?.toggleDrawing(!0),W.type==="pointerup"&&this.#g("main_toolbar"))};window.addEventListener("pointerup",V,{signal:Q}),window.addEventListener("blur",V,{signal:Q})}}#g(l=""){this.#T===v.HIGHLIGHT?this.highlightSelection(l):this.#s&&this.#q()}#ll(){document.addEventListener("selectionchange",this.#$.bind(this),{signal:this._signal})}#Ul(){if(this.#M)return;this.#M=new AbortController;const l=this.combinedSignal(this.#M);window.addEventListener("focus",this.focus.bind(this),{signal:l}),window.addEventListener("blur",this.blur.bind(this),{signal:l})}#dl(){this.#M?.abort(),this.#M=null}blur(){if(this.isShiftKeyDown=!1,this.#e&&(this.#e=!1,this.#g("main_toolbar")),!this.hasSelection)return;const{activeElement:l}=document;for(const U of this.#J)if(U.div.contains(l)){this.#u=[U,l],U._focusEventsAllowed=!1;break}}focus(){if(!this.#u)return;const[l,U]=this.#u;this.#u=null,U.addEventListener("focusin",()=>{l._focusEventsAllowed=!0},{once:!0,signal:this._signal}),U.focus()}#v(){if(this.#B)return;this.#B=new AbortController;const l=this.combinedSignal(this.#B);window.addEventListener("keydown",this.keydown.bind(this),{signal:l}),window.addEventListener("keyup",this.keyup.bind(this),{signal:l})}#Zl(){this.#B?.abort(),this.#B=null}#P(){if(this.#R)return;this.#R=new AbortController;const l=this.combinedSignal(this.#R);document.addEventListener("copy",this.copy.bind(this),{signal:l}),document.addEventListener("cut",this.cut.bind(this),{signal:l}),document.addEventListener("paste",this.paste.bind(this),{signal:l})}#f(){this.#R?.abort(),this.#R=null}#Fl(){const l=this._signal;document.addEventListener("dragover",this.dragOver.bind(this),{signal:l}),document.addEventListener("drop",this.drop.bind(this),{signal:l})}addEditListeners(){this.#v(),this.#P()}removeEditListeners(){this.#Zl(),this.#f()}dragOver(l){for(const{type:U}of l.dataTransfer.items)for(const d of this.#n)if(d.isHandlingMimeForPasting(U)){l.dataTransfer.dropEffect="copy",l.preventDefault();return}}drop(l){for(const U of l.dataTransfer.items)for(const d of this.#n)if(d.isHandlingMimeForPasting(U.type)){d.paste(U,this.currentLayer),l.preventDefault();return}}copy(l){if(l.preventDefault(),this.#U?.commitOrRemove(),!this.hasSelection)return;const U=[];for(const d of this.#J){const Z=d.serialize(!0);Z&&U.push(Z)}U.length!==0&&l.clipboardData.setData("application/pdfjs",JSON.stringify(U))}cut(l){this.copy(l),this.delete()}async paste(l){l.preventDefault();const{clipboardData:U}=l;for(const F of U.items)for(const t of this.#n)if(t.isHandlingMimeForPasting(F.type)){t.paste(F,this.currentLayer);return}let d=U.getData("application/pdfjs");if(!d)return;try{d=JSON.parse(d)}catch(F){f(`paste: "${F.message}".`);return}if(!Array.isArray(d))return;this.unselectAll();const Z=this.currentLayer;try{const F=[];for(const V of d){const W=await Z.deserialize(V);if(!W)return;F.push(W)}const t=()=>{for(const V of F)this.#A(V);this.#_(F)},Q=()=>{for(const V of F)V.remove()};this.addCommands({cmd:t,undo:Q,mustExec:!0})}catch(F){f(`paste: "${F.message}".`)}}keydown(l){!this.isShiftKeyDown&&l.key==="Shift"&&(this.isShiftKeyDown=!0),this.#T!==v.NONE&&!this.isEditorHandlingKeyboard&&cU._keyboardManager.exec(this,l)}keyup(l){this.isShiftKeyDown&&l.key==="Shift"&&(this.isShiftKeyDown=!1,this.#e&&(this.#e=!1,this.#g("main_toolbar")))}onEditingAction({name:l}){switch(l){case"undo":case"redo":case"delete":case"selectAll":this[l]();break;case"highlightSelection":this.highlightSelection("context_menu");break}}#p(l){Object.entries(l).some(([d,Z])=>this.#j[d]!==Z)&&(this._eventBus.dispatch("annotationeditorstateschanged",{source:this,details:Object.assign(this.#j,l)}),this.#T===v.HIGHLIGHT&&l.hasSelectedEditor===!1&&this.#C([[Ul.HIGHLIGHT_FREE,!0]]))}#C(l){this._eventBus.dispatch("annotationeditorparamschanged",{source:this,details:l})}setEditingState(l){l?(this.#Ul(),this.#P(),this.#p({isEditing:this.#T!==v.NONE,isEmpty:this.#O(),hasSomethingToUndo:this.#c.hasSomethingToUndo(),hasSomethingToRedo:this.#c.hasSomethingToRedo(),hasSelectedEditor:!1})):(this.#dl(),this.#f(),this.#p({isEditing:!1}),this.disableUserSelect(!1))}registerEditorTypes(l){if(!this.#n){this.#n=l;for(const U of this.#n)this.#C(U.defaultPropertiesToUpdate)}}getId(){return this.#y.id}get currentLayer(){return this.#Z.get(this.#V)}getLayer(l){return this.#Z.get(l)}get currentPageIndex(){return this.#V}addLayer(l){this.#Z.set(l.pageIndex,l),this.#X?l.enable():l.disable()}removeLayer(l){this.#Z.delete(l.pageIndex)}async updateMode(l,U=null,d=!1){if(this.#T!==l&&!(this.#E&&(await this.#E.promise,!this.#E))){if(this.#E=Promise.withResolvers(),this.#T=l,l===v.NONE){this.setEditingState(!1),this.#Ql(),this.#E.resolve();return}this.setEditingState(!0),await this.#tl(),this.unselectAll();for(const Z of this.#Z.values())Z.updateMode(l);if(!U){d&&this.addNewEditorFromKeyboard(),this.#E.resolve();return}for(const Z of this.#d.values())Z.annotationElementId===U?(this.setSelected(Z),Z.enterInEditMode()):Z.unselect();this.#E.resolve()}}addNewEditorFromKeyboard(){this.currentLayer.canCreateNewEmptyEditor()&&this.currentLayer.addNewEditor()}updateToolbar(l){l!==this.#T&&this._eventBus.dispatch("switchannotationeditormode",{source:this,mode:l})}updateParams(l,U){if(this.#n){switch(l){case Ul.CREATE:this.currentLayer.addNewEditor();return;case Ul.HIGHLIGHT_DEFAULT_COLOR:this.#o?.updateColor(U);break;case Ul.HIGHLIGHT_SHOW_ALL:this._eventBus.dispatch("reporttelemetry",{source:this,details:{type:"editing",data:{type:"highlight",action:"toggle_visibility"}}}),(this.#x||=new Map).set(l,U),this.showAllEditors("highlight",U);break}for(const d of this.#J)d.updateParams(l,U);for(const d of this.#n)d.updateDefaultParams(l,U)}}showAllEditors(l,U,d=!1){for(const F of this.#d.values())F.editorType===l&&F.show(U);(this.#x?.get(Ul.HIGHLIGHT_SHOW_ALL)??!0)!==U&&this.#C([[Ul.HIGHLIGHT_SHOW_ALL,U]])}enableWaiting(l=!1){if(this.#Y!==l){this.#Y=l;for(const U of this.#Z.values())l?U.disableClick():U.enableClick(),U.div.classList.toggle("waiting",l)}}async#tl(){if(!this.#X){this.#X=!0;const l=[];for(const U of this.#Z.values())l.push(U.enable());await Promise.all(l);for(const U of this.#d.values())U.enable()}}#Ql(){if(this.unselectAll(),this.#X){this.#X=!1;for(const l of this.#Z.values())l.disable();for(const l of this.#d.values())l.disable()}}getEditors(l){const U=[];for(const d of this.#d.values())d.pageIndex===l&&U.push(d);return U}getEditor(l){return this.#d.get(l)}addEditor(l){this.#d.set(l.id,l)}removeEditor(l){l.div.contains(document.activeElement)&&(this.#m&&clearTimeout(this.#m),this.#m=setTimeout(()=>{this.focusMainContainer(),this.#m=null},0)),this.#d.delete(l.id),this.unselect(l),(!l.annotationElementId||!this.#N.has(l.annotationElementId))&&this.#F?.remove(l.id)}addDeletedAnnotationElement(l){this.#N.add(l.annotationElementId),this.addChangedExistingAnnotation(l),l.deleted=!0}isDeletedAnnotationElement(l){return this.#N.has(l)}removeDeletedAnnotationElement(l){this.#N.delete(l.annotationElementId),this.removeChangedExistingAnnotation(l),l.deleted=!1}#A(l){const U=this.#Z.get(l.pageIndex);U?U.addOrRebuild(l):(this.addEditor(l),this.addToAnnotationStorage(l))}setActiveEditor(l){this.#U!==l&&(this.#U=l,l&&this.#C(l.propertiesToUpdate))}get#cl(){let l=null;for(l of this.#J);return l}updateUI(l){this.#cl===l&&this.#C(l.propertiesToUpdate)}updateUIForDefaultProperties(l){this.#C(l.defaultPropertiesToUpdate)}toggleSelected(l){if(this.#J.has(l)){this.#J.delete(l),l.unselect(),this.#p({hasSelectedEditor:this.hasSelection});return}this.#J.add(l),l.select(),this.#C(l.propertiesToUpdate),this.#p({hasSelectedEditor:!0})}setSelected(l){this.currentLayer?.commitOrRemove();for(const U of this.#J)U!==l&&U.unselect();this.#J.clear(),this.#J.add(l),l.select(),this.#C(l.propertiesToUpdate),this.#p({hasSelectedEditor:!0})}isSelected(l){return this.#J.has(l)}get firstSelectedEditor(){return this.#J.values().next().value}unselect(l){l.unselect(),this.#J.delete(l),this.#p({hasSelectedEditor:this.hasSelection})}get hasSelection(){return this.#J.size!==0}get isEnterHandled(){return this.#J.size===1&&this.firstSelectedEditor.isEnterHandled}undo(){this.#c.undo(),this.#p({hasSomethingToUndo:this.#c.hasSomethingToUndo(),hasSomethingToRedo:!0,isEmpty:this.#O()})}redo(){this.#c.redo(),this.#p({hasSomethingToUndo:!0,hasSomethingToRedo:this.#c.hasSomethingToRedo(),isEmpty:this.#O()})}addCommands(l){this.#c.add(l),this.#p({hasSomethingToUndo:!0,hasSomethingToRedo:!1,isEmpty:this.#O()})}cleanUndoStack(l){this.#c.cleanType(l)}#O(){if(this.#d.size===0)return!0;if(this.#d.size===1)for(const l of this.#d.values())return l.isEmpty();return!1}delete(){this.commitOrRemove();const l=this.currentLayer?.endDrawingSession(!0);if(!this.hasSelection&&!l)return;const U=l?[l]:[...this.#J],d=()=>{for(const F of U)F.remove()},Z=()=>{for(const F of U)this.#A(F)};this.addCommands({cmd:d,undo:Z,mustExec:!0})}commitOrRemove(){this.#U?.commitOrRemove()}hasSomethingToControl(){return this.#U||this.hasSelection}#_(l){for(const U of this.#J)U.unselect();this.#J.clear();for(const U of l)U.isEmpty()||(this.#J.add(U),U.select());this.#p({hasSelectedEditor:this.hasSelection})}selectAll(){for(const l of this.#J)l.commit();this.#_(this.#d.values())}unselectAll(){if(!(this.#U&&(this.#U.commitOrRemove(),this.#T!==v.NONE))&&!this.currentLayer?.commitOrRemove()&&this.hasSelection){for(const l of this.#J)l.unselect();this.#J.clear(),this.#p({hasSelectedEditor:!1})}}translateSelectedEditors(l,U,d=!1){if(d||this.commitOrRemove(),!this.hasSelection)return;this.#w[0]+=l,this.#w[1]+=U;const[Z,F]=this.#w,t=[...this.#J],Q=1e3;this.#k&&clearTimeout(this.#k),this.#k=setTimeout(()=>{this.#k=null,this.#w[0]=this.#w[1]=0,this.addCommands({cmd:()=>{for(const V of t)this.#d.has(V.id)&&V.translateInPage(Z,F)},undo:()=>{for(const V of t)this.#d.has(V.id)&&V.translateInPage(-Z,-F)},mustExec:!1})},Q);for(const V of t)V.translateInPage(l,U)}setUpDragSession(){if(this.hasSelection){this.disableUserSelect(!0),this.#Q=new Map;for(const l of this.#J)this.#Q.set(l,{savedX:l.x,savedY:l.y,savedPageIndex:l.pageIndex,newX:0,newY:0,newPageIndex:-1})}}endDragSession(){if(!this.#Q)return!1;this.disableUserSelect(!1);const l=this.#Q;this.#Q=null;let U=!1;for(const[{x:Z,y:F,pageIndex:t},Q]of l)Q.newX=Z,Q.newY=F,Q.newPageIndex=t,U||=Z!==Q.savedX||F!==Q.savedY||t!==Q.savedPageIndex;if(!U)return!1;const d=(Z,F,t,Q)=>{if(this.#d.has(Z.id)){const V=this.#Z.get(Q);V?Z._setParentAndPosition(V,F,t):(Z.pageIndex=Q,Z.x=F,Z.y=t)}};return this.addCommands({cmd:()=>{for(const[Z,{newX:F,newY:t,newPageIndex:Q}]of l)d(Z,F,t,Q)},undo:()=>{for(const[Z,{savedX:F,savedY:t,savedPageIndex:Q}]of l)d(Z,F,t,Q)},mustExec:!0}),!0}dragSelectedEditors(l,U){if(this.#Q)for(const d of this.#Q.keys())d.drag(l,U)}rebuild(l){if(l.parent===null){const U=this.getLayer(l.pageIndex);U?(U.changeParent(l),U.addOrRebuild(l)):(this.addEditor(l),this.addToAnnotationStorage(l),l.rebuild())}else l.parent.addOrRebuild(l)}get isEditorHandlingKeyboard(){return this.getActive()?.shouldGetKeyboardEvents()||this.#J.size===1&&this.firstSelectedEditor.shouldGetKeyboardEvents()}isActive(l){return this.#U===l}getActive(){return this.#U}getMode(){return this.#T}get imageManager(){return $(this,"imageManager",new Ad)}getSelectionBoxes(l){if(!l)return null;const U=document.getSelection();for(let W=0,R=U.rangeCount;W<R;W++)if(!l.contains(U.getRangeAt(W).commonAncestorContainer))return null;const{x:d,y:Z,width:F,height:t}=l.getBoundingClientRect();let Q;switch(l.getAttribute("data-main-rotation")){case"90":Q=(W,R,N,n)=>({x:(R-Z)/t,y:1-(W+N-d)/F,width:n/t,height:N/F});break;case"180":Q=(W,R,N,n)=>({x:1-(W+N-d)/F,y:1-(R+n-Z)/t,width:N/F,height:n/t});break;case"270":Q=(W,R,N,n)=>({x:1-(R+n-Z)/t,y:(W-d)/F,width:n/t,height:N/F});break;default:Q=(W,R,N,n)=>({x:(W-d)/F,y:(R-Z)/t,width:N/F,height:n/t});break}const V=[];for(let W=0,R=U.rangeCount;W<R;W++){const N=U.getRangeAt(W);if(!N.collapsed)for(const{x:n,y:s,width:a,height:b}of N.getClientRects())a===0||b===0||V.push(Q(n,s,a,b))}return V.length===0?null:V}addChangedExistingAnnotation({annotationElementId:l,id:U}){(this.#W||=new Map).set(l,U)}removeChangedExistingAnnotation({annotationElementId:l}){this.#W?.delete(l)}renderAnnotationElement(l){const U=this.#W?.get(l.data.id);if(!U)return;const d=this.#F.getRawValue(U);d&&(this.#T===v.NONE&&!d.hasBeenModified||d.renderAnnotationElement(l))}}class _l{#l=null;#U=!1;#d=null;#Z=null;#t=null;#F=null;#W=!1;#c=null;#R=null;#V=null;#N=null;#Q=!1;static#n=null;static _l10n=null;constructor(l){this.#R=l,this.#Q=l._uiManager.useNewAltTextFlow,_l.#n||=Object.freeze({added:"pdfjs-editor-new-alt-text-added-button","added-label":"pdfjs-editor-new-alt-text-added-button-label",missing:"pdfjs-editor-new-alt-text-missing-button","missing-label":"pdfjs-editor-new-alt-text-missing-button-label",review:"pdfjs-editor-new-alt-text-to-review-button","review-label":"pdfjs-editor-new-alt-text-to-review-button-label"})}static initialize(l){_l._l10n??=l}async render(){const l=this.#d=document.createElement("button");l.className="altText",l.tabIndex="0";const U=this.#Z=document.createElement("span");l.append(U),this.#Q?(l.classList.add("new"),l.setAttribute("data-l10n-id",_l.#n.missing),U.setAttribute("data-l10n-id",_l.#n["missing-label"])):(l.setAttribute("data-l10n-id","pdfjs-editor-alt-text-button"),U.setAttribute("data-l10n-id","pdfjs-editor-alt-text-button-label"));const d=this.#R._uiManager._signal;l.addEventListener("contextmenu",vl,{signal:d}),l.addEventListener("pointerdown",F=>F.stopPropagation(),{signal:d});const Z=F=>{F.preventDefault(),this.#R._uiManager.editAltText(this.#R),this.#Q&&this.#R._reportTelemetry({action:"pdfjs.image.alt_text.image_status_label_clicked",data:{label:this.#a}})};return l.addEventListener("click",Z,{capture:!0,signal:d}),l.addEventListener("keydown",F=>{F.target===l&&F.key==="Enter"&&(this.#W=!0,Z(F))},{signal:d}),await this.#s(),l}get#a(){return this.#l&&"added"||this.#l===null&&this.guessedText&&"review"||"missing"}finish(){this.#d&&(this.#d.focus({focusVisible:this.#W}),this.#W=!1)}isEmpty(){return this.#Q?this.#l===null:!this.#l&&!this.#U}hasData(){return this.#Q?this.#l!==null||!!this.#V:this.isEmpty()}get guessedText(){return this.#V}async setGuessedText(l){this.#l===null&&(this.#V=l,this.#N=await _l._l10n.get("pdfjs-editor-new-alt-text-generated-alt-text-with-disclaimer",{generatedAltText:l}),this.#s())}toggleAltTextBadge(l=!1){if(!this.#Q||this.#l){this.#c?.remove(),this.#c=null;return}if(!this.#c){const U=this.#c=document.createElement("div");U.className="noAltTextBadge",this.#R.div.append(U)}this.#c.classList.toggle("hidden",!l)}serialize(l){let U=this.#l;return!l&&this.#V===U&&(U=this.#N),{altText:U,decorative:this.#U,guessedText:this.#V,textWithDisclaimer:this.#N}}get data(){return{altText:this.#l,decorative:this.#U}}set data({altText:l,decorative:U,guessedText:d,textWithDisclaimer:Z,cancel:F=!1}){d&&(this.#V=d,this.#N=Z),!(this.#l===l&&this.#U===U)&&(F||(this.#l=l,this.#U=U),this.#s())}toggle(l=!1){this.#d&&(!l&&this.#F&&(clearTimeout(this.#F),this.#F=null),this.#d.disabled=!l)}shown(){this.#R._reportTelemetry({action:"pdfjs.image.alt_text.image_status_label_displayed",data:{label:this.#a}})}destroy(){this.#d?.remove(),this.#d=null,this.#Z=null,this.#t=null,this.#c?.remove(),this.#c=null}async#s(){const l=this.#d;if(!l)return;if(this.#Q){if(l.classList.toggle("done",!!this.#l),l.setAttribute("data-l10n-id",_l.#n[this.#a]),this.#Z?.setAttribute("data-l10n-id",_l.#n[`${this.#a}-label`]),!this.#l){this.#t?.remove();return}}else{if(!this.#l&&!this.#U){l.classList.remove("done"),this.#t?.remove();return}l.classList.add("done"),l.setAttribute("data-l10n-id","pdfjs-editor-alt-text-edit-button")}let U=this.#t;if(!U){this.#t=U=document.createElement("span"),U.className="tooltip",U.setAttribute("role","tooltip"),U.id=`alt-text-tooltip-${this.#R.id}`;const Z=100,F=this.#R._uiManager._signal;F.addEventListener("abort",()=>{clearTimeout(this.#F),this.#F=null},{once:!0}),l.addEventListener("mouseenter",()=>{this.#F=setTimeout(()=>{this.#F=null,this.#t.classList.add("show"),this.#R._reportTelemetry({action:"alt_text_tooltip"})},Z)},{signal:F}),l.addEventListener("mouseleave",()=>{this.#F&&(clearTimeout(this.#F),this.#F=null),this.#t?.classList.remove("show")},{signal:F})}this.#U?U.setAttribute("data-l10n-id","pdfjs-editor-alt-text-decorative-tooltip"):(U.removeAttribute("data-l10n-id"),U.textContent=this.#l),U.parentNode||l.append(U),this.#R.getImageForAltText()?.setAttribute("aria-describedby",U.id)}}class P{#l=null;#U=null;#d=null;#Z=!1;#t=null;#F="";#W=!1;#c=null;#R=null;#V=null;#N=null;#Q="";#n=!1;#a=null;#s=!1;#i=!1;#b=!1;#h=null;#m=0;#M=0;#G=null;_editToolbar=null;_initialOptions=Object.create(null);_initialData=null;_isVisible=!0;_uiManager=null;_focusEventsAllowed=!0;static _l10n=null;static _l10nResizer=null;#e=!1;#S=P._zIndex++;static _borderLineWidth=-1;static _colorManager=new _d;static _zIndex=1;static _telemetryTimeout=1e3;static get _resizerKeyboardManager(){const l=P.prototype._resizeWithKeyboard,U=cU.TRANSLATE_SMALL,d=cU.TRANSLATE_BIG;return $(this,"_resizerKeyboardManager",new jU([[["ArrowLeft","mac+ArrowLeft"],l,{args:[-U,0]}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],l,{args:[-d,0]}],[["ArrowRight","mac+ArrowRight"],l,{args:[U,0]}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],l,{args:[d,0]}],[["ArrowUp","mac+ArrowUp"],l,{args:[0,-U]}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],l,{args:[0,-d]}],[["ArrowDown","mac+ArrowDown"],l,{args:[0,U]}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],l,{args:[0,d]}],[["Escape","mac+Escape"],P.prototype._stopResizingWithKeyboard]]))}constructor(l){this.parent=l.parent,this.id=l.id,this.width=this.height=null,this.pageIndex=l.parent.pageIndex,this.name=l.name,this.div=null,this._uiManager=l.uiManager,this.annotationElementId=null,this._willKeepAspectRatio=!1,this._initialOptions.isCentered=l.isCentered,this._structTreeParentId=null;const{rotation:U,rawDims:{pageWidth:d,pageHeight:Z,pageX:F,pageY:t}}=this.parent.viewport;this.rotation=U,this.pageRotation=(360+U-this._uiManager.viewParameters.rotation)%360,this.pageDimensions=[d,Z],this.pageTranslation=[F,t];const[Q,V]=this.parentDimensions;this.x=l.x/Q,this.y=l.y/V,this.isAttachedToDOM=!1,this.deleted=!1}get editorType(){return Object.getPrototypeOf(this).constructor._type}static get isDrawer(){return!1}static get _defaultLineColor(){return $(this,"_defaultLineColor",this._colorManager.getHexCode("CanvasText"))}static deleteAnnotationElement(l){const U=new BW({id:l.parent.getNextId(),parent:l.parent,uiManager:l._uiManager});U.annotationElementId=l.annotationElementId,U.deleted=!0,U._uiManager.addToAnnotationStorage(U)}static initialize(l,U){if(P._l10n??=l,P._l10nResizer||=Object.freeze({topLeft:"pdfjs-editor-resizer-top-left",topMiddle:"pdfjs-editor-resizer-top-middle",topRight:"pdfjs-editor-resizer-top-right",middleRight:"pdfjs-editor-resizer-middle-right",bottomRight:"pdfjs-editor-resizer-bottom-right",bottomMiddle:"pdfjs-editor-resizer-bottom-middle",bottomLeft:"pdfjs-editor-resizer-bottom-left",middleLeft:"pdfjs-editor-resizer-middle-left"}),P._borderLineWidth!==-1)return;const d=getComputedStyle(document.documentElement);P._borderLineWidth=parseFloat(d.getPropertyValue("--outline-width"))||0}static updateDefaultParams(l,U){}static get defaultPropertiesToUpdate(){return[]}static isHandlingMimeForPasting(l){return!1}static paste(l,U){Zl("Not implemented")}get propertiesToUpdate(){return[]}get _isDraggable(){return this.#e}set _isDraggable(l){this.#e=l,this.div?.classList.toggle("draggable",l)}get isEnterHandled(){return!0}center(){const[l,U]=this.pageDimensions;switch(this.parentRotation){case 90:this.x-=this.height*U/(l*2),this.y+=this.width*l/(U*2);break;case 180:this.x+=this.width/2,this.y+=this.height/2;break;case 270:this.x+=this.height*U/(l*2),this.y-=this.width*l/(U*2);break;default:this.x-=this.width/2,this.y-=this.height/2;break}this.fixAndSetPosition()}addCommands(l){this._uiManager.addCommands(l)}get currentLayer(){return this._uiManager.currentLayer}setInBackground(){this.div.style.zIndex=0}setInForeground(){this.div.style.zIndex=this.#S}setParent(l){l!==null?(this.pageIndex=l.pageIndex,this.pageDimensions=l.pageDimensions):this.#L(),this.parent=l}focusin(l){this._focusEventsAllowed&&(this.#n?this.#n=!1:this.parent.setSelected(this))}focusout(l){!this._focusEventsAllowed||!this.isAttachedToDOM||l.relatedTarget?.closest(`#${this.id}`)||(l.preventDefault(),this.parent?.isMultipleSelection||this.commitOrRemove())}commitOrRemove(){this.isEmpty()?this.remove():this.commit()}commit(){this.addToAnnotationStorage()}addToAnnotationStorage(){this._uiManager.addToAnnotationStorage(this)}setAt(l,U,d,Z){const[F,t]=this.parentDimensions;[d,Z]=this.screenToPageTranslation(d,Z),this.x=(l+d)/F,this.y=(U+Z)/t,this.fixAndSetPosition()}#y([l,U],d,Z){[d,Z]=this.screenToPageTranslation(d,Z),this.x+=d/l,this.y+=Z/U,this._onTranslating(this.x,this.y),this.fixAndSetPosition()}translate(l,U){this.#y(this.parentDimensions,l,U)}translateInPage(l,U){this.#a||=[this.x,this.y],this.#y(this.pageDimensions,l,U),this.div.scrollIntoView({block:"nearest"})}drag(l,U){this.#a||=[this.x,this.y];const{div:d,parentDimensions:[Z,F]}=this;if(this.x+=l/Z,this.y+=U/F,this.parent&&(this.x<0||this.x>1||this.y<0||this.y>1)){const{x:N,y:n}=this.div.getBoundingClientRect();this.parent.findNewParent(this,N,n)&&(this.x-=Math.floor(this.x),this.y-=Math.floor(this.y))}let{x:t,y:Q}=this;const[V,W]=this.getBaseTranslation();t+=V,Q+=W;const{style:R}=d;R.left=`${(100*t).toFixed(2)}%`,R.top=`${(100*Q).toFixed(2)}%`,this._onTranslating(t,Q),d.scrollIntoView({block:"nearest"})}_onTranslating(l,U){}_onTranslated(l,U){}get _hasBeenMoved(){return!!this.#a&&(this.#a[0]!==this.x||this.#a[1]!==this.y)}getBaseTranslation(){const[l,U]=this.parentDimensions,{_borderLineWidth:d}=P,Z=d/l,F=d/U;switch(this.rotation){case 90:return[-Z,F];case 180:return[Z,F];case 270:return[Z,-F];default:return[-Z,-F]}}get _mustFixPosition(){return!0}fixAndSetPosition(l=this.rotation){const{div:{style:U},pageDimensions:[d,Z]}=this;let{x:F,y:t,width:Q,height:V}=this;if(Q*=d,V*=Z,F*=d,t*=Z,this._mustFixPosition)switch(l){case 0:F=Math.max(0,Math.min(d-Q,F)),t=Math.max(0,Math.min(Z-V,t));break;case 90:F=Math.max(0,Math.min(d-V,F)),t=Math.min(Z,Math.max(Q,t));break;case 180:F=Math.min(d,Math.max(Q,F)),t=Math.min(Z,Math.max(V,t));break;case 270:F=Math.min(d,Math.max(V,F)),t=Math.max(0,Math.min(Z-Q,t));break}this.x=F/=d,this.y=t/=Z;const[W,R]=this.getBaseTranslation();F+=W,t+=R,U.left=`${(100*F).toFixed(2)}%`,U.top=`${(100*t).toFixed(2)}%`,this.moveInDOM()}static#X(l,U,d){switch(d){case 90:return[U,-l];case 180:return[-l,-U];case 270:return[-U,l];default:return[l,U]}}screenToPageTranslation(l,U){return P.#X(l,U,this.parentRotation)}pageTranslationToScreen(l,U){return P.#X(l,U,360-this.parentRotation)}#Y(l){switch(l){case 90:{const[U,d]=this.pageDimensions;return[0,-U/d,d/U,0]}case 180:return[-1,0,0,-1];case 270:{const[U,d]=this.pageDimensions;return[0,U/d,-d/U,0]}default:return[1,0,0,1]}}get parentScale(){return this._uiManager.viewParameters.realScale}get parentRotation(){return(this._uiManager.viewParameters.rotation+this.pageRotation)%360}get parentDimensions(){const{parentScale:l,pageDimensions:[U,d]}=this;return[U*l,d*l]}setDims(l,U){const[d,Z]=this.parentDimensions,{style:F}=this.div;F.width=`${(100*l/d).toFixed(2)}%`,this.#W||(F.height=`${(100*U/Z).toFixed(2)}%`)}fixDims(){const{style:l}=this.div,{height:U,width:d}=l,Z=d.endsWith("%"),F=!this.#W&&U.endsWith("%");if(Z&&F)return;const[t,Q]=this.parentDimensions;Z||(l.width=`${(100*parseFloat(d)/t).toFixed(2)}%`),!this.#W&&!F&&(l.height=`${(100*parseFloat(U)/Q).toFixed(2)}%`)}getInitialTranslation(){return[0,0]}#B(){if(this.#c)return;this.#c=document.createElement("div"),this.#c.classList.add("resizers");const l=this._willKeepAspectRatio?["topLeft","topRight","bottomRight","bottomLeft"]:["topLeft","topMiddle","topRight","middleRight","bottomRight","bottomMiddle","bottomLeft","middleLeft"],U=this._uiManager._signal;for(const d of l){const Z=document.createElement("div");this.#c.append(Z),Z.classList.add("resizer",d),Z.setAttribute("data-resizer-name",d),Z.addEventListener("pointerdown",this.#u.bind(this,d),{signal:U}),Z.addEventListener("contextmenu",vl,{signal:U}),Z.tabIndex=-1}this.div.prepend(this.#c)}#u(l,U){U.preventDefault();const{isMac:d}=ol.platform;if(U.button!==0||U.ctrlKey&&d)return;this.#d?.toggle(!1);const Z=this._isDraggable;this._isDraggable=!1,this.#R=[U.screenX,U.screenY];const F=new AbortController,t=this._uiManager.combinedSignal(F);this.parent.togglePointerEvents(!1),window.addEventListener("pointermove",this.#T.bind(this,l),{passive:!0,capture:!0,signal:t}),window.addEventListener("touchmove",gl,{passive:!1,signal:t}),window.addEventListener("contextmenu",vl,{signal:t}),this.#V={savedX:this.x,savedY:this.y,savedWidth:this.width,savedHeight:this.height};const Q=this.parent.div.style.cursor,V=this.div.style.cursor;this.div.style.cursor=this.parent.div.style.cursor=window.getComputedStyle(U.target).cursor;const W=()=>{F.abort(),this.parent.togglePointerEvents(!0),this.#d?.toggle(!0),this._isDraggable=Z,this.parent.div.style.cursor=Q,this.div.style.cursor=V,this.#D()};window.addEventListener("pointerup",W,{signal:t}),window.addEventListener("blur",W,{signal:t})}#o(l,U,d,Z){this.width=d,this.height=Z,this.x=l,this.y=U;const[F,t]=this.parentDimensions;this.setDims(F*d,t*Z),this.fixAndSetPosition(),this._onResized()}_onResized(){}#D(){if(!this.#V)return;const{savedX:l,savedY:U,savedWidth:d,savedHeight:Z}=this.#V;this.#V=null;const F=this.x,t=this.y,Q=this.width,V=this.height;F===l&&t===U&&Q===d&&V===Z||this.addCommands({cmd:this.#o.bind(this,F,t,Q,V),undo:this.#o.bind(this,l,U,d,Z),mustExec:!0})}#T(l,U){const[d,Z]=this.parentDimensions,F=this.x,t=this.y,Q=this.width,V=this.height,W=P.MIN_SIZE/d,R=P.MIN_SIZE/Z,N=C=>Math.round(C*1e4)/1e4,n=this.#Y(this.rotation),s=(C,O)=>[n[0]*C+n[2]*O,n[1]*C+n[3]*O],a=this.#Y(360-this.rotation),b=(C,O)=>[a[0]*C+a[2]*O,a[1]*C+a[3]*O];let i,h,G=!1,S=!1;switch(l){case"topLeft":G=!0,i=(C,O)=>[0,0],h=(C,O)=>[C,O];break;case"topMiddle":i=(C,O)=>[C/2,0],h=(C,O)=>[C/2,O];break;case"topRight":G=!0,i=(C,O)=>[C,0],h=(C,O)=>[0,O];break;case"middleRight":S=!0,i=(C,O)=>[C,O/2],h=(C,O)=>[0,O/2];break;case"bottomRight":G=!0,i=(C,O)=>[C,O],h=(C,O)=>[0,0];break;case"bottomMiddle":i=(C,O)=>[C/2,O],h=(C,O)=>[C/2,0];break;case"bottomLeft":G=!0,i=(C,O)=>[0,O],h=(C,O)=>[C,0];break;case"middleLeft":S=!0,i=(C,O)=>[0,O/2],h=(C,O)=>[C,O/2];break}const T=i(Q,V),Y=h(Q,V);let y=s(...Y);const o=N(F+y[0]),u=N(t+y[1]);let p=1,z=1,j,ll;if(U.fromKeyboard)({deltaX:j,deltaY:ll}=U);else{const{screenX:C,screenY:O}=U,[yl,Il]=this.#R;[j,ll]=this.screenToPageTranslation(C-yl,O-Il),this.#R[0]=C,this.#R[1]=O}if([j,ll]=b(j/d,ll/Z),G){const C=Math.hypot(Q,V);p=z=Math.max(Math.min(Math.hypot(Y[0]-T[0]-j,Y[1]-T[1]-ll)/C,1/Q,1/V),W/Q,R/V)}else S?p=Math.max(W,Math.min(1,Math.abs(Y[0]-T[0]-j)))/Q:z=Math.max(R,Math.min(1,Math.abs(Y[1]-T[1]-ll)))/V;const Fl=N(Q*p),_=N(V*z);y=s(...h(Fl,_));const nl=o-y[0],q=u-y[1];this.width=Fl,this.height=_,this.x=nl,this.y=q,this.setDims(d*Fl,Z*_),this.fixAndSetPosition(),this._onResizing()}_onResizing(){}altTextFinish(){this.#d?.finish()}async addEditToolbar(){return this._editToolbar||this.#i?this._editToolbar:(this._editToolbar=new kU(this),this.div.append(this._editToolbar.render()),this.#d&&await this._editToolbar.addAltText(this.#d),this._editToolbar)}removeEditToolbar(){this._editToolbar&&(this._editToolbar.remove(),this._editToolbar=null,this.#d?.destroy())}addContainer(l){const U=this._editToolbar?.div;U?U.before(l):this.div.append(l)}getClientDimensions(){return this.div.getBoundingClientRect()}async addAltTextButton(){this.#d||(_l.initialize(P._l10n),this.#d=new _l(this),this.#l&&(this.#d.data=this.#l,this.#l=null),await this.addEditToolbar())}get altTextData(){return this.#d?.data}set altTextData(l){this.#d&&(this.#d.data=l)}get guessedAltText(){return this.#d?.guessedText}async setGuessedAltText(l){await this.#d?.setGuessedText(l)}serializeAltText(l){return this.#d?.serialize(l)}hasAltText(){return!!this.#d&&!this.#d.isEmpty()}hasAltTextData(){return this.#d?.hasData()??!1}render(){this.div=document.createElement("div"),this.div.setAttribute("data-editor-rotation",(360-this.rotation)%360),this.div.className=this.name,this.div.setAttribute("id",this.id),this.div.tabIndex=this.#Z?-1:0,this._isVisible||this.div.classList.add("hidden"),this.setInForeground(),this.#I();const[l,U]=this.parentDimensions;this.parentRotation%180!==0&&(this.div.style.maxWidth=`${(100*U/l).toFixed(2)}%`,this.div.style.maxHeight=`${(100*l/U).toFixed(2)}%`);const[d,Z]=this.getInitialTranslation();return this.translate(d,Z),qU(this,this.div,["pointerdown"]),this.div}pointerdown(l){const{isMac:U}=ol.platform;if(l.button!==0||l.ctrlKey&&U){l.preventDefault();return}if(this.#n=!0,this._isDraggable){this.#z(l);return}this.#J(l)}get isSelected(){return this._uiManager.isSelected(this)}#J(l){const{isMac:U}=ol.platform;l.ctrlKey&&!U||l.shiftKey||l.metaKey&&U?this.parent.toggleSelected(this):this.parent.setSelected(this)}#z(l){const{isSelected:U}=this;this._uiManager.setUpDragSession();const d=new AbortController,Z=this._uiManager.combinedSignal(d),F={capture:!0,passive:!1,signal:Z},t=V=>{d.abort(),this.#t=null,this.#n=!1,this._uiManager.endDragSession()||this.#J(V)};U&&(this.#m=l.clientX,this.#M=l.clientY,this.#t=l.pointerId,this.#F=l.pointerType,window.addEventListener("pointermove",V=>{const{clientX:W,clientY:R,pointerId:N}=V;if(N!==this.#t){gl(V);return}const[n,s]=this.screenToPageTranslation(W-this.#m,R-this.#M);this.#m=W,this.#M=R,this._uiManager.dragSelectedEditors(n,s)},F),window.addEventListener("touchmove",gl,F),window.addEventListener("pointerdown",V=>{V.isPrimary&&V.pointerType===this.#F&&t(V),gl(V)},F)),this._onStartDragging();const Q=V=>{if(!this.#t||this.#t===V.pointerId){t(V),this._onStopDragging();return}gl(V)};window.addEventListener("pointerup",Q,{signal:Z}),window.addEventListener("blur",Q,{signal:Z})}_onStartDragging(){}_onStopDragging(){}moveInDOM(){this.#h&&clearTimeout(this.#h),this.#h=setTimeout(()=>{this.#h=null,this.parent?.moveEditorInDOM(this)},0)}_setParentAndPosition(l,U,d){l.changeParent(this),this.x=U,this.y=d,this.fixAndSetPosition(),this._onTranslated()}getRect(l,U,d=this.rotation){const Z=this.parentScale,[F,t]=this.pageDimensions,[Q,V]=this.pageTranslation,W=l/Z,R=U/Z,N=this.x*F,n=this.y*t,s=this.width*F,a=this.height*t;switch(d){case 0:return[N+W+Q,t-n-R-a+V,N+W+s+Q,t-n-R+V];case 90:return[N+R+Q,t-n+W+V,N+R+a+Q,t-n+W+s+V];case 180:return[N-W-s+Q,t-n+R+V,N-W+Q,t-n+R+a+V];case 270:return[N-R-a+Q,t-n-W-s+V,N-R+Q,t-n-W+V];default:throw new Error("Invalid rotation")}}getRectInCurrentCoords(l,U){const[d,Z,F,t]=l,Q=F-d,V=t-Z;switch(this.rotation){case 0:return[d,U-t,Q,V];case 90:return[d,U-Z,V,Q];case 180:return[F,U-Z,Q,V];case 270:return[F,U-t,V,Q];default:throw new Error("Invalid rotation")}}onceAdded(){}isEmpty(){return!1}enableEditMode(){this.#i=!0}disableEditMode(){this.#i=!1}isInEditMode(){return this.#i}shouldGetKeyboardEvents(){return this.#b}needsToBeRebuilt(){return this.div&&!this.isAttachedToDOM}#I(){if(this.#N||!this.div)return;this.#N=new AbortController;const l=this._uiManager.combinedSignal(this.#N);this.div.addEventListener("focusin",this.focusin.bind(this),{signal:l}),this.div.addEventListener("focusout",this.focusout.bind(this),{signal:l})}rebuild(){this.#I()}rotate(l){}resize(){}serializeDeleted(){return{id:this.annotationElementId,deleted:!0,pageIndex:this.pageIndex,popupRef:this._initialData?.popupRef||""}}serialize(l=!1,U=null){Zl("An editor must be serializable")}static async deserialize(l,U,d){const Z=new this.prototype.constructor({parent:U,id:U.getNextId(),uiManager:d});Z.rotation=l.rotation,Z.#l=l.accessibilityData;const[F,t]=Z.pageDimensions,[Q,V,W,R]=Z.getRectInCurrentCoords(l.rect,t);return Z.x=Q/F,Z.y=V/t,Z.width=W/F,Z.height=R/t,Z}get hasBeenModified(){return!!this.annotationElementId&&(this.deleted||this.serialize()!==null)}remove(){if(this.#N?.abort(),this.#N=null,this.isEmpty()||this.commit(),this.parent?this.parent.remove(this):this._uiManager.removeEditor(this),this.#h&&(clearTimeout(this.#h),this.#h=null),this.#L(),this.removeEditToolbar(),this.#G){for(const l of this.#G.values())clearTimeout(l);this.#G=null}this.parent=null}get isResizable(){return!1}makeResizable(){this.isResizable&&(this.#B(),this.#c.classList.remove("hidden"),qU(this,this.div,["keydown"]))}get toolbarPosition(){return null}keydown(l){if(!this.isResizable||l.target!==this.div||l.key!=="Enter")return;this._uiManager.setSelected(this),this.#V={savedX:this.x,savedY:this.y,savedWidth:this.width,savedHeight:this.height};const U=this.#c.children;if(!this.#U){this.#U=Array.from(U);const t=this.#x.bind(this),Q=this.#j.bind(this),V=this._uiManager._signal;for(const W of this.#U){const R=W.getAttribute("data-resizer-name");W.setAttribute("role","spinbutton"),W.addEventListener("keydown",t,{signal:V}),W.addEventListener("blur",Q,{signal:V}),W.addEventListener("focus",this.#w.bind(this,R),{signal:V}),W.setAttribute("data-l10n-id",P._l10nResizer[R])}}const d=this.#U[0];let Z=0;for(const t of U){if(t===d)break;Z++}const F=(360-this.rotation+this.parentRotation)%360/90*(this.#U.length/4);if(F!==Z){if(F<Z)for(let Q=0;Q<Z-F;Q++)this.#c.append(this.#c.firstChild);else if(F>Z)for(let Q=0;Q<F-Z;Q++)this.#c.firstChild.before(this.#c.lastChild);let t=0;for(const Q of U){const W=this.#U[t++].getAttribute("data-resizer-name");Q.setAttribute("data-l10n-id",P._l10nResizer[W])}}this.#k(0),this.#b=!0,this.#c.firstChild.focus({focusVisible:!0}),l.preventDefault(),l.stopImmediatePropagation()}#x(l){P._resizerKeyboardManager.exec(this,l)}#j(l){this.#b&&l.relatedTarget?.parentNode!==this.#c&&this.#L()}#w(l){this.#Q=this.#b?l:""}#k(l){if(this.#U)for(const U of this.#U)U.tabIndex=l}_resizeWithKeyboard(l,U){this.#b&&this.#T(this.#Q,{deltaX:l,deltaY:U,fromKeyboard:!0})}#L(){this.#b=!1,this.#k(-1),this.#D()}_stopResizingWithKeyboard(){this.#L(),this.div.focus()}select(){if(this.makeResizable(),this.div?.classList.add("selectedEditor"),!this._editToolbar){this.addEditToolbar().then(()=>{this.div?.classList.contains("selectedEditor")&&this._editToolbar?.show()});return}this._editToolbar?.show(),this.#d?.toggleAltTextBadge(!1)}unselect(){this.#c?.classList.add("hidden"),this.div?.classList.remove("selectedEditor"),this.div?.contains(document.activeElement)&&this._uiManager.currentLayer.div.focus({preventScroll:!0}),this._editToolbar?.hide(),this.#d?.toggleAltTextBadge(!0)}updateParams(l,U){}disableEditing(){}enableEditing(){}enterInEditMode(){}getImageForAltText(){return null}get contentDiv(){return this.div}get isEditing(){return this.#s}set isEditing(l){this.#s=l,this.parent&&(l?(this.parent.setSelected(this),this.parent.setActiveEditor(this)):this.parent.setActiveEditor(null))}setAspectRatio(l,U){this.#W=!0;const d=l/U,{style:Z}=this.div;Z.aspectRatio=d,Z.height="auto"}static get MIN_SIZE(){return 16}static canCreateNewEmptyEditor(){return!0}get telemetryInitialData(){return{action:"added"}}get telemetryFinalData(){return null}_reportTelemetry(l,U=!1){if(U){this.#G||=new Map;const{action:d}=l;let Z=this.#G.get(d);Z&&clearTimeout(Z),Z=setTimeout(()=>{this._reportTelemetry(l),this.#G.delete(d),this.#G.size===0&&(this.#G=null)},P._telemetryTimeout),this.#G.set(d,Z);return}l.type||=this.editorType,this._uiManager._eventBus.dispatch("reporttelemetry",{source:this,details:{type:"editing",data:l}})}show(l=this._isVisible){this.div.classList.toggle("hidden",!l),this._isVisible=l}enable(){this.div&&(this.div.tabIndex=0),this.#Z=!1}disable(){this.div&&(this.div.tabIndex=-1),this.#Z=!0}renderAnnotationElement(l){let U=l.container.querySelector(".annotationContent");if(!U)U=document.createElement("div"),U.classList.add("annotationContent",this.editorType),l.container.prepend(U);else if(U.nodeName==="CANVAS"){const d=U;U=document.createElement("div"),U.classList.add("annotationContent",this.editorType),d.before(U)}return U}resetAnnotationElement(l){const{firstChild:U}=l.container;U?.nodeName==="DIV"&&U.classList.contains("annotationContent")&&U.remove()}}class BW extends P{constructor(l){super(l),this.annotationElementId=l.annotationElementId,this.deleted=!0}serialize(){return this.serializeDeleted()}}const sZ=3285377520,xl=4294901760,Al=65535;class qZ{constructor(l){this.h1=l?l&4294967295:sZ,this.h2=l?l&4294967295:sZ}update(l){let U,d;if(typeof l=="string"){U=new Uint8Array(l.length*2),d=0;for(let b=0,i=l.length;b<i;b++){const h=l.charCodeAt(b);h<=255?U[d++]=h:(U[d++]=h>>>8,U[d++]=h&255)}}else if(ArrayBuffer.isView(l))U=l.slice(),d=U.byteLength;else throw new Error("Invalid data format, must be a string or TypedArray.");const Z=d>>2,F=d-Z*4,t=new Uint32Array(U.buffer,0,Z);let Q=0,V=0,W=this.h1,R=this.h2;const N=3432918353,n=461845907,s=N&Al,a=n&Al;for(let b=0;b<Z;b++)b&1?(Q=t[b],Q=Q*N&xl|Q*s&Al,Q=Q<<15|Q>>>17,Q=Q*n&xl|Q*a&Al,W^=Q,W=W<<13|W>>>19,W=W*5+3864292196):(V=t[b],V=V*N&xl|V*s&Al,V=V<<15|V>>>17,V=V*n&xl|V*a&Al,R^=V,R=R<<13|R>>>19,R=R*5+3864292196);switch(Q=0,F){case 3:Q^=U[Z*4+2]<<16;case 2:Q^=U[Z*4+1]<<8;case 1:Q^=U[Z*4],Q=Q*N&xl|Q*s&Al,Q=Q<<15|Q>>>17,Q=Q*n&xl|Q*a&Al,Z&1?W^=Q:R^=Q}this.h1=W,this.h2=R}hexdigest(){let l=this.h1,U=this.h2;return l^=U>>>1,l=l*3981806797&xl|l*36045&Al,U=U*4283543511&xl|((U<<16|l>>>16)*2950163797&xl)>>>16,l^=U>>>1,l=l*444984403&xl|l*60499&Al,U=U*3301882366&xl|((U<<16|l>>>16)*3120437893&xl)>>>16,l^=U>>>1,(l>>>0).toString(16).padStart(8,"0")+(U>>>0).toString(16).padStart(8,"0")}}const yd=Object.freeze({map:null,hash:"",transfer:void 0});class qd{#l=!1;#U=null;#d=new Map;constructor(){this.onSetModified=null,this.onResetModified=null,this.onAnnotationEditor=null}getValue(l,U){const d=this.#d.get(l);return d===void 0?U:Object.assign(U,d)}getRawValue(l){return this.#d.get(l)}remove(l){if(this.#d.delete(l),this.#d.size===0&&this.resetModified(),typeof this.onAnnotationEditor=="function"){for(const U of this.#d.values())if(U instanceof P)return;this.onAnnotationEditor(null)}}setValue(l,U){const d=this.#d.get(l);let Z=!1;if(d!==void 0)for(const[F,t]of Object.entries(U))d[F]!==t&&(Z=!0,d[F]=t);else Z=!0,this.#d.set(l,U);Z&&this.#Z(),U instanceof P&&typeof this.onAnnotationEditor=="function"&&this.onAnnotationEditor(U.constructor._type)}has(l){return this.#d.has(l)}getAll(){return this.#d.size>0?Kd(this.#d):null}setAll(l){for(const[U,d]of Object.entries(l))this.setValue(U,d)}get size(){return this.#d.size}#Z(){this.#l||(this.#l=!0,typeof this.onSetModified=="function"&&this.onSetModified())}resetModified(){this.#l&&(this.#l=!1,typeof this.onResetModified=="function"&&this.onResetModified())}get print(){return new $Z(this)}get serializable(){if(this.#d.size===0)return yd;const l=new Map,U=new qZ,d=[],Z=Object.create(null);let F=!1;for(const[t,Q]of this.#d){const V=Q instanceof P?Q.serialize(!1,Z):Q;V&&(l.set(t,V),U.update(`${t}:${JSON.stringify(V)}`),F||=!!V.bitmap)}if(F)for(const t of l.values())t.bitmap&&d.push(t.bitmap);return l.size>0?{map:l,hash:U.hexdigest(),transfer:d}:yd}get editorStats(){let l=null;const U=new Map;for(const d of this.#d.values()){if(!(d instanceof P))continue;const Z=d.telemetryFinalData;if(!Z)continue;const{type:F}=Z;U.has(F)||U.set(F,Object.getPrototypeOf(d).constructor),l||=Object.create(null);const t=l[F]||=new Map;for(const[Q,V]of Object.entries(Z)){if(Q==="type")continue;let W=t.get(Q);W||(W=new Map,t.set(Q,W));const R=W.get(V)??0;W.set(V,R+1)}}for(const[d,Z]of U)l[d]=Z.computeTelemetryFinalData(l[d]);return l}resetModifiedIds(){this.#U=null}get modifiedIds(){if(this.#U)return this.#U;const l=[];for(const U of this.#d.values())!(U instanceof P)||!U.annotationElementId||!U.serialize()||l.push(U.annotationElementId);return this.#U={ids:new Set(l),hash:l.join(",")}}}class $Z extends qd{#l;constructor(l){super();const{map:U,hash:d,transfer:Z}=l.serializable,F=structuredClone(U,Z?{transfer:Z}:null);this.#l={map:F,hash:d,transfer:Z}}get print(){Zl("Should not call PrintAnnotationStorage.print")}get serializable(){return this.#l}get modifiedIds(){return $(this,"modifiedIds",{ids:new Set,hash:""})}}class uW{#l=new Set;constructor({ownerDocument:l=globalThis.document,styleElement:U=null}){this._document=l,this.nativeFontFaces=new Set,this.styleElement=null,this.loadingRequests=[],this.loadTestFontId=0}addNativeFontFace(l){this.nativeFontFaces.add(l),this._document.fonts.add(l)}removeNativeFontFace(l){this.nativeFontFaces.delete(l),this._document.fonts.delete(l)}insertRule(l){this.styleElement||(this.styleElement=this._document.createElement("style"),this._document.documentElement.getElementsByTagName("head")[0].append(this.styleElement));const U=this.styleElement.sheet;U.insertRule(l,U.cssRules.length)}clear(){for(const l of this.nativeFontFaces)this._document.fonts.delete(l);this.nativeFontFaces.clear(),this.#l.clear(),this.styleElement&&(this.styleElement.remove(),this.styleElement=null)}async loadSystemFont({systemFontInfo:l,_inspectFont:U}){if(!(!l||this.#l.has(l.loadedName))){if(al(!this.disableFontFace,"loadSystemFont shouldn't be called when `disableFontFace` is set."),this.isFontLoadingAPISupported){const{loadedName:d,src:Z,style:F}=l,t=new FontFace(d,Z,F);this.addNativeFontFace(t);try{await t.load(),this.#l.add(d),U?.(l)}catch{f(`Cannot load system font: ${l.baseFontName}, installing it could help to improve PDF rendering.`),this.removeNativeFontFace(t)}return}Zl("Not implemented: loadSystemFont without the Font Loading API.")}}async bind(l){if(l.attached||l.missingFile&&!l.systemFontInfo)return;if(l.attached=!0,l.systemFontInfo){await this.loadSystemFont(l);return}if(this.isFontLoadingAPISupported){const d=l.createNativeFontFace();if(d){this.addNativeFontFace(d);try{await d.loaded}catch(Z){throw f(`Failed to load font '${d.family}': '${Z}'.`),l.disableFontFace=!0,Z}}return}const U=l.createFontFaceRule();if(U){if(this.insertRule(U),this.isSyncFontLoadingSupported)return;await new Promise(d=>{const Z=this._queueLoadingCallback(d);this._prepareFontLoadEvent(l,Z)})}}get isFontLoadingAPISupported(){const l=!!this._document?.fonts;return $(this,"isFontLoadingAPISupported",l)}get isSyncFontLoadingSupported(){let l=!1;return(pl||typeof navigator<"u"&&typeof navigator?.userAgent=="string"&&/Mozilla\/5.0.*?rv:\d+.*? Gecko/.test(navigator.userAgent))&&(l=!0),$(this,"isSyncFontLoadingSupported",l)}_queueLoadingCallback(l){function U(){for(al(!Z.done,"completeRequest() cannot be called twice."),Z.done=!0;d.length>0&&d[0].done;){const F=d.shift();setTimeout(F.callback,0)}}const{loadingRequests:d}=this,Z={done:!1,complete:U,callback:l};return d.push(Z),Z}get _loadTestFont(){const l=atob("T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQAFQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAAALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgAAAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACMAooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4DIP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAAAAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUAAQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgABAAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABYAAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAAAC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAAAAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQACAQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTjFQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==");return $(this,"_loadTestFont",l)}_prepareFontLoadEvent(l,U){function d(T,Y){return T.charCodeAt(Y)<<24|T.charCodeAt(Y+1)<<16|T.charCodeAt(Y+2)<<8|T.charCodeAt(Y+3)&255}function Z(T,Y,y,o){const u=T.substring(0,Y),p=T.substring(Y+y);return u+o+p}let F,t;const Q=this._document.createElement("canvas");Q.width=1,Q.height=1;const V=Q.getContext("2d");let W=0;function R(T,Y){if(++W>30){f("Load test font never loaded."),Y();return}if(V.font="30px "+T,V.fillText(".",0,20),V.getImageData(0,0,1,1).data[3]>0){Y();return}setTimeout(R.bind(null,T,Y))}const N=`lt${Date.now()}${this.loadTestFontId++}`;let n=this._loadTestFont;n=Z(n,976,N.length,N);const a=16,b=1482184792;let i=d(n,a);for(F=0,t=N.length-3;F<t;F+=4)i=i-b+d(N,F)|0;F<N.length&&(i=i-b+d(N+"XXX",F)|0),n=Z(n,a,4,sW(i));const h=`url(data:font/opentype;base64,${btoa(n)});`,G=`@font-face {font-family:"${N}";src:${h}}`;this.insertRule(G);const S=this._document.createElement("div");S.style.visibility="hidden",S.style.width=S.style.height="10px",S.style.position="absolute",S.style.top=S.style.left="0px";for(const T of[l.loadedName,N]){const Y=this._document.createElement("span");Y.textContent="Hi",Y.style.fontFamily=T,S.append(Y)}this._document.body.append(S),R(N,()=>{S.remove(),U.complete()})}}class pW{constructor(l,{disableFontFace:U=!1,inspectFont:d=null}){this.compiledGlyphs=Object.create(null);for(const Z in l)this[Z]=l[Z];this.disableFontFace=U===!0,this._inspectFont=d}createNativeFontFace(){if(!this.data||this.disableFontFace)return null;let l;if(!this.cssFontInfo)l=new FontFace(this.loadedName,this.data,{});else{const U={weight:this.cssFontInfo.fontWeight};this.cssFontInfo.italicAngle&&(U.style=`oblique ${this.cssFontInfo.italicAngle}deg`),l=new FontFace(this.cssFontInfo.fontFamily,this.data,U)}return this._inspectFont?.(this),l}createFontFaceRule(){if(!this.data||this.disableFontFace)return null;const l=`url(data:${this.mimetype};base64,${JW(this.data)});`;let U;if(!this.cssFontInfo)U=`@font-face {font-family:"${this.loadedName}";src:${l}}`;else{let d=`font-weight: ${this.cssFontInfo.fontWeight};`;this.cssFontInfo.italicAngle&&(d+=`font-style: oblique ${this.cssFontInfo.italicAngle}deg;`),U=`@font-face {font-family:"${this.cssFontInfo.fontFamily}";${d}src:${l}}`}return this._inspectFont?.(this,l),U}getPathGenerator(l,U){if(this.compiledGlyphs[U]!==void 0)return this.compiledGlyphs[U];let d;try{d=l.get(this.loadedName+"_path_"+U)}catch(F){f(`getPathGenerator - ignoring character: "${F}".`)}if(!Array.isArray(d)||d.length===0)return this.compiledGlyphs[U]=function(F,t){};const Z=[];for(let F=0,t=d.length;F<t;)switch(d[F++]){case lU.BEZIER_CURVE_TO:{const[Q,V,W,R,N,n]=d.slice(F,F+6);Z.push(s=>s.bezierCurveTo(Q,V,W,R,N,n)),F+=6}break;case lU.MOVE_TO:{const[Q,V]=d.slice(F,F+2);Z.push(W=>W.moveTo(Q,V)),F+=2}break;case lU.LINE_TO:{const[Q,V]=d.slice(F,F+2);Z.push(W=>W.lineTo(Q,V)),F+=2}break;case lU.QUADRATIC_CURVE_TO:{const[Q,V,W,R]=d.slice(F,F+4);Z.push(N=>N.quadraticCurveTo(Q,V,W,R)),F+=4}break;case lU.RESTORE:Z.push(Q=>Q.restore());break;case lU.SAVE:Z.push(Q=>Q.save());break;case lU.SCALE:al(Z.length===2,"Scale command is only valid at the third position.");break;case lU.TRANSFORM:{const[Q,V,W,R,N,n]=d.slice(F,F+6);Z.push(s=>s.transform(Q,V,W,R,N,n)),F+=6}break;case lU.TRANSLATE:{const[Q,V]=d.slice(F,F+2);Z.push(W=>W.translate(Q,V)),F+=2}break}return Z.push(F=>F.closePath()),this.compiledGlyphs[U]=function(t,Q){Z[0](t),Z[1](t),t.scale(Q,-Q);for(let V=2,W=Z.length;V<W;V++)Z[V](t)}}}class lF{#l=!1;constructor({enableHWA:l=!1}){this.#l=l}create(l,U){if(l<=0||U<=0)throw new Error("Invalid canvas size");const d=this._createCanvas(l,U);return{canvas:d,context:d.getContext("2d",{willReadFrequently:!this.#l})}}reset(l,U,d){if(!l.canvas)throw new Error("Canvas is not specified");if(U<=0||d<=0)throw new Error("Invalid canvas size");l.canvas.width=U,l.canvas.height=d}destroy(l){if(!l.canvas)throw new Error("Canvas is not specified");l.canvas.width=0,l.canvas.height=0,l.canvas=null,l.context=null}_createCanvas(l,U){Zl("Abstract method `_createCanvas` called.")}}class oW extends lF{constructor({ownerDocument:l=globalThis.document,enableHWA:U=!1}){super({enableHWA:U}),this._document=l}_createCanvas(l,U){const d=this._document.createElement("canvas");return d.width=l,d.height=U,d}}class UF{constructor({baseUrl:l=null,isCompressed:U=!0}){this.baseUrl=l,this.isCompressed=U}async fetch({name:l}){if(!this.baseUrl)throw new Error("Ensure that the `cMapUrl` and `cMapPacked` API parameters are provided.");if(!l)throw new Error("CMap name must be specified.");const U=this.baseUrl+l+(this.isCompressed?".bcmap":"");return this._fetch(U).then(d=>({cMapData:d,isCompressed:this.isCompressed})).catch(d=>{throw new Error(`Unable to load ${this.isCompressed?"binary ":""}CMap at: ${U}`)})}async _fetch(l){Zl("Abstract method `_fetch` called.")}}class dF extends UF{async _fetch(l){const U=await Rd(l,this.isCompressed?"arraybuffer":"text");return U instanceof ArrayBuffer?new Uint8Array(U):Wd(U)}}class ZF{addFilter(l){return"none"}addHCMFilter(l,U){return"none"}addAlphaFilter(l){return"none"}addLuminosityFilter(l){return"none"}addHighlightHCMFilter(l,U,d,Z,F){return"none"}destroy(l=!1){}}class yW extends ZF{#l;#U;#d;#Z;#t;#F;#W=0;constructor({docId:l,ownerDocument:U=globalThis.document}){super(),this.#Z=l,this.#t=U}get#c(){return this.#U||=new Map}get#R(){return this.#F||=new Map}get#V(){if(!this.#d){const l=this.#t.createElement("div"),{style:U}=l;U.visibility="hidden",U.contain="strict",U.width=U.height=0,U.position="absolute",U.top=U.left=0,U.zIndex=-1;const d=this.#t.createElementNS(UU,"svg");d.setAttribute("width",0),d.setAttribute("height",0),this.#d=this.#t.createElementNS(UU,"defs"),l.append(d),d.append(this.#d),this.#t.body.append(l)}return this.#d}#N(l){if(l.length===1){const V=l[0],W=new Array(256);for(let N=0;N<256;N++)W[N]=V[N]/255;const R=W.join(",");return[R,R,R]}const[U,d,Z]=l,F=new Array(256),t=new Array(256),Q=new Array(256);for(let V=0;V<256;V++)F[V]=U[V]/255,t[V]=d[V]/255,Q[V]=Z[V]/255;return[F.join(","),t.join(","),Q.join(",")]}#Q(l){if(this.#l===void 0){this.#l="";const U=this.#t.URL;U!==this.#t.baseURI&&(Nd(U)?f('#createUrl: ignore "data:"-URL for performance reasons.'):this.#l=U.split("#",1)[0])}return`url(${this.#l}#${l})`}addFilter(l){if(!l)return"none";let U=this.#c.get(l);if(U)return U;const[d,Z,F]=this.#N(l),t=l.length===1?d:`${d}${Z}${F}`;if(U=this.#c.get(t),U)return this.#c.set(l,U),U;const Q=`g_${this.#Z}_transfer_map_${this.#W++}`,V=this.#Q(Q);this.#c.set(l,V),this.#c.set(t,V);const W=this.#s(Q);return this.#b(d,Z,F,W),V}addHCMFilter(l,U){const d=`${l}-${U}`,Z="base";let F=this.#R.get(Z);if(F?.key===d||(F?(F.filter?.remove(),F.key=d,F.url="none",F.filter=null):(F={key:d,url:"none",filter:null},this.#R.set(Z,F)),!l||!U))return F.url;const t=this.#m(l);l=w.makeHexColor(...t);const Q=this.#m(U);if(U=w.makeHexColor(...Q),this.#V.style.color="",l==="#000000"&&U==="#ffffff"||l===U)return F.url;const V=new Array(256);for(let s=0;s<=255;s++){const a=s/255;V[s]=a<=.03928?a/12.92:((a+.055)/1.055)**2.4}const W=V.join(","),R=`g_${this.#Z}_hcm_filter`,N=F.filter=this.#s(R);this.#b(W,W,W,N),this.#a(N);const n=(s,a)=>{const b=t[s]/255,i=Q[s]/255,h=new Array(a+1);for(let G=0;G<=a;G++)h[G]=b+G/a*(i-b);return h.join(",")};return this.#b(n(0,5),n(1,5),n(2,5),N),F.url=this.#Q(R),F.url}addAlphaFilter(l){let U=this.#c.get(l);if(U)return U;const[d]=this.#N([l]),Z=`alpha_${d}`;if(U=this.#c.get(Z),U)return this.#c.set(l,U),U;const F=`g_${this.#Z}_alpha_map_${this.#W++}`,t=this.#Q(F);this.#c.set(l,t),this.#c.set(Z,t);const Q=this.#s(F);return this.#h(d,Q),t}addLuminosityFilter(l){let U=this.#c.get(l||"luminosity");if(U)return U;let d,Z;if(l?([d]=this.#N([l]),Z=`luminosity_${d}`):Z="luminosity",U=this.#c.get(Z),U)return this.#c.set(l,U),U;const F=`g_${this.#Z}_luminosity_map_${this.#W++}`,t=this.#Q(F);this.#c.set(l,t),this.#c.set(Z,t);const Q=this.#s(F);return this.#n(Q),l&&this.#h(d,Q),t}addHighlightHCMFilter(l,U,d,Z,F){const t=`${U}-${d}-${Z}-${F}`;let Q=this.#R.get(l);if(Q?.key===t||(Q?(Q.filter?.remove(),Q.key=t,Q.url="none",Q.filter=null):(Q={key:t,url:"none",filter:null},this.#R.set(l,Q)),!U||!d))return Q.url;const[V,W]=[U,d].map(this.#m.bind(this));let R=Math.round(.2126*V[0]+.7152*V[1]+.0722*V[2]),N=Math.round(.2126*W[0]+.7152*W[1]+.0722*W[2]),[n,s]=[Z,F].map(this.#m.bind(this));N<R&&([R,N,n,s]=[N,R,s,n]),this.#V.style.color="";const a=(h,G,S)=>{const T=new Array(256),Y=(N-R)/S,y=h/255,o=(G-h)/(255*S);let u=0;for(let p=0;p<=S;p++){const z=Math.round(R+p*Y),j=y+p*o;for(let ll=u;ll<=z;ll++)T[ll]=j;u=z+1}for(let p=u;p<256;p++)T[p]=T[u-1];return T.join(",")},b=`g_${this.#Z}_hcm_${l}_filter`,i=Q.filter=this.#s(b);return this.#a(i),this.#b(a(n[0],s[0],5),a(n[1],s[1],5),a(n[2],s[2],5),i),Q.url=this.#Q(b),Q.url}destroy(l=!1){l&&this.#F?.size||(this.#d?.parentNode.parentNode.remove(),this.#d=null,this.#U?.clear(),this.#U=null,this.#F?.clear(),this.#F=null,this.#W=0)}#n(l){const U=this.#t.createElementNS(UU,"feColorMatrix");U.setAttribute("type","matrix"),U.setAttribute("values","0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0.59 0.11 0 0"),l.append(U)}#a(l){const U=this.#t.createElementNS(UU,"feColorMatrix");U.setAttribute("type","matrix"),U.setAttribute("values","0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0"),l.append(U)}#s(l){const U=this.#t.createElementNS(UU,"filter");return U.setAttribute("color-interpolation-filters","sRGB"),U.setAttribute("id",l),this.#V.append(U),U}#i(l,U,d){const Z=this.#t.createElementNS(UU,U);Z.setAttribute("type","discrete"),Z.setAttribute("tableValues",d),l.append(Z)}#b(l,U,d,Z){const F=this.#t.createElementNS(UU,"feComponentTransfer");Z.append(F),this.#i(F,"feFuncR",l),this.#i(F,"feFuncG",U),this.#i(F,"feFuncB",d)}#h(l,U){const d=this.#t.createElementNS(UU,"feComponentTransfer");U.append(d),this.#i(d,"feFuncA",l)}#m(l){return this.#V.style.color=l,fd(getComputedStyle(this.#V).getPropertyValue("color"))}}class FF{constructor({baseUrl:l=null}){this.baseUrl=l}async fetch({filename:l}){if(!this.baseUrl)throw new Error("Ensure that the `standardFontDataUrl` API parameter is provided.");if(!l)throw new Error("Font filename must be specified.");const U=`${this.baseUrl}${l}`;return this._fetch(U).catch(d=>{throw new Error(`Unable to load font data at: ${U}`)})}async _fetch(l){Zl("Abstract method `_fetch` called.")}}class tF extends FF{async _fetch(l){const U=await Rd(l,"arraybuffer");return new Uint8Array(U)}}async function QF(c){const U=await process.getBuiltinModule("fs").promises.readFile(c);return new Uint8Array(U)}class LW extends ZF{}class zW extends lF{_createCanvas(l,U){return process.getBuiltinModule("module").createRequire("file:///home/runner/work/pdf.js/pdf.js/src/display/node_utils.js")("@napi-rs/canvas").createCanvas(l,U)}}class kW extends UF{async _fetch(l){return QF(l)}}class DW extends FF{async _fetch(l){return QF(l)}}const Sl={FILL:"Fill",STROKE:"Stroke",SHADING:"Shading"};function Ld(c,l){if(!l)return;const U=l[2]-l[0],d=l[3]-l[1],Z=new Path2D;Z.rect(l[0],l[1],U,d),c.clip(Z)}class $d{getPattern(){Zl("Abstract method `getPattern` called.")}}class IW extends $d{constructor(l){super(),this._type=l[1],this._bbox=l[2],this._colorStops=l[3],this._p0=l[4],this._p1=l[5],this._r0=l[6],this._r1=l[7],this.matrix=null}_createGradient(l){let U;this._type==="axial"?U=l.createLinearGradient(this._p0[0],this._p0[1],this._p1[0],this._p1[1]):this._type==="radial"&&(U=l.createRadialGradient(this._p0[0],this._p0[1],this._r0,this._p1[0],this._p1[1],this._r1));for(const d of this._colorStops)U.addColorStop(d[0],d[1]);return U}getPattern(l,U,d,Z){let F;if(Z===Sl.STROKE||Z===Sl.FILL){const t=U.current.getClippedPathBoundingBox(Z,cl(l))||[0,0,0,0],Q=Math.ceil(t[2]-t[0])||1,V=Math.ceil(t[3]-t[1])||1,W=U.cachedCanvases.getCanvas("pattern",Q,V),R=W.context;R.clearRect(0,0,R.canvas.width,R.canvas.height),R.beginPath(),R.rect(0,0,R.canvas.width,R.canvas.height),R.translate(-t[0],-t[1]),d=w.transform(d,[1,0,0,1,t[0],t[1]]),R.transform(...U.baseTransform),this.matrix&&R.transform(...this.matrix),Ld(R,this._bbox),R.fillStyle=this._createGradient(R),R.fill(),F=l.createPattern(W.canvas,"no-repeat");const N=new DOMMatrix(d);F.setTransform(N)}else Ld(l,this._bbox),F=this._createGradient(l);return F}}function Jd(c,l,U,d,Z,F,t,Q){const V=l.coords,W=l.colors,R=c.data,N=c.width*4;let n;V[U+1]>V[d+1]&&(n=U,U=d,d=n,n=F,F=t,t=n),V[d+1]>V[Z+1]&&(n=d,d=Z,Z=n,n=t,t=Q,Q=n),V[U+1]>V[d+1]&&(n=U,U=d,d=n,n=F,F=t,t=n);const s=(V[U]+l.offsetX)*l.scaleX,a=(V[U+1]+l.offsetY)*l.scaleY,b=(V[d]+l.offsetX)*l.scaleX,i=(V[d+1]+l.offsetY)*l.scaleY,h=(V[Z]+l.offsetX)*l.scaleX,G=(V[Z+1]+l.offsetY)*l.scaleY;if(a>=G)return;const S=W[F],T=W[F+1],Y=W[F+2],y=W[t],o=W[t+1],u=W[t+2],p=W[Q],z=W[Q+1],j=W[Q+2],ll=Math.round(a),Fl=Math.round(G);let _,nl,q,C,O,yl,Il,Ll;for(let el=ll;el<=Fl;el++){if(el<i){const Ql=el<a?0:(a-el)/(a-i);_=s-(s-b)*Ql,nl=S-(S-y)*Ql,q=T-(T-o)*Ql,C=Y-(Y-u)*Ql}else{let Ql;el>G?Ql=1:i===G?Ql=0:Ql=(i-el)/(i-G),_=b-(b-h)*Ql,nl=y-(y-p)*Ql,q=o-(o-z)*Ql,C=u-(u-j)*Ql}let bl;el<a?bl=0:el>G?bl=1:bl=(a-el)/(a-G),O=s-(s-h)*bl,yl=S-(S-p)*bl,Il=T-(T-z)*bl,Ll=Y-(Y-j)*bl;const hU=Math.round(Math.min(_,O)),XU=Math.round(Math.max(_,O));let zl=N*el+hU*4;for(let Ql=hU;Ql<=XU;Ql++)bl=(_-Ql)/(_-O),bl<0?bl=0:bl>1&&(bl=1),R[zl++]=nl-(nl-yl)*bl|0,R[zl++]=q-(q-Il)*bl|0,R[zl++]=C-(C-Ll)*bl|0,R[zl++]=255}}function EW(c,l,U){const d=l.coords,Z=l.colors;let F,t;switch(l.type){case"lattice":const Q=l.verticesPerRow,V=Math.floor(d.length/Q)-1,W=Q-1;for(F=0;F<V;F++){let R=F*Q;for(let N=0;N<W;N++,R++)Jd(c,U,d[R],d[R+1],d[R+Q],Z[R],Z[R+1],Z[R+Q]),Jd(c,U,d[R+Q+1],d[R+1],d[R+Q],Z[R+Q+1],Z[R+1],Z[R+Q])}break;case"triangles":for(F=0,t=d.length;F<t;F+=3)Jd(c,U,d[F],d[F+1],d[F+2],Z[F],Z[F+1],Z[F+2]);break;default:throw new Error("illegal figure")}}class CW extends $d{constructor(l){super(),this._coords=l[2],this._colors=l[3],this._figures=l[4],this._bounds=l[5],this._bbox=l[7],this._background=l[8],this.matrix=null}_createMeshCanvas(l,U,d){const Q=Math.floor(this._bounds[0]),V=Math.floor(this._bounds[1]),W=Math.ceil(this._bounds[2])-Q,R=Math.ceil(this._bounds[3])-V,N=Math.min(Math.ceil(Math.abs(W*l[0]*1.1)),3e3),n=Math.min(Math.ceil(Math.abs(R*l[1]*1.1)),3e3),s=W/N,a=R/n,b={coords:this._coords,colors:this._colors,offsetX:-Q,offsetY:-V,scaleX:1/s,scaleY:1/a},i=N+2*2,h=n+2*2,G=d.getCanvas("mesh",i,h),S=G.context,T=S.createImageData(N,n);if(U){const y=T.data;for(let o=0,u=y.length;o<u;o+=4)y[o]=U[0],y[o+1]=U[1],y[o+2]=U[2],y[o+3]=255}for(const y of this._figures)EW(T,y,b);return S.putImageData(T,2,2),{canvas:G.canvas,offsetX:Q-2*s,offsetY:V-2*a,scaleX:s,scaleY:a}}getPattern(l,U,d,Z){Ld(l,this._bbox);let F;if(Z===Sl.SHADING)F=w.singularValueDecompose2dScale(cl(l));else if(F=w.singularValueDecompose2dScale(U.baseTransform),this.matrix){const Q=w.singularValueDecompose2dScale(this.matrix);F=[F[0]*Q[0],F[1]*Q[1]]}const t=this._createMeshCanvas(F,Z===Sl.SHADING?null:this._background,U.cachedCanvases);return Z!==Sl.SHADING&&(l.setTransform(...U.baseTransform),this.matrix&&l.transform(...this.matrix)),l.translate(t.offsetX,t.offsetY),l.scale(t.scaleX,t.scaleY),l.createPattern(t.canvas,"no-repeat")}}class wW extends $d{getPattern(){return"hotpink"}}function xW(c){switch(c[0]){case"RadialAxial":return new IW(c);case"Mesh":return new CW(c);case"Dummy":return new wW}throw new Error(`Unknown IR type: ${c[0]}`)}const aZ={COLORED:1,UNCOLORED:2};class lZ{static MAX_PATTERN_SIZE=3e3;constructor(l,U,d,Z,F){this.operatorList=l[2],this.matrix=l[3],this.bbox=l[4],this.xstep=l[5],this.ystep=l[6],this.paintType=l[7],this.tilingType=l[8],this.color=U,this.ctx=d,this.canvasGraphicsFactory=Z,this.baseTransform=F}createPatternCanvas(l){const{bbox:U,operatorList:d,paintType:Z,tilingType:F,color:t,canvasGraphicsFactory:Q}=this;let{xstep:V,ystep:W}=this;V=Math.abs(V),W=Math.abs(W),cd("TilingType: "+F);const R=U[0],N=U[1],n=U[2],s=U[3],a=n-R,b=s-N,i=w.singularValueDecompose2dScale(this.matrix),h=w.singularValueDecompose2dScale(this.baseTransform),G=i[0]*h[0],S=i[1]*h[1];let T=a,Y=b,y=!1,o=!1;const u=Math.ceil(V*G),p=Math.ceil(W*S),z=Math.ceil(a*G),j=Math.ceil(b*S);u>=z?T=V:y=!0,p>=j?Y=W:o=!0;const ll=this.getSizeAndScale(T,this.ctx.canvas.width,G),Fl=this.getSizeAndScale(Y,this.ctx.canvas.height,S),_=l.cachedCanvases.getCanvas("pattern",ll.size,Fl.size),nl=_.context,q=Q.createCanvasGraphics(nl);if(q.groupLevel=l.groupLevel,this.setFillAndStrokeStyleToContext(q,Z,t),nl.translate(-ll.scale*R,-Fl.scale*N),q.transform(ll.scale,0,0,Fl.scale,0,0),nl.save(),this.clipBbox(q,R,N,n,s),q.baseTransform=cl(q.ctx),q.executeOperatorList(d),q.endDrawing(),nl.restore(),y||o){const C=_.canvas;y&&(T=V),o&&(Y=W);const O=this.getSizeAndScale(T,this.ctx.canvas.width,G),yl=this.getSizeAndScale(Y,this.ctx.canvas.height,S),Il=O.size,Ll=yl.size,el=l.cachedCanvases.getCanvas("pattern-workaround",Il,Ll),bl=el.context,hU=y?Math.floor(a/V):0,XU=o?Math.floor(b/W):0;for(let zl=0;zl<=hU;zl++)for(let Ql=0;Ql<=XU;Ql++)bl.drawImage(C,Il*zl,Ll*Ql,Il,Ll,0,0,Il,Ll);return{canvas:el.canvas,scaleX:O.scale,scaleY:yl.scale,offsetX:R,offsetY:N}}return{canvas:_.canvas,scaleX:ll.scale,scaleY:Fl.scale,offsetX:R,offsetY:N}}getSizeAndScale(l,U,d){const Z=Math.max(lZ.MAX_PATTERN_SIZE,U);let F=Math.ceil(l*d);return F>=Z?F=Z:d=F/l,{scale:d,size:F}}clipBbox(l,U,d,Z,F){const t=Z-U,Q=F-d;l.ctx.rect(U,d,t,Q),l.current.updateRectMinMax(cl(l.ctx),[U,d,Z,F]),l.clip(),l.endPath()}setFillAndStrokeStyleToContext(l,U,d){const Z=l.ctx,F=l.current;switch(U){case aZ.COLORED:const t=this.ctx;Z.fillStyle=t.fillStyle,Z.strokeStyle=t.strokeStyle,F.fillColor=t.fillStyle,F.strokeColor=t.strokeStyle;break;case aZ.UNCOLORED:const Q=w.makeHexColor(d[0],d[1],d[2]);Z.fillStyle=Q,Z.strokeStyle=Q,F.fillColor=Q,F.strokeColor=Q;break;default:throw new nW(`Unsupported paint type: ${U}`)}}getPattern(l,U,d,Z){let F=d;Z!==Sl.SHADING&&(F=w.transform(F,U.baseTransform),this.matrix&&(F=w.transform(F,this.matrix)));const t=this.createPatternCanvas(U);let Q=new DOMMatrix(F);Q=Q.translate(t.offsetX,t.offsetY),Q=Q.scale(1/t.scaleX,1/t.scaleY);const V=l.createPattern(t.canvas,"repeat");return V.setTransform(Q),V}}function jW({src:c,srcPos:l=0,dest:U,width:d,height:Z,nonBlackColor:F=4294967295,inverseDecode:t=!1}){const Q=ol.isLittleEndian?4278190080:255,[V,W]=t?[F,Q]:[Q,F],R=d>>3,N=d&7,n=c.length;U=new Uint32Array(U.buffer);let s=0;for(let a=0;a<Z;a++){for(const i=l+R;l<i;l++){const h=l<n?c[l]:255;U[s++]=h&128?W:V,U[s++]=h&64?W:V,U[s++]=h&32?W:V,U[s++]=h&16?W:V,U[s++]=h&8?W:V,U[s++]=h&4?W:V,U[s++]=h&2?W:V,U[s++]=h&1?W:V}if(N===0)continue;const b=l<n?c[l++]:255;for(let i=0;i<N;i++)U[s++]=b&1<<7-i?W:V}return{srcPos:l,destPos:s}}const bZ=16,iZ=100,OW=15,hZ=10,mZ=1e3,Dl=16;function rW(c,l){if(c._removeMirroring)throw new Error("Context is already forwarding operations.");c.__originalSave=c.save,c.__originalRestore=c.restore,c.__originalRotate=c.rotate,c.__originalScale=c.scale,c.__originalTranslate=c.translate,c.__originalTransform=c.transform,c.__originalSetTransform=c.setTransform,c.__originalResetTransform=c.resetTransform,c.__originalClip=c.clip,c.__originalMoveTo=c.moveTo,c.__originalLineTo=c.lineTo,c.__originalBezierCurveTo=c.bezierCurveTo,c.__originalRect=c.rect,c.__originalClosePath=c.closePath,c.__originalBeginPath=c.beginPath,c._removeMirroring=()=>{c.save=c.__originalSave,c.restore=c.__originalRestore,c.rotate=c.__originalRotate,c.scale=c.__originalScale,c.translate=c.__originalTranslate,c.transform=c.__originalTransform,c.setTransform=c.__originalSetTransform,c.resetTransform=c.__originalResetTransform,c.clip=c.__originalClip,c.moveTo=c.__originalMoveTo,c.lineTo=c.__originalLineTo,c.bezierCurveTo=c.__originalBezierCurveTo,c.rect=c.__originalRect,c.closePath=c.__originalClosePath,c.beginPath=c.__originalBeginPath,delete c._removeMirroring},c.save=function(){l.save(),this.__originalSave()},c.restore=function(){l.restore(),this.__originalRestore()},c.translate=function(d,Z){l.translate(d,Z),this.__originalTranslate(d,Z)},c.scale=function(d,Z){l.scale(d,Z),this.__originalScale(d,Z)},c.transform=function(d,Z,F,t,Q,V){l.transform(d,Z,F,t,Q,V),this.__originalTransform(d,Z,F,t,Q,V)},c.setTransform=function(d,Z,F,t,Q,V){l.setTransform(d,Z,F,t,Q,V),this.__originalSetTransform(d,Z,F,t,Q,V)},c.resetTransform=function(){l.resetTransform(),this.__originalResetTransform()},c.rotate=function(d){l.rotate(d),this.__originalRotate(d)},c.clip=function(d){l.clip(d),this.__originalClip(d)},c.moveTo=function(U,d){l.moveTo(U,d),this.__originalMoveTo(U,d)},c.lineTo=function(U,d){l.lineTo(U,d),this.__originalLineTo(U,d)},c.bezierCurveTo=function(U,d,Z,F,t,Q){l.bezierCurveTo(U,d,Z,F,t,Q),this.__originalBezierCurveTo(U,d,Z,F,t,Q)},c.rect=function(U,d,Z,F){l.rect(U,d,Z,F),this.__originalRect(U,d,Z,F)},c.closePath=function(){l.closePath(),this.__originalClosePath()},c.beginPath=function(){l.beginPath(),this.__originalBeginPath()}}class gW{constructor(l){this.canvasFactory=l,this.cache=Object.create(null)}getCanvas(l,U,d){let Z;return this.cache[l]!==void 0?(Z=this.cache[l],this.canvasFactory.reset(Z,U,d)):(Z=this.canvasFactory.create(U,d),this.cache[l]=Z),Z}delete(l){delete this.cache[l]}clear(){for(const l in this.cache){const U=this.cache[l];this.canvasFactory.destroy(U),delete this.cache[l]}}}function rU(c,l,U,d,Z,F,t,Q,V,W){const[R,N,n,s,a,b]=cl(c);if(N===0&&n===0){const G=t*R+a,S=Math.round(G),T=Q*s+b,Y=Math.round(T),y=(t+V)*R+a,o=Math.abs(Math.round(y)-S)||1,u=(Q+W)*s+b,p=Math.abs(Math.round(u)-Y)||1;return c.setTransform(Math.sign(R),0,0,Math.sign(s),S,Y),c.drawImage(l,U,d,Z,F,0,0,o,p),c.setTransform(R,N,n,s,a,b),[o,p]}if(R===0&&s===0){const G=Q*n+a,S=Math.round(G),T=t*N+b,Y=Math.round(T),y=(Q+W)*n+a,o=Math.abs(Math.round(y)-S)||1,u=(t+V)*N+b,p=Math.abs(Math.round(u)-Y)||1;return c.setTransform(0,Math.sign(N),Math.sign(n),0,S,Y),c.drawImage(l,U,d,Z,F,0,0,p,o),c.setTransform(R,N,n,s,a,b),[p,o]}c.drawImage(l,U,d,Z,F,t,Q,V,W);const i=Math.hypot(R,N),h=Math.hypot(n,s);return[i*V,h*W]}function KW(c){const{width:l,height:U}=c;if(l>mZ||U>mZ)return null;const d=1e3,Z=new Uint8Array([0,2,4,0,1,0,5,4,8,10,0,8,0,2,1,0]),F=l+1;let t=new Uint8Array(F*(U+1)),Q,V,W;const R=l+7&-8;let N=new Uint8Array(R*U),n=0;for(const h of c.data){let G=128;for(;G>0;)N[n++]=h&G?0:255,G>>=1}let s=0;for(n=0,N[n]!==0&&(t[0]=1,++s),V=1;V<l;V++)N[n]!==N[n+1]&&(t[V]=N[n]?2:1,++s),n++;for(N[n]!==0&&(t[V]=2,++s),Q=1;Q<U;Q++){n=Q*R,W=Q*F,N[n-R]!==N[n]&&(t[W]=N[n]?1:8,++s);let h=(N[n]?4:0)+(N[n-R]?8:0);for(V=1;V<l;V++)h=(h>>2)+(N[n+1]?4:0)+(N[n-R+1]?8:0),Z[h]&&(t[W+V]=Z[h],++s),n++;if(N[n-R]!==N[n]&&(t[W+V]=N[n]?2:4,++s),s>d)return null}for(n=R*(U-1),W=Q*F,N[n]!==0&&(t[W]=8,++s),V=1;V<l;V++)N[n]!==N[n+1]&&(t[W+V]=N[n]?4:8,++s),n++;if(N[n]!==0&&(t[W+V]=4,++s),s>d)return null;const a=new Int32Array([0,F,-1,0,-F,0,0,0,1]),b=new Path2D;for(Q=0;s&&Q<=U;Q++){let h=Q*F;const G=h+l;for(;h<G&&!t[h];)h++;if(h===G)continue;b.moveTo(h%F,Q);const S=h;let T=t[h];do{const Y=a[T];do h+=Y;while(!t[h]);const y=t[h];y!==5&&y!==10?(T=y,t[h]=0):(T=y&51*T>>4,t[h]&=T>>2|T<<2),b.lineTo(h%F,h/F|0),t[h]||--s}while(S!==h);--Q}return N=null,t=null,function(h){h.save(),h.scale(1/l,-1/U),h.translate(0,-U),h.fill(b),h.beginPath(),h.restore()}}class JZ{constructor(l,U){this.alphaIsShape=!1,this.fontSize=0,this.fontSizeScale=1,this.textMatrix=PZ,this.textMatrixScale=1,this.fontMatrix=Bd,this.leading=0,this.x=0,this.y=0,this.lineX=0,this.lineY=0,this.charSpacing=0,this.wordSpacing=0,this.textHScale=1,this.textRenderingMode=Tl.FILL,this.textRise=0,this.fillColor="#000000",this.strokeColor="#000000",this.patternFill=!1,this.patternStroke=!1,this.fillAlpha=1,this.strokeAlpha=1,this.lineWidth=1,this.activeSMask=null,this.transferMaps="none",this.startNewPathAndClipBox([0,0,l,U])}clone(){const l=Object.create(this);return l.clipBox=this.clipBox.slice(),l}setCurrentPoint(l,U){this.x=l,this.y=U}updatePathMinMax(l,U,d){[U,d]=w.applyTransform([U,d],l),this.minX=Math.min(this.minX,U),this.minY=Math.min(this.minY,d),this.maxX=Math.max(this.maxX,U),this.maxY=Math.max(this.maxY,d)}updateRectMinMax(l,U){const d=w.applyTransform(U,l),Z=w.applyTransform(U.slice(2),l),F=w.applyTransform([U[0],U[3]],l),t=w.applyTransform([U[2],U[1]],l);this.minX=Math.min(this.minX,d[0],Z[0],F[0],t[0]),this.minY=Math.min(this.minY,d[1],Z[1],F[1],t[1]),this.maxX=Math.max(this.maxX,d[0],Z[0],F[0],t[0]),this.maxY=Math.max(this.maxY,d[1],Z[1],F[1],t[1])}updateScalingPathMinMax(l,U){w.scaleMinMax(l,U),this.minX=Math.min(this.minX,U[0]),this.minY=Math.min(this.minY,U[1]),this.maxX=Math.max(this.maxX,U[2]),this.maxY=Math.max(this.maxY,U[3])}updateCurvePathMinMax(l,U,d,Z,F,t,Q,V,W,R){const N=w.bezierBoundingBox(U,d,Z,F,t,Q,V,W,R);R||this.updateRectMinMax(l,N)}getPathBoundingBox(l=Sl.FILL,U=null){const d=[this.minX,this.minY,this.maxX,this.maxY];if(l===Sl.STROKE){U||Zl("Stroke bounding box must include transform.");const Z=w.singularValueDecompose2dScale(U),F=Z[0]*this.lineWidth/2,t=Z[1]*this.lineWidth/2;d[0]-=F,d[1]-=t,d[2]+=F,d[3]+=t}return d}updateClipFromPath(){const l=w.intersect(this.clipBox,this.getPathBoundingBox());this.startNewPathAndClipBox(l||[0,0,0,0])}isEmptyClip(){return this.minX===1/0}startNewPathAndClipBox(l){this.clipBox=l,this.minX=1/0,this.minY=1/0,this.maxX=0,this.maxY=0}getClippedPathBoundingBox(l=Sl.FILL,U=null){return w.intersect(this.clipBox,this.getPathBoundingBox(l,U))}}function MZ(c,l){if(l instanceof ImageData){c.putImageData(l,0,0);return}const U=l.height,d=l.width,Z=U%Dl,F=(U-Z)/Dl,t=Z===0?F:F+1,Q=c.createImageData(d,Dl);let V=0,W;const R=l.data,N=Q.data;let n,s,a,b;if(l.kind===AU.GRAYSCALE_1BPP){const i=R.byteLength,h=new Uint32Array(N.buffer,0,N.byteLength>>2),G=h.length,S=d+7>>3,T=4294967295,Y=ol.isLittleEndian?4278190080:255;for(n=0;n<t;n++){for(a=n<F?Dl:Z,W=0,s=0;s<a;s++){const y=i-V;let o=0;const u=y>S?d:y*8-7,p=u&-8;let z=0,j=0;for(;o<p;o+=8)j=R[V++],h[W++]=j&128?T:Y,h[W++]=j&64?T:Y,h[W++]=j&32?T:Y,h[W++]=j&16?T:Y,h[W++]=j&8?T:Y,h[W++]=j&4?T:Y,h[W++]=j&2?T:Y,h[W++]=j&1?T:Y;for(;o<u;o++)z===0&&(j=R[V++],z=128),h[W++]=j&z?T:Y,z>>=1}for(;W<G;)h[W++]=0;c.putImageData(Q,0,n*Dl)}}else if(l.kind===AU.RGBA_32BPP){for(s=0,b=d*Dl*4,n=0;n<F;n++)N.set(R.subarray(V,V+b)),V+=b,c.putImageData(Q,0,s),s+=Dl;n<t&&(b=d*Z*4,N.set(R.subarray(V,V+b)),c.putImageData(Q,0,s))}else if(l.kind===AU.RGB_24BPP)for(a=Dl,b=d*a,n=0;n<t;n++){for(n>=F&&(a=Z,b=d*a),W=0,s=b;s--;)N[W++]=R[V++],N[W++]=R[V++],N[W++]=R[V++],N[W++]=255;c.putImageData(Q,0,n*Dl)}else throw new Error(`bad image kind: ${l.kind}`)}function GZ(c,l){if(l.bitmap){c.drawImage(l.bitmap,0,0);return}const U=l.height,d=l.width,Z=U%Dl,F=(U-Z)/Dl,t=Z===0?F:F+1,Q=c.createImageData(d,Dl);let V=0;const W=l.data,R=Q.data;for(let N=0;N<t;N++){const n=N<F?Dl:Z;({srcPos:V}=jW({src:W,srcPos:V,dest:R,width:d,height:n,nonBlackColor:0})),c.putImageData(Q,0,N*Dl)}}function BU(c,l){const U=["strokeStyle","fillStyle","fillRule","globalAlpha","lineWidth","lineCap","lineJoin","miterLimit","globalCompositeOperation","font","filter"];for(const d of U)c[d]!==void 0&&(l[d]=c[d]);c.setLineDash!==void 0&&(l.setLineDash(c.getLineDash()),l.lineDashOffset=c.lineDashOffset)}function gU(c){if(c.strokeStyle=c.fillStyle="#000000",c.fillRule="nonzero",c.globalAlpha=1,c.lineWidth=1,c.lineCap="butt",c.lineJoin="miter",c.miterLimit=10,c.globalCompositeOperation="source-over",c.font="10px sans-serif",c.setLineDash!==void 0&&(c.setLineDash([]),c.lineDashOffset=0),!pl){const{filter:l}=c;l!=="none"&&l!==""&&(c.filter="none")}}function eZ(c,l){if(l)return!0;const U=w.singularValueDecompose2dScale(c);U[0]=Math.fround(U[0]),U[1]=Math.fround(U[1]);const d=Math.fround((globalThis.devicePixelRatio||1)*SU.PDF_TO_CSS_UNITS);return U[0]<=d&&U[1]<=d}const HW=["butt","round","square"],vW=["miter","round","bevel"],PW={},TZ={};class TU{constructor(l,U,d,Z,F,{optionalContentConfig:t,markedContentStack:Q=null},V,W){this.ctx=l,this.current=new JZ(this.ctx.canvas.width,this.ctx.canvas.height),this.stateStack=[],this.pendingClip=null,this.pendingEOFill=!1,this.res=null,this.xobjs=null,this.commonObjs=U,this.objs=d,this.canvasFactory=Z,this.filterFactory=F,this.groupStack=[],this.processingType3=null,this.baseTransform=null,this.baseTransformStack=[],this.groupLevel=0,this.smaskStack=[],this.smaskCounter=0,this.tempSMask=null,this.suspendedCtx=null,this.contentVisible=!0,this.markedContentStack=Q||[],this.optionalContentConfig=t,this.cachedCanvases=new gW(this.canvasFactory),this.cachedPatterns=new Map,this.annotationCanvasMap=V,this.viewportScale=1,this.outputScaleX=1,this.outputScaleY=1,this.pageColors=W,this._cachedScaleForStroking=[-1,0],this._cachedGetSinglePixelWidth=null,this._cachedBitmapsMap=new Map}getObject(l,U=null){return typeof l=="string"?l.startsWith("g_")?this.commonObjs.get(l):this.objs.get(l):U}beginDrawing({transform:l,viewport:U,transparency:d=!1,background:Z=null}){const F=this.ctx.canvas.width,t=this.ctx.canvas.height,Q=this.ctx.fillStyle;if(this.ctx.fillStyle=Z||"#ffffff",this.ctx.fillRect(0,0,F,t),this.ctx.fillStyle=Q,d){const V=this.cachedCanvases.getCanvas("transparent",F,t);this.compositeCtx=this.ctx,this.transparentCanvas=V.canvas,this.ctx=V.context,this.ctx.save(),this.ctx.transform(...cl(this.compositeCtx))}this.ctx.save(),gU(this.ctx),l&&(this.ctx.transform(...l),this.outputScaleX=l[0],this.outputScaleY=l[0]),this.ctx.transform(...U.transform),this.viewportScale=U.scale,this.baseTransform=cl(this.ctx)}executeOperatorList(l,U,d,Z){const F=l.argsArray,t=l.fnArray;let Q=U||0;const V=F.length;if(V===Q)return Q;const W=V-Q>hZ&&typeof d=="function",R=W?Date.now()+OW:0;let N=0;const n=this.commonObjs,s=this.objs;let a;for(;;){if(Z!==void 0&&Q===Z.nextBreakPoint)return Z.breakIt(Q,d),Q;if(a=t[Q],a!==rl.dependency)this[a].apply(this,F[Q]);else for(const b of F[Q]){const i=b.startsWith("g_")?n:s;if(!i.has(b))return i.get(b,d),Q}if(Q++,Q===V)return Q;if(W&&++N>hZ){if(Date.now()>R)return d(),Q;N=0}}}#l(){for(;this.stateStack.length||this.inSMaskMode;)this.restore();this.current.activeSMask=null,this.ctx.restore(),this.transparentCanvas&&(this.ctx=this.compositeCtx,this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.drawImage(this.transparentCanvas,0,0),this.ctx.restore(),this.transparentCanvas=null)}endDrawing(){this.#l(),this.cachedCanvases.clear(),this.cachedPatterns.clear();for(const l of this._cachedBitmapsMap.values()){for(const U of l.values())typeof HTMLCanvasElement<"u"&&U instanceof HTMLCanvasElement&&(U.width=U.height=0);l.clear()}this._cachedBitmapsMap.clear(),this.#U()}#U(){if(this.pageColors){const l=this.filterFactory.addHCMFilter(this.pageColors.foreground,this.pageColors.background);if(l!=="none"){const U=this.ctx.filter;this.ctx.filter=l,this.ctx.drawImage(this.ctx.canvas,0,0),this.ctx.filter=U}}}_scaleImage(l,U){const d=l.width??l.displayWidth,Z=l.height??l.displayHeight;let F=Math.max(Math.hypot(U[0],U[1]),1),t=Math.max(Math.hypot(U[2],U[3]),1),Q=d,V=Z,W="prescale1",R,N;for(;F>2&&Q>1||t>2&&V>1;){let n=Q,s=V;F>2&&Q>1&&(n=Q>=16384?Math.floor(Q/2)-1||1:Math.ceil(Q/2),F/=Q/n),t>2&&V>1&&(s=V>=16384?Math.floor(V/2)-1||1:Math.ceil(V)/2,t/=V/s),R=this.cachedCanvases.getCanvas(W,n,s),N=R.context,N.clearRect(0,0,n,s),N.drawImage(l,0,0,Q,V,0,0,n,s),l=R.canvas,Q=n,V=s,W=W==="prescale1"?"prescale2":"prescale1"}return{img:l,paintWidth:Q,paintHeight:V}}_createMaskCanvas(l){const U=this.ctx,{width:d,height:Z}=l,F=this.current.fillColor,t=this.current.patternFill,Q=cl(U);let V,W,R,N;if((l.bitmap||l.data)&&l.count>1){const u=l.bitmap||l.data.buffer;W=JSON.stringify(t?Q:[Q.slice(0,4),F]),V=this._cachedBitmapsMap.get(u),V||(V=new Map,this._cachedBitmapsMap.set(u,V));const p=V.get(W);if(p&&!t){const z=Math.round(Math.min(Q[0],Q[2])+Q[4]),j=Math.round(Math.min(Q[1],Q[3])+Q[5]);return{canvas:p,offsetX:z,offsetY:j}}R=p}R||(N=this.cachedCanvases.getCanvas("maskCanvas",d,Z),GZ(N.context,l));let n=w.transform(Q,[1/d,0,0,-1/Z,0,0]);n=w.transform(n,[1,0,0,1,0,-Z]);const[s,a,b,i]=w.getAxialAlignedBoundingBox([0,0,d,Z],n),h=Math.round(b-s)||1,G=Math.round(i-a)||1,S=this.cachedCanvases.getCanvas("fillCanvas",h,G),T=S.context,Y=s,y=a;T.translate(-Y,-y),T.transform(...n),R||(R=this._scaleImage(N.canvas,fl(T)),R=R.img,V&&t&&V.set(W,R)),T.imageSmoothingEnabled=eZ(cl(T),l.interpolate),rU(T,R,0,0,R.width,R.height,0,0,d,Z),T.globalCompositeOperation="source-in";const o=w.transform(fl(T),[1,0,0,1,-Y,-y]);return T.fillStyle=t?F.getPattern(U,this,o,Sl.FILL):F,T.fillRect(0,0,d,Z),V&&!t&&(this.cachedCanvases.delete("fillCanvas"),V.set(W,S.canvas)),{canvas:S.canvas,offsetX:Math.round(Y),offsetY:Math.round(y)}}setLineWidth(l){l!==this.current.lineWidth&&(this._cachedScaleForStroking[0]=-1),this.current.lineWidth=l,this.ctx.lineWidth=l}setLineCap(l){this.ctx.lineCap=HW[l]}setLineJoin(l){this.ctx.lineJoin=vW[l]}setMiterLimit(l){this.ctx.miterLimit=l}setDash(l,U){const d=this.ctx;d.setLineDash!==void 0&&(d.setLineDash(l),d.lineDashOffset=U)}setRenderingIntent(l){}setFlatness(l){}setGState(l){for(const[U,d]of l)switch(U){case"LW":this.setLineWidth(d);break;case"LC":this.setLineCap(d);break;case"LJ":this.setLineJoin(d);break;case"ML":this.setMiterLimit(d);break;case"D":this.setDash(d[0],d[1]);break;case"RI":this.setRenderingIntent(d);break;case"FL":this.setFlatness(d);break;case"Font":this.setFont(d[0],d[1]);break;case"CA":this.current.strokeAlpha=d;break;case"ca":this.current.fillAlpha=d,this.ctx.globalAlpha=d;break;case"BM":this.ctx.globalCompositeOperation=d;break;case"SMask":this.current.activeSMask=d?this.tempSMask:null,this.tempSMask=null,this.checkSMaskState();break;case"TR":this.ctx.filter=this.current.transferMaps=this.filterFactory.addFilter(d);break}}get inSMaskMode(){return!!this.suspendedCtx}checkSMaskState(){const l=this.inSMaskMode;this.current.activeSMask&&!l?this.beginSMaskMode():!this.current.activeSMask&&l&&this.endSMaskMode()}beginSMaskMode(){if(this.inSMaskMode)throw new Error("beginSMaskMode called while already in smask mode");const l=this.ctx.canvas.width,U=this.ctx.canvas.height,d="smaskGroupAt"+this.groupLevel,Z=this.cachedCanvases.getCanvas(d,l,U);this.suspendedCtx=this.ctx,this.ctx=Z.context;const F=this.ctx;F.setTransform(...cl(this.suspendedCtx)),BU(this.suspendedCtx,F),rW(F,this.suspendedCtx),this.setGState([["BM","source-over"],["ca",1],["CA",1]])}endSMaskMode(){if(!this.inSMaskMode)throw new Error("endSMaskMode called while not in smask mode");this.ctx._removeMirroring(),BU(this.ctx,this.suspendedCtx),this.ctx=this.suspendedCtx,this.suspendedCtx=null}compose(l){if(!this.current.activeSMask)return;l?(l[0]=Math.floor(l[0]),l[1]=Math.floor(l[1]),l[2]=Math.ceil(l[2]),l[3]=Math.ceil(l[3])):l=[0,0,this.ctx.canvas.width,this.ctx.canvas.height];const U=this.current.activeSMask,d=this.suspendedCtx;this.composeSMask(d,U,this.ctx,l),this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height),this.ctx.restore()}composeSMask(l,U,d,Z){const F=Z[0],t=Z[1],Q=Z[2]-F,V=Z[3]-t;Q===0||V===0||(this.genericComposeSMask(U.context,d,Q,V,U.subtype,U.backdrop,U.transferMap,F,t,U.offsetX,U.offsetY),l.save(),l.globalAlpha=1,l.globalCompositeOperation="source-over",l.setTransform(1,0,0,1,0,0),l.drawImage(d.canvas,0,0),l.restore())}genericComposeSMask(l,U,d,Z,F,t,Q,V,W,R,N){let n=l.canvas,s=V-R,a=W-N;if(t){const i=w.makeHexColor(...t);if(s<0||a<0||s+d>n.width||a+Z>n.height){const h=this.cachedCanvases.getCanvas("maskExtension",d,Z),G=h.context;G.drawImage(n,-s,-a),G.globalCompositeOperation="destination-atop",G.fillStyle=i,G.fillRect(0,0,d,Z),G.globalCompositeOperation="source-over",n=h.canvas,s=a=0}else{l.save(),l.globalAlpha=1,l.setTransform(1,0,0,1,0,0);const h=new Path2D;h.rect(s,a,d,Z),l.clip(h),l.globalCompositeOperation="destination-atop",l.fillStyle=i,l.fillRect(s,a,d,Z),l.restore()}}U.save(),U.globalAlpha=1,U.setTransform(1,0,0,1,0,0),F==="Alpha"&&Q?U.filter=this.filterFactory.addAlphaFilter(Q):F==="Luminosity"&&(U.filter=this.filterFactory.addLuminosityFilter(Q));const b=new Path2D;b.rect(V,W,d,Z),U.clip(b),U.globalCompositeOperation="destination-in",U.drawImage(n,s,a,d,Z,V,W,d,Z),U.restore()}save(){this.inSMaskMode?(BU(this.ctx,this.suspendedCtx),this.suspendedCtx.save()):this.ctx.save();const l=this.current;this.stateStack.push(l),this.current=l.clone()}restore(){this.stateStack.length===0&&this.inSMaskMode&&this.endSMaskMode(),this.stateStack.length!==0&&(this.current=this.stateStack.pop(),this.inSMaskMode?(this.suspendedCtx.restore(),BU(this.suspendedCtx,this.ctx)):this.ctx.restore(),this.checkSMaskState(),this.pendingClip=null,this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null)}transform(l,U,d,Z,F,t){this.ctx.transform(l,U,d,Z,F,t),this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null}constructPath(l,U,d){const Z=this.ctx,F=this.current;let t=F.x,Q=F.y,V,W;const R=cl(Z),N=R[0]===0&&R[3]===0||R[1]===0&&R[2]===0,n=N?d.slice(0):null;for(let s=0,a=0,b=l.length;s<b;s++)switch(l[s]|0){case rl.rectangle:t=U[a++],Q=U[a++];const i=U[a++],h=U[a++],G=t+i,S=Q+h;Z.moveTo(t,Q),i===0||h===0?Z.lineTo(G,S):(Z.lineTo(G,Q),Z.lineTo(G,S),Z.lineTo(t,S)),N||F.updateRectMinMax(R,[t,Q,G,S]),Z.closePath();break;case rl.moveTo:t=U[a++],Q=U[a++],Z.moveTo(t,Q),N||F.updatePathMinMax(R,t,Q);break;case rl.lineTo:t=U[a++],Q=U[a++],Z.lineTo(t,Q),N||F.updatePathMinMax(R,t,Q);break;case rl.curveTo:V=t,W=Q,t=U[a+4],Q=U[a+5],Z.bezierCurveTo(U[a],U[a+1],U[a+2],U[a+3],t,Q),F.updateCurvePathMinMax(R,V,W,U[a],U[a+1],U[a+2],U[a+3],t,Q,n),a+=6;break;case rl.curveTo2:V=t,W=Q,Z.bezierCurveTo(t,Q,U[a],U[a+1],U[a+2],U[a+3]),F.updateCurvePathMinMax(R,V,W,t,Q,U[a],U[a+1],U[a+2],U[a+3],n),t=U[a+2],Q=U[a+3],a+=4;break;case rl.curveTo3:V=t,W=Q,t=U[a+2],Q=U[a+3],Z.bezierCurveTo(U[a],U[a+1],t,Q,t,Q),F.updateCurvePathMinMax(R,V,W,U[a],U[a+1],t,Q,t,Q,n),a+=4;break;case rl.closePath:Z.closePath();break}N&&F.updateScalingPathMinMax(R,n),F.setCurrentPoint(t,Q)}closePath(){this.ctx.closePath()}stroke(l=!0){const U=this.ctx,d=this.current.strokeColor;U.globalAlpha=this.current.strokeAlpha,this.contentVisible&&(typeof d=="object"&&d?.getPattern?(U.save(),U.strokeStyle=d.getPattern(U,this,fl(U),Sl.STROKE),this.rescaleAndStroke(!1),U.restore()):this.rescaleAndStroke(!0)),l&&this.consumePath(this.current.getClippedPathBoundingBox()),U.globalAlpha=this.current.fillAlpha}closeStroke(){this.closePath(),this.stroke()}fill(l=!0){const U=this.ctx,d=this.current.fillColor,Z=this.current.patternFill;let F=!1;Z&&(U.save(),U.fillStyle=d.getPattern(U,this,fl(U),Sl.FILL),F=!0);const t=this.current.getClippedPathBoundingBox();this.contentVisible&&t!==null&&(this.pendingEOFill?(U.fill("evenodd"),this.pendingEOFill=!1):U.fill()),F&&U.restore(),l&&this.consumePath(t)}eoFill(){this.pendingEOFill=!0,this.fill()}fillStroke(){this.fill(!1),this.stroke(!1),this.consumePath()}eoFillStroke(){this.pendingEOFill=!0,this.fillStroke()}closeFillStroke(){this.closePath(),this.fillStroke()}closeEOFillStroke(){this.pendingEOFill=!0,this.closePath(),this.fillStroke()}endPath(){this.consumePath()}clip(){this.pendingClip=PW}eoClip(){this.pendingClip=TZ}beginText(){this.current.textMatrix=PZ,this.current.textMatrixScale=1,this.current.x=this.current.lineX=0,this.current.y=this.current.lineY=0}endText(){const l=this.pendingTextPaths,U=this.ctx;if(l===void 0){U.beginPath();return}U.save(),U.beginPath();for(const d of l)U.setTransform(...d.transform),U.translate(d.x,d.y),d.addToPath(U,d.fontSize);U.restore(),U.clip(),U.beginPath(),delete this.pendingTextPaths}setCharSpacing(l){this.current.charSpacing=l}setWordSpacing(l){this.current.wordSpacing=l}setHScale(l){this.current.textHScale=l/100}setLeading(l){this.current.leading=-l}setFont(l,U){const d=this.commonObjs.get(l),Z=this.current;if(!d)throw new Error(`Can't find font for ${l}`);if(Z.fontMatrix=d.fontMatrix||Bd,(Z.fontMatrix[0]===0||Z.fontMatrix[3]===0)&&f("Invalid font matrix for font "+l),U<0?(U=-U,Z.fontDirection=-1):Z.fontDirection=1,this.current.font=d,this.current.fontSize=U,d.isType3Font)return;const F=d.loadedName||"sans-serif",t=d.systemFontInfo?.css||`"${F}", ${d.fallbackName}`;let Q="normal";d.black?Q="900":d.bold&&(Q="bold");const V=d.italic?"italic":"normal";let W=U;U<bZ?W=bZ:U>iZ&&(W=iZ),this.current.fontSizeScale=U/W,this.ctx.font=`${V} ${Q} ${W}px ${t}`}setTextRenderingMode(l){this.current.textRenderingMode=l}setTextRise(l){this.current.textRise=l}moveText(l,U){this.current.x=this.current.lineX+=l,this.current.y=this.current.lineY+=U}setLeadingMoveText(l,U){this.setLeading(-U),this.moveText(l,U)}setTextMatrix(l,U,d,Z,F,t){this.current.textMatrix=[l,U,d,Z,F,t],this.current.textMatrixScale=Math.hypot(l,U),this.current.x=this.current.lineX=0,this.current.y=this.current.lineY=0}nextLine(){this.moveText(0,this.current.leading)}paintChar(l,U,d,Z,F){const t=this.ctx,Q=this.current,V=Q.font,W=Q.textRenderingMode,R=Q.fontSize/Q.fontSizeScale,N=W&Tl.FILL_STROKE_MASK,n=!!(W&Tl.ADD_TO_PATH_FLAG),s=Q.patternFill&&!V.missingFile,a=Q.patternStroke&&!V.missingFile;let b;(V.disableFontFace||n||s||a)&&(b=V.getPathGenerator(this.commonObjs,l)),V.disableFontFace||s||a?(t.save(),t.translate(U,d),t.beginPath(),b(t,R),(N===Tl.FILL||N===Tl.FILL_STROKE)&&(Z&&t.setTransform(...Z),t.fill()),(N===Tl.STROKE||N===Tl.FILL_STROKE)&&(F&&t.setTransform(...F),t.stroke()),t.restore()):((N===Tl.FILL||N===Tl.FILL_STROKE)&&t.fillText(l,U,d),(N===Tl.STROKE||N===Tl.FILL_STROKE)&&t.strokeText(l,U,d)),n&&(this.pendingTextPaths||=[]).push({transform:cl(t),x:U,y:d,fontSize:R,addToPath:b})}get isFontSubpixelAAEnabled(){const{context:l}=this.cachedCanvases.getCanvas("isFontSubpixelAAEnabled",10,10);l.scale(1.5,1),l.fillText("I",0,10);const U=l.getImageData(0,0,10,10).data;let d=!1;for(let Z=3;Z<U.length;Z+=4)if(U[Z]>0&&U[Z]<255){d=!0;break}return $(this,"isFontSubpixelAAEnabled",d)}showText(l){const U=this.current,d=U.font;if(d.isType3Font)return this.showType3Text(l);const Z=U.fontSize;if(Z===0)return;const F=this.ctx,t=U.fontSizeScale,Q=U.charSpacing,V=U.wordSpacing,W=U.fontDirection,R=U.textHScale*W,N=l.length,n=d.vertical,s=n?1:-1,a=d.defaultVMetrics,b=Z*U.fontMatrix[0],i=U.textRenderingMode===Tl.FILL&&!d.disableFontFace&&!U.patternFill;F.save(),F.transform(...U.textMatrix),F.translate(U.x,U.y+U.textRise),W>0?F.scale(R,-1):F.scale(R,1);let h,G;if(U.patternFill){F.save();const o=U.fillColor.getPattern(F,this,fl(F),Sl.FILL);h=cl(F),F.restore(),F.fillStyle=o}if(U.patternStroke){F.save();const o=U.strokeColor.getPattern(F,this,fl(F),Sl.STROKE);G=cl(F),F.restore(),F.strokeStyle=o}let S=U.lineWidth;const T=U.textMatrixScale;if(T===0||S===0){const o=U.textRenderingMode&Tl.FILL_STROKE_MASK;(o===Tl.STROKE||o===Tl.FILL_STROKE)&&(S=this.getSinglePixelWidth())}else S/=T;if(t!==1&&(F.scale(t,t),S/=t),F.lineWidth=S,d.isInvalidPDFjsFont){const o=[];let u=0;for(const p of l)o.push(p.unicode),u+=p.width;F.fillText(o.join(""),0,0),U.x+=u*b*R,F.restore(),this.compose();return}let Y=0,y;for(y=0;y<N;++y){const o=l[y];if(typeof o=="number"){Y+=s*o*Z/1e3;continue}let u=!1;const p=(o.isSpace?V:0)+Q,z=o.fontChar,j=o.accent;let ll,Fl,_=o.width;if(n){const q=o.vmetric||a,C=-(o.vmetric?q[1]:_*.5)*b,O=q[2]*b;_=q?-q[0]:_,ll=C/t,Fl=(Y+O)/t}else ll=Y/t,Fl=0;if(d.remeasure&&_>0){const q=F.measureText(z).width*1e3/Z*t;if(_<q&&this.isFontSubpixelAAEnabled){const C=_/q;u=!0,F.save(),F.scale(C,1),ll/=C}else _!==q&&(ll+=(_-q)/2e3*Z/t)}if(this.contentVisible&&(o.isInFont||d.missingFile)){if(i&&!j)F.fillText(z,ll,Fl);else if(this.paintChar(z,ll,Fl,h,G),j){const q=ll+Z*j.offset.x/t,C=Fl-Z*j.offset.y/t;this.paintChar(j.fontChar,q,C,h,G)}}const nl=n?_*b-p*W:_*b+p*W;Y+=nl,u&&F.restore()}n?U.y-=Y:U.x+=Y*R,F.restore(),this.compose()}showType3Text(l){const U=this.ctx,d=this.current,Z=d.font,F=d.fontSize,t=d.fontDirection,Q=Z.vertical?1:-1,V=d.charSpacing,W=d.wordSpacing,R=d.textHScale*t,N=d.fontMatrix||Bd,n=l.length,s=d.textRenderingMode===Tl.INVISIBLE;let a,b,i,h;if(!(s||F===0)){for(this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null,U.save(),U.transform(...d.textMatrix),U.translate(d.x,d.y),U.scale(R,t),a=0;a<n;++a){if(b=l[a],typeof b=="number"){h=Q*b*F/1e3,this.ctx.translate(h,0),d.x+=h*R;continue}const G=(b.isSpace?W:0)+V,S=Z.charProcOperatorList[b.operatorListId];if(!S){f(`Type3 character "${b.operatorListId}" is not available.`);continue}this.contentVisible&&(this.processingType3=b,this.save(),U.scale(F,F),U.transform(...N),this.executeOperatorList(S),this.restore()),i=w.applyTransform([b.width,0],N)[0]*F+G,U.translate(i,0),d.x+=i*R}U.restore(),this.processingType3=null}}setCharWidth(l,U){}setCharWidthAndBounds(l,U,d,Z,F,t){this.ctx.rect(d,Z,F-d,t-Z),this.ctx.clip(),this.endPath()}getColorN_Pattern(l){let U;if(l[0]==="TilingPattern"){const d=l[1],Z=this.baseTransform||cl(this.ctx),F={createCanvasGraphics:t=>new TU(t,this.commonObjs,this.objs,this.canvasFactory,this.filterFactory,{optionalContentConfig:this.optionalContentConfig,markedContentStack:this.markedContentStack})};U=new lZ(l,d,this.ctx,F,Z)}else U=this._getPattern(l[1],l[2]);return U}setStrokeColorN(){this.current.strokeColor=this.getColorN_Pattern(arguments),this.current.patternStroke=!0}setFillColorN(){this.current.fillColor=this.getColorN_Pattern(arguments),this.current.patternFill=!0}setStrokeRGBColor(l,U,d){this.ctx.strokeStyle=this.current.strokeColor=w.makeHexColor(l,U,d),this.current.patternStroke=!1}setStrokeTransparent(){this.ctx.strokeStyle=this.current.strokeColor="transparent",this.current.patternStroke=!1}setFillRGBColor(l,U,d){this.ctx.fillStyle=this.current.fillColor=w.makeHexColor(l,U,d),this.current.patternFill=!1}setFillTransparent(){this.ctx.fillStyle=this.current.fillColor="transparent",this.current.patternFill=!1}_getPattern(l,U=null){let d;return this.cachedPatterns.has(l)?d=this.cachedPatterns.get(l):(d=xW(this.getObject(l)),this.cachedPatterns.set(l,d)),U&&(d.matrix=U),d}shadingFill(l){if(!this.contentVisible)return;const U=this.ctx;this.save();const d=this._getPattern(l);U.fillStyle=d.getPattern(U,this,fl(U),Sl.SHADING);const Z=fl(U);if(Z){const{width:F,height:t}=U.canvas,[Q,V,W,R]=w.getAxialAlignedBoundingBox([0,0,F,t],Z);this.ctx.fillRect(Q,V,W-Q,R-V)}else this.ctx.fillRect(-1e10,-1e10,2e10,2e10);this.compose(this.current.getClippedPathBoundingBox()),this.restore()}beginInlineImage(){Zl("Should not call beginInlineImage")}beginImageData(){Zl("Should not call beginImageData")}paintFormXObjectBegin(l,U){if(this.contentVisible&&(this.save(),this.baseTransformStack.push(this.baseTransform),l&&this.transform(...l),this.baseTransform=cl(this.ctx),U)){const d=U[2]-U[0],Z=U[3]-U[1];this.ctx.rect(U[0],U[1],d,Z),this.current.updateRectMinMax(cl(this.ctx),U),this.clip(),this.endPath()}}paintFormXObjectEnd(){this.contentVisible&&(this.restore(),this.baseTransform=this.baseTransformStack.pop())}beginGroup(l){if(!this.contentVisible)return;this.save(),this.inSMaskMode&&(this.endSMaskMode(),this.current.activeSMask=null);const U=this.ctx;l.isolated||cd("TODO: Support non-isolated groups."),l.knockout&&f("Knockout groups not supported.");const d=cl(U);if(l.matrix&&U.transform(...l.matrix),!l.bbox)throw new Error("Bounding box is required.");let Z=w.getAxialAlignedBoundingBox(l.bbox,cl(U));const F=[0,0,U.canvas.width,U.canvas.height];Z=w.intersect(Z,F)||[0,0,0,0];const t=Math.floor(Z[0]),Q=Math.floor(Z[1]),V=Math.max(Math.ceil(Z[2])-t,1),W=Math.max(Math.ceil(Z[3])-Q,1);this.current.startNewPathAndClipBox([0,0,V,W]);let R="groupAt"+this.groupLevel;l.smask&&(R+="_smask_"+this.smaskCounter++%2);const N=this.cachedCanvases.getCanvas(R,V,W),n=N.context;n.translate(-t,-Q),n.transform(...d),l.smask?this.smaskStack.push({canvas:N.canvas,context:n,offsetX:t,offsetY:Q,subtype:l.smask.subtype,backdrop:l.smask.backdrop,transferMap:l.smask.transferMap||null,startTransformInverse:null}):(U.setTransform(1,0,0,1,0,0),U.translate(t,Q),U.save()),BU(U,n),this.ctx=n,this.setGState([["BM","source-over"],["ca",1],["CA",1]]),this.groupStack.push(U),this.groupLevel++}endGroup(l){if(!this.contentVisible)return;this.groupLevel--;const U=this.ctx,d=this.groupStack.pop();if(this.ctx=d,this.ctx.imageSmoothingEnabled=!1,l.smask)this.tempSMask=this.smaskStack.pop(),this.restore();else{this.ctx.restore();const Z=cl(this.ctx);this.restore(),this.ctx.save(),this.ctx.setTransform(...Z);const F=w.getAxialAlignedBoundingBox([0,0,U.canvas.width,U.canvas.height],Z);this.ctx.drawImage(U.canvas,0,0),this.ctx.restore(),this.compose(F)}}beginAnnotation(l,U,d,Z,F){if(this.#l(),gU(this.ctx),this.ctx.save(),this.save(),this.baseTransform&&this.ctx.setTransform(...this.baseTransform),U){const t=U[2]-U[0],Q=U[3]-U[1];if(F&&this.annotationCanvasMap){d=d.slice(),d[4]-=U[0],d[5]-=U[1],U=U.slice(),U[0]=U[1]=0,U[2]=t,U[3]=Q;const[V,W]=w.singularValueDecompose2dScale(cl(this.ctx)),{viewportScale:R}=this,N=Math.ceil(t*this.outputScaleX*R),n=Math.ceil(Q*this.outputScaleY*R);this.annotationCanvas=this.canvasFactory.create(N,n);const{canvas:s,context:a}=this.annotationCanvas;this.annotationCanvasMap.set(l,s),this.annotationCanvas.savedCtx=this.ctx,this.ctx=a,this.ctx.save(),this.ctx.setTransform(V,0,0,-W,0,Q*W),gU(this.ctx)}else gU(this.ctx),this.endPath(),this.ctx.rect(U[0],U[1],t,Q),this.ctx.clip(),this.ctx.beginPath()}this.current=new JZ(this.ctx.canvas.width,this.ctx.canvas.height),this.transform(...d),this.transform(...Z)}endAnnotation(){this.annotationCanvas&&(this.ctx.restore(),this.#U(),this.ctx=this.annotationCanvas.savedCtx,delete this.annotationCanvas.savedCtx,delete this.annotationCanvas)}paintImageMaskXObject(l){if(!this.contentVisible)return;const U=l.count;l=this.getObject(l.data,l),l.count=U;const d=this.ctx,Z=this.processingType3;if(Z&&(Z.compiled===void 0&&(Z.compiled=KW(l)),Z.compiled)){Z.compiled(d);return}const F=this._createMaskCanvas(l),t=F.canvas;d.save(),d.setTransform(1,0,0,1,0,0),d.drawImage(t,F.offsetX,F.offsetY),d.restore(),this.compose()}paintImageMaskXObjectRepeat(l,U,d=0,Z=0,F,t){if(!this.contentVisible)return;l=this.getObject(l.data,l);const Q=this.ctx;Q.save();const V=cl(Q);Q.transform(U,d,Z,F,0,0);const W=this._createMaskCanvas(l);Q.setTransform(1,0,0,1,W.offsetX-V[4],W.offsetY-V[5]);for(let R=0,N=t.length;R<N;R+=2){const n=w.transform(V,[U,d,Z,F,t[R],t[R+1]]),[s,a]=w.applyTransform([0,0],n);Q.drawImage(W.canvas,s,a)}Q.restore(),this.compose()}paintImageMaskXObjectGroup(l){if(!this.contentVisible)return;const U=this.ctx,d=this.current.fillColor,Z=this.current.patternFill;for(const F of l){const{data:t,width:Q,height:V,transform:W}=F,R=this.cachedCanvases.getCanvas("maskCanvas",Q,V),N=R.context;N.save();const n=this.getObject(t,F);GZ(N,n),N.globalCompositeOperation="source-in",N.fillStyle=Z?d.getPattern(N,this,fl(U),Sl.FILL):d,N.fillRect(0,0,Q,V),N.restore(),U.save(),U.transform(...W),U.scale(1,-1),rU(U,R.canvas,0,0,Q,V,0,-1,1,1),U.restore()}this.compose()}paintImageXObject(l){if(!this.contentVisible)return;const U=this.getObject(l);if(!U){f("Dependent image isn't ready yet");return}this.paintInlineImageXObject(U)}paintImageXObjectRepeat(l,U,d,Z){if(!this.contentVisible)return;const F=this.getObject(l);if(!F){f("Dependent image isn't ready yet");return}const t=F.width,Q=F.height,V=[];for(let W=0,R=Z.length;W<R;W+=2)V.push({transform:[U,0,0,d,Z[W],Z[W+1]],x:0,y:0,w:t,h:Q});this.paintInlineImageXObjectGroup(F,V)}applyTransferMapsToCanvas(l){return this.current.transferMaps!=="none"&&(l.filter=this.current.transferMaps,l.drawImage(l.canvas,0,0),l.filter="none"),l.canvas}applyTransferMapsToBitmap(l){if(this.current.transferMaps==="none")return l.bitmap;const{bitmap:U,width:d,height:Z}=l,F=this.cachedCanvases.getCanvas("inlineImage",d,Z),t=F.context;return t.filter=this.current.transferMaps,t.drawImage(U,0,0),t.filter="none",F.canvas}paintInlineImageXObject(l){if(!this.contentVisible)return;const U=l.width,d=l.height,Z=this.ctx;if(this.save(),!pl){const{filter:Q}=Z;Q!=="none"&&Q!==""&&(Z.filter="none")}Z.scale(1/U,-1/d);let F;if(l.bitmap)F=this.applyTransferMapsToBitmap(l);else if(typeof HTMLElement=="function"&&l instanceof HTMLElement||!l.data)F=l;else{const V=this.cachedCanvases.getCanvas("inlineImage",U,d).context;MZ(V,l),F=this.applyTransferMapsToCanvas(V)}const t=this._scaleImage(F,fl(Z));Z.imageSmoothingEnabled=eZ(cl(Z),l.interpolate),rU(Z,t.img,0,0,t.paintWidth,t.paintHeight,0,-d,U,d),this.compose(),this.restore()}paintInlineImageXObjectGroup(l,U){if(!this.contentVisible)return;const d=this.ctx;let Z;if(l.bitmap)Z=l.bitmap;else{const F=l.width,t=l.height,V=this.cachedCanvases.getCanvas("inlineImage",F,t).context;MZ(V,l),Z=this.applyTransferMapsToCanvas(V)}for(const F of U)d.save(),d.transform(...F.transform),d.scale(1,-1),rU(d,Z,F.x,F.y,F.w,F.h,0,-1,1,1),d.restore();this.compose()}paintSolidColorImageMask(){this.contentVisible&&(this.ctx.fillRect(0,0,1,1),this.compose())}markPoint(l){}markPointProps(l,U){}beginMarkedContent(l){this.markedContentStack.push({visible:!0})}beginMarkedContentProps(l,U){l==="OC"?this.markedContentStack.push({visible:this.optionalContentConfig.isVisible(U)}):this.markedContentStack.push({visible:!0}),this.contentVisible=this.isContentVisible()}endMarkedContent(){this.markedContentStack.pop(),this.contentVisible=this.isContentVisible()}beginCompat(){}endCompat(){}consumePath(l){const U=this.current.isEmptyClip();this.pendingClip&&this.current.updateClipFromPath(),this.pendingClip||this.compose(l);const d=this.ctx;this.pendingClip&&(U||(this.pendingClip===TZ?d.clip("evenodd"):d.clip()),this.pendingClip=null),this.current.startNewPathAndClipBox(this.current.clipBox),d.beginPath()}getSinglePixelWidth(){if(!this._cachedGetSinglePixelWidth){const l=cl(this.ctx);if(l[1]===0&&l[2]===0)this._cachedGetSinglePixelWidth=1/Math.min(Math.abs(l[0]),Math.abs(l[3]));else{const U=Math.abs(l[0]*l[3]-l[2]*l[1]),d=Math.hypot(l[0],l[2]),Z=Math.hypot(l[1],l[3]);this._cachedGetSinglePixelWidth=Math.max(d,Z)/U}}return this._cachedGetSinglePixelWidth}getScaleForStroking(){if(this._cachedScaleForStroking[0]===-1){const{lineWidth:l}=this.current,{a:U,b:d,c:Z,d:F}=this.ctx.getTransform();let t,Q;if(d===0&&Z===0){const V=Math.abs(U),W=Math.abs(F);if(V===W)if(l===0)t=Q=1/V;else{const R=V*l;t=Q=R<1?1/R:1}else if(l===0)t=1/V,Q=1/W;else{const R=V*l,N=W*l;t=R<1?1/R:1,Q=N<1?1/N:1}}else{const V=Math.abs(U*F-d*Z),W=Math.hypot(U,d),R=Math.hypot(Z,F);if(l===0)t=R/V,Q=W/V;else{const N=l*V;t=R>N?R/N:1,Q=W>N?W/N:1}}this._cachedScaleForStroking[0]=t,this._cachedScaleForStroking[1]=Q}return this._cachedScaleForStroking}rescaleAndStroke(l){const{ctx:U}=this,{lineWidth:d}=this.current,[Z,F]=this.getScaleForStroking();if(U.lineWidth=d||1,Z===1&&F===1){U.stroke();return}const t=U.getLineDash();if(l&&U.save(),U.scale(Z,F),t.length>0){const Q=Math.max(Z,F);U.setLineDash(t.map(V=>V/Q)),U.lineDashOffset/=Q}U.stroke(),l&&U.restore()}isContentVisible(){for(let l=this.markedContentStack.length-1;l>=0;l--)if(!this.markedContentStack[l].visible)return!1;return!0}}for(const c in rl)TU.prototype[c]!==void 0&&(TU.prototype[rl[c]]=TU.prototype[c]);class DU{static#l=null;static#U="";static get workerPort(){return this.#l}static set workerPort(l){if(!(typeof Worker<"u"&&l instanceof Worker)&&l!==null)throw new Error("Invalid `workerPort` type.");this.#l=l}static get workerSrc(){return this.#U}static set workerSrc(l){if(typeof l!="string")throw new Error("Invalid `workerSrc` type.");this.#U=l}}const KU={UNKNOWN:0,DATA:1,ERROR:2},sl={UNKNOWN:0,CANCEL:1,CANCEL_COMPLETE:2,CLOSE:3,ENQUEUE:4,ERROR:5,PULL:6,PULL_COMPLETE:7,START_COMPLETE:8};function El(c){switch(c instanceof Error||typeof c=="object"&&c!==null||Zl('wrapReason: Expected "reason" to be a (possibly cloned) Error.'),c.name){case"AbortException":return new bU(c.message);case"MissingPDFException":return new wU(c.message);case"PasswordException":return new ud(c.message,c.code);case"UnexpectedResponseException":return new Vd(c.message,c.status);case"UnknownErrorException":return new pd(c.message,c.details);default:return new pd(c.message,c.toString())}}class yU{#l=new AbortController;constructor(l,U,d){this.sourceName=l,this.targetName=U,this.comObj=d,this.callbackId=1,this.streamId=1,this.streamSinks=Object.create(null),this.streamControllers=Object.create(null),this.callbackCapabilities=Object.create(null),this.actionHandler=Object.create(null),d.addEventListener("message",this.#U.bind(this),{signal:this.#l.signal})}#U({data:l}){if(l.targetName!==this.sourceName)return;if(l.stream){this.#Z(l);return}if(l.callback){const d=l.callbackId,Z=this.callbackCapabilities[d];if(!Z)throw new Error(`Cannot resolve callback ${d}`);if(delete this.callbackCapabilities[d],l.callback===KU.DATA)Z.resolve(l.data);else if(l.callback===KU.ERROR)Z.reject(El(l.reason));else throw new Error("Unexpected callback case");return}const U=this.actionHandler[l.action];if(!U)throw new Error(`Unknown action from worker: ${l.action}`);if(l.callbackId){const d=this.sourceName,Z=l.sourceName,F=this.comObj;new Promise(function(t){t(U(l.data))}).then(function(t){F.postMessage({sourceName:d,targetName:Z,callback:KU.DATA,callbackId:l.callbackId,data:t})},function(t){F.postMessage({sourceName:d,targetName:Z,callback:KU.ERROR,callbackId:l.callbackId,reason:El(t)})});return}if(l.streamId){this.#d(l);return}U(l.data)}on(l,U){const d=this.actionHandler;if(d[l])throw new Error(`There is already an actionName called "${l}"`);d[l]=U}send(l,U,d){this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:l,data:U},d)}sendWithPromise(l,U,d){const Z=this.callbackId++,F=Promise.withResolvers();this.callbackCapabilities[Z]=F;try{this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:l,callbackId:Z,data:U},d)}catch(t){F.reject(t)}return F.promise}sendWithStream(l,U,d,Z){const F=this.streamId++,t=this.sourceName,Q=this.targetName,V=this.comObj;return new ReadableStream({start:W=>{const R=Promise.withResolvers();return this.streamControllers[F]={controller:W,startCall:R,pullCall:null,cancelCall:null,isClosed:!1},V.postMessage({sourceName:t,targetName:Q,action:l,streamId:F,data:U,desiredSize:W.desiredSize},Z),R.promise},pull:W=>{const R=Promise.withResolvers();return this.streamControllers[F].pullCall=R,V.postMessage({sourceName:t,targetName:Q,stream:sl.PULL,streamId:F,desiredSize:W.desiredSize}),R.promise},cancel:W=>{al(W instanceof Error,"cancel must have a valid reason");const R=Promise.withResolvers();return this.streamControllers[F].cancelCall=R,this.streamControllers[F].isClosed=!0,V.postMessage({sourceName:t,targetName:Q,stream:sl.CANCEL,streamId:F,reason:El(W)}),R.promise}},d)}#d(l){const U=l.streamId,d=this.sourceName,Z=l.sourceName,F=this.comObj,t=this,Q=this.actionHandler[l.action],V={enqueue(W,R=1,N){if(this.isCancelled)return;const n=this.desiredSize;this.desiredSize-=R,n>0&&this.desiredSize<=0&&(this.sinkCapability=Promise.withResolvers(),this.ready=this.sinkCapability.promise),F.postMessage({sourceName:d,targetName:Z,stream:sl.ENQUEUE,streamId:U,chunk:W},N)},close(){this.isCancelled||(this.isCancelled=!0,F.postMessage({sourceName:d,targetName:Z,stream:sl.CLOSE,streamId:U}),delete t.streamSinks[U])},error(W){al(W instanceof Error,"error must have a valid reason"),!this.isCancelled&&(this.isCancelled=!0,F.postMessage({sourceName:d,targetName:Z,stream:sl.ERROR,streamId:U,reason:El(W)}))},sinkCapability:Promise.withResolvers(),onPull:null,onCancel:null,isCancelled:!1,desiredSize:l.desiredSize,ready:null};V.sinkCapability.resolve(),V.ready=V.sinkCapability.promise,this.streamSinks[U]=V,new Promise(function(W){W(Q(l.data,V))}).then(function(){F.postMessage({sourceName:d,targetName:Z,stream:sl.START_COMPLETE,streamId:U,success:!0})},function(W){F.postMessage({sourceName:d,targetName:Z,stream:sl.START_COMPLETE,streamId:U,reason:El(W)})})}#Z(l){const U=l.streamId,d=this.sourceName,Z=l.sourceName,F=this.comObj,t=this.streamControllers[U],Q=this.streamSinks[U];switch(l.stream){case sl.START_COMPLETE:l.success?t.startCall.resolve():t.startCall.reject(El(l.reason));break;case sl.PULL_COMPLETE:l.success?t.pullCall.resolve():t.pullCall.reject(El(l.reason));break;case sl.PULL:if(!Q){F.postMessage({sourceName:d,targetName:Z,stream:sl.PULL_COMPLETE,streamId:U,success:!0});break}Q.desiredSize<=0&&l.desiredSize>0&&Q.sinkCapability.resolve(),Q.desiredSize=l.desiredSize,new Promise(function(V){V(Q.onPull?.())}).then(function(){F.postMessage({sourceName:d,targetName:Z,stream:sl.PULL_COMPLETE,streamId:U,success:!0})},function(V){F.postMessage({sourceName:d,targetName:Z,stream:sl.PULL_COMPLETE,streamId:U,reason:El(V)})});break;case sl.ENQUEUE:if(al(t,"enqueue should have stream controller"),t.isClosed)break;t.controller.enqueue(l.chunk);break;case sl.CLOSE:if(al(t,"close should have stream controller"),t.isClosed)break;t.isClosed=!0,t.controller.close(),this.#t(t,U);break;case sl.ERROR:al(t,"error should have stream controller"),t.controller.error(El(l.reason)),this.#t(t,U);break;case sl.CANCEL_COMPLETE:l.success?t.cancelCall.resolve():t.cancelCall.reject(El(l.reason)),this.#t(t,U);break;case sl.CANCEL:if(!Q)break;new Promise(function(V){V(Q.onCancel?.(El(l.reason)))}).then(function(){F.postMessage({sourceName:d,targetName:Z,stream:sl.CANCEL_COMPLETE,streamId:U,success:!0})},function(V){F.postMessage({sourceName:d,targetName:Z,stream:sl.CANCEL_COMPLETE,streamId:U,reason:El(V)})}),Q.sinkCapability.reject(El(l.reason)),Q.isCancelled=!0,delete this.streamSinks[U];break;default:throw new Error("Unexpected stream case")}}async#t(l,U){await Promise.allSettled([l.startCall?.promise,l.pullCall?.promise,l.cancelCall?.promise]),delete this.streamControllers[U]}destroy(){this.#l?.abort(),this.#l=null}}class fW{#l;#U;constructor({parsedData:l,rawData:U}){this.#l=l,this.#U=U}getRaw(){return this.#U}get(l){return this.#l.get(l)??null}getAll(){return Kd(this.#l)}has(l){return this.#l.has(l)}}const MU=Symbol("INTERNAL");class AW{#l=!1;#U=!1;#d=!1;#Z=!0;constructor(l,{name:U,intent:d,usage:Z,rbGroups:F}){this.#l=!!(l&Cl.DISPLAY),this.#U=!!(l&Cl.PRINT),this.name=U,this.intent=d,this.usage=Z,this.rbGroups=F}get visible(){if(this.#d)return this.#Z;if(!this.#Z)return!1;const{print:l,view:U}=this.usage;return this.#l?U?.viewState!=="OFF":this.#U?l?.printState!=="OFF":!0}_setVisible(l,U,d=!1){l!==MU&&Zl("Internal method `_setVisible` called."),this.#d=d,this.#Z=U}}class _W{#l=null;#U=new Map;#d=null;#Z=null;constructor(l,U=Cl.DISPLAY){if(this.renderingIntent=U,this.name=null,this.creator=null,l!==null){this.name=l.name,this.creator=l.creator,this.#Z=l.order;for(const d of l.groups)this.#U.set(d.id,new AW(U,d));if(l.baseState==="OFF")for(const d of this.#U.values())d._setVisible(MU,!1);for(const d of l.on)this.#U.get(d)._setVisible(MU,!0);for(const d of l.off)this.#U.get(d)._setVisible(MU,!1);this.#d=this.getHash()}}#t(l){const U=l.length;if(U<2)return!0;const d=l[0];for(let Z=1;Z<U;Z++){const F=l[Z];let t;if(Array.isArray(F))t=this.#t(F);else if(this.#U.has(F))t=this.#U.get(F).visible;else return f(`Optional content group not found: ${F}`),!0;switch(d){case"And":if(!t)return!1;break;case"Or":if(t)return!0;break;case"Not":return!t;default:return!0}}return d==="And"}isVisible(l){if(this.#U.size===0)return!0;if(!l)return cd("Optional content group not defined."),!0;if(l.type==="OCG")return this.#U.has(l.id)?this.#U.get(l.id).visible:(f(`Optional content group not found: ${l.id}`),!0);if(l.type==="OCMD"){if(l.expression)return this.#t(l.expression);if(!l.policy||l.policy==="AnyOn"){for(const U of l.ids){if(!this.#U.has(U))return f(`Optional content group not found: ${U}`),!0;if(this.#U.get(U).visible)return!0}return!1}else if(l.policy==="AllOn"){for(const U of l.ids){if(!this.#U.has(U))return f(`Optional content group not found: ${U}`),!0;if(!this.#U.get(U).visible)return!1}return!0}else if(l.policy==="AnyOff"){for(const U of l.ids){if(!this.#U.has(U))return f(`Optional content group not found: ${U}`),!0;if(!this.#U.get(U).visible)return!0}return!1}else if(l.policy==="AllOff"){for(const U of l.ids){if(!this.#U.has(U))return f(`Optional content group not found: ${U}`),!0;if(this.#U.get(U).visible)return!1}return!0}return f(`Unknown optional content policy ${l.policy}.`),!0}return f(`Unknown group type ${l.type}.`),!0}setVisibility(l,U=!0,d=!0){const Z=this.#U.get(l);if(!Z){f(`Optional content group not found: ${l}`);return}if(d&&U&&Z.rbGroups.length)for(const F of Z.rbGroups)for(const t of F)t!==l&&this.#U.get(t)?._setVisible(MU,!1,!0);Z._setVisible(MU,!!U,!0),this.#l=null}setOCGState({state:l,preserveRB:U}){let d;for(const Z of l){switch(Z){case"ON":case"OFF":case"Toggle":d=Z;continue}const F=this.#U.get(Z);if(F)switch(d){case"ON":this.setVisibility(Z,!0,U);break;case"OFF":this.setVisibility(Z,!1,U);break;case"Toggle":this.setVisibility(Z,!F.visible,U);break}}this.#l=null}get hasInitialVisibility(){return this.#d===null||this.getHash()===this.#d}getOrder(){return this.#U.size?this.#Z?this.#Z.slice():[...this.#U.keys()]:null}getGroups(){return this.#U.size>0?Kd(this.#U):null}getGroup(l){return this.#U.get(l)||null}getHash(){if(this.#l!==null)return this.#l;const l=new qZ;for(const[U,d]of this.#U)l.update(`${U}:${d.visible}`);return this.#l=l.hexdigest()}}class qW{constructor(l,{disableRange:U=!1,disableStream:d=!1}){al(l,'PDFDataTransportStream - missing required "pdfDataRangeTransport" argument.');const{length:Z,initialData:F,progressiveDone:t,contentDispositionFilename:Q}=l;if(this._queuedChunks=[],this._progressiveDone=t,this._contentDispositionFilename=Q,F?.length>0){const V=F instanceof Uint8Array&&F.byteLength===F.buffer.byteLength?F.buffer:new Uint8Array(F).buffer;this._queuedChunks.push(V)}this._pdfDataRangeTransport=l,this._isStreamingSupported=!d,this._isRangeSupported=!U,this._contentLength=Z,this._fullRequestReader=null,this._rangeReaders=[],l.addRangeListener((V,W)=>{this._onReceiveData({begin:V,chunk:W})}),l.addProgressListener((V,W)=>{this._onProgress({loaded:V,total:W})}),l.addProgressiveReadListener(V=>{this._onReceiveData({chunk:V})}),l.addProgressiveDoneListener(()=>{this._onProgressiveDone()}),l.transportReady()}_onReceiveData({begin:l,chunk:U}){const d=U instanceof Uint8Array&&U.byteLength===U.buffer.byteLength?U.buffer:new Uint8Array(U).buffer;if(l===void 0)this._fullRequestReader?this._fullRequestReader._enqueue(d):this._queuedChunks.push(d);else{const Z=this._rangeReaders.some(function(F){return F._begin!==l?!1:(F._enqueue(d),!0)});al(Z,"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.")}}get _progressiveDataLength(){return this._fullRequestReader?._loaded??0}_onProgress(l){l.total===void 0?this._rangeReaders[0]?.onProgress?.({loaded:l.loaded}):this._fullRequestReader?.onProgress?.({loaded:l.loaded,total:l.total})}_onProgressiveDone(){this._fullRequestReader?.progressiveDone(),this._progressiveDone=!0}_removeRangeReader(l){const U=this._rangeReaders.indexOf(l);U>=0&&this._rangeReaders.splice(U,1)}getFullReader(){al(!this._fullRequestReader,"PDFDataTransportStream.getFullReader can only be called once.");const l=this._queuedChunks;return this._queuedChunks=null,new $W(this,l,this._progressiveDone,this._contentDispositionFilename)}getRangeReader(l,U){if(U<=this._progressiveDataLength)return null;const d=new lR(this,l,U);return this._pdfDataRangeTransport.requestDataRange(l,U),this._rangeReaders.push(d),d}cancelAllRequests(l){this._fullRequestReader?.cancel(l);for(const U of this._rangeReaders.slice(0))U.cancel(l);this._pdfDataRangeTransport.abort()}}class $W{constructor(l,U,d=!1,Z=null){this._stream=l,this._done=d||!1,this._filename=Pd(Z)?Z:null,this._queuedChunks=U||[],this._loaded=0;for(const F of this._queuedChunks)this._loaded+=F.byteLength;this._requests=[],this._headersReady=Promise.resolve(),l._fullRequestReader=this,this.onProgress=null}_enqueue(l){this._done||(this._requests.length>0?this._requests.shift().resolve({value:l,done:!1}):this._queuedChunks.push(l),this._loaded+=l.byteLength)}get headersReady(){return this._headersReady}get filename(){return this._filename}get isRangeSupported(){return this._stream._isRangeSupported}get isStreamingSupported(){return this._stream._isStreamingSupported}get contentLength(){return this._stream._contentLength}async read(){if(this._queuedChunks.length>0)return{value:this._queuedChunks.shift(),done:!1};if(this._done)return{value:void 0,done:!0};const l=Promise.withResolvers();return this._requests.push(l),l.promise}cancel(l){this._done=!0;for(const U of this._requests)U.resolve({value:void 0,done:!0});this._requests.length=0}progressiveDone(){this._done||(this._done=!0)}}class lR{constructor(l,U,d){this._stream=l,this._begin=U,this._end=d,this._queuedChunk=null,this._requests=[],this._done=!1,this.onProgress=null}_enqueue(l){if(!this._done){if(this._requests.length===0)this._queuedChunk=l;else{this._requests.shift().resolve({value:l,done:!1});for(const d of this._requests)d.resolve({value:void 0,done:!0});this._requests.length=0}this._done=!0,this._stream._removeRangeReader(this)}}get isStreamingSupported(){return!1}async read(){if(this._queuedChunk){const U=this._queuedChunk;return this._queuedChunk=null,{value:U,done:!1}}if(this._done)return{value:void 0,done:!0};const l=Promise.withResolvers();return this._requests.push(l),l.promise}cancel(l){this._done=!0;for(const U of this._requests)U.resolve({value:void 0,done:!0});this._requests.length=0,this._stream._removeRangeReader(this)}}function UR(c){let l=!0,U=d("filename\\*","i").exec(c);if(U){U=U[1];let R=Q(U);return R=unescape(R),R=V(R),R=W(R),F(R)}if(U=t(c),U){const R=W(U);return F(R)}if(U=d("filename","i").exec(c),U){U=U[1];let R=Q(U);return R=W(R),F(R)}function d(R,N){return new RegExp("(?:^|;)\\s*"+R+'\\s*=\\s*([^";\\s][^;\\s]*|"(?:[^"\\\\]|\\\\"?)+"?)',N)}function Z(R,N){if(R){if(!/^[\x00-\xFF]+$/.test(N))return N;try{const n=new TextDecoder(R,{fatal:!0}),s=Wd(N);N=n.decode(s),l=!1}catch{}}return N}function F(R){return l&&/[\x80-\xff]/.test(R)&&(R=Z("utf-8",R),l&&(R=Z("iso-8859-1",R))),R}function t(R){const N=[];let n;const s=d("filename\\*((?!0\\d)\\d+)(\\*?)","ig");for(;(n=s.exec(R))!==null;){let[,b,i,h]=n;if(b=parseInt(b,10),b in N){if(b===0)break;continue}N[b]=[i,h]}const a=[];for(let b=0;b<N.length&&b in N;++b){let[i,h]=N[b];h=Q(h),i&&(h=unescape(h),b===0&&(h=V(h))),a.push(h)}return a.join("")}function Q(R){if(R.startsWith('"')){const N=R.slice(1).split('\\"');for(let n=0;n<N.length;++n){const s=N[n].indexOf('"');s!==-1&&(N[n]=N[n].slice(0,s),N.length=n+1),N[n]=N[n].replaceAll(/\\(.)/g,"$1")}R=N.join('"')}return R}function V(R){const N=R.indexOf("'");if(N===-1)return R;const n=R.slice(0,N),a=R.slice(N+1).replace(/^[^']*'/,"");return Z(n,a)}function W(R){return!R.startsWith("=?")||/[\x00-\x19\x80-\xff]/.test(R)?R:R.replaceAll(/=\?([\w-]*)\?([QqBb])\?((?:[^?]|\?(?!=))*)\?=/g,function(N,n,s,a){if(s==="q"||s==="Q")return a=a.replaceAll("_"," "),a=a.replaceAll(/=([0-9a-fA-F]{2})/g,function(b,i){return String.fromCharCode(parseInt(i,16))}),Z(n,a);try{a=atob(a)}catch{}return Z(n,a)})}return""}function cF(c,l){const U=new Headers;if(!c||!l||typeof l!="object")return U;for(const d in l){const Z=l[d];Z!==void 0&&U.append(d,Z)}return U}function nd(c){try{return new URL(c).origin}catch{}return null}function VF({responseHeaders:c,isHttp:l,rangeChunkSize:U,disableRange:d}){const Z={allowRangeRequests:!1,suggestedLength:void 0},F=parseInt(c.get("Content-Length"),10);return!Number.isInteger(F)||(Z.suggestedLength=F,F<=2*U)||d||!l||c.get("Accept-Ranges")!=="bytes"||(c.get("Content-Encoding")||"identity")!=="identity"||(Z.allowRangeRequests=!0),Z}function WF(c){const l=c.get("Content-Disposition");if(l){let U=UR(l);if(U.includes("%"))try{U=decodeURIComponent(U)}catch{}if(Pd(U))return U}return null}function sd(c,l){return c===404||c===0&&l.startsWith("file:")?new wU('Missing PDF "'+l+'".'):new Vd(`Unexpected server response (${c}) while retrieving PDF "${l}".`,c)}function RF(c){return c===200||c===206}function NF(c,l,U){return{method:"GET",headers:c,signal:U.signal,mode:"cors",credentials:l?"include":"same-origin",redirect:"follow"}}function nF(c){return c instanceof Uint8Array?c.buffer:c instanceof ArrayBuffer?c:(f(`getArrayBuffer - unexpected data format: ${c}`),new Uint8Array(c).buffer)}class SZ{_responseOrigin=null;constructor(l){this.source=l,this.isHttp=/^https?:/i.test(l.url),this.headers=cF(this.isHttp,l.httpHeaders),this._fullRequestReader=null,this._rangeRequestReaders=[]}get _progressiveDataLength(){return this._fullRequestReader?._loaded??0}getFullReader(){return al(!this._fullRequestReader,"PDFFetchStream.getFullReader can only be called once."),this._fullRequestReader=new dR(this),this._fullRequestReader}getRangeReader(l,U){if(U<=this._progressiveDataLength)return null;const d=new ZR(this,l,U);return this._rangeRequestReaders.push(d),d}cancelAllRequests(l){this._fullRequestReader?.cancel(l);for(const U of this._rangeRequestReaders.slice(0))U.cancel(l)}}class dR{constructor(l){this._stream=l,this._reader=null,this._loaded=0,this._filename=null;const U=l.source;this._withCredentials=U.withCredentials||!1,this._contentLength=U.length,this._headersCapability=Promise.withResolvers(),this._disableRange=U.disableRange||!1,this._rangeChunkSize=U.rangeChunkSize,!this._rangeChunkSize&&!this._disableRange&&(this._disableRange=!0),this._abortController=new AbortController,this._isStreamingSupported=!U.disableStream,this._isRangeSupported=!U.disableRange;const d=new Headers(l.headers),Z=U.url;fetch(Z,NF(d,this._withCredentials,this._abortController)).then(F=>{if(l._responseOrigin=nd(F.url),!RF(F.status))throw sd(F.status,Z);this._reader=F.body.getReader(),this._headersCapability.resolve();const t=F.headers,{allowRangeRequests:Q,suggestedLength:V}=VF({responseHeaders:t,isHttp:l.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});this._isRangeSupported=Q,this._contentLength=V||this._contentLength,this._filename=WF(t),!this._isStreamingSupported&&this._isRangeSupported&&this.cancel(new bU("Streaming is disabled."))}).catch(this._headersCapability.reject),this.onProgress=null}get headersReady(){return this._headersCapability.promise}get filename(){return this._filename}get contentLength(){return this._contentLength}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}async read(){await this._headersCapability.promise;const{value:l,done:U}=await this._reader.read();return U?{value:l,done:U}:(this._loaded+=l.byteLength,this.onProgress?.({loaded:this._loaded,total:this._contentLength}),{value:nF(l),done:!1})}cancel(l){this._reader?.cancel(l),this._abortController.abort()}}class ZR{constructor(l,U,d){this._stream=l,this._reader=null,this._loaded=0;const Z=l.source;this._withCredentials=Z.withCredentials||!1,this._readCapability=Promise.withResolvers(),this._isStreamingSupported=!Z.disableStream,this._abortController=new AbortController;const F=new Headers(l.headers);F.append("Range",`bytes=${U}-${d-1}`);const t=Z.url;fetch(t,NF(F,this._withCredentials,this._abortController)).then(Q=>{const V=nd(Q.url);if(V!==l._responseOrigin)throw new Error(`Expected range response-origin "${V}" to match "${l._responseOrigin}".`);if(!RF(Q.status))throw sd(Q.status,t);this._readCapability.resolve(),this._reader=Q.body.getReader()}).catch(this._readCapability.reject),this.onProgress=null}get isStreamingSupported(){return this._isStreamingSupported}async read(){await this._readCapability.promise;const{value:l,done:U}=await this._reader.read();return U?{value:l,done:U}:(this._loaded+=l.byteLength,this.onProgress?.({loaded:this._loaded}),{value:nF(l),done:!1})}cancel(l){this._reader?.cancel(l),this._abortController.abort()}}const Md=200,Gd=206;function FR(c){const l=c.response;return typeof l!="string"?l:Wd(l).buffer}class tR{_responseOrigin=null;constructor({url:l,httpHeaders:U,withCredentials:d}){this.url=l,this.isHttp=/^https?:/i.test(l),this.headers=cF(this.isHttp,U),this.withCredentials=d||!1,this.currXhrId=0,this.pendingRequests=Object.create(null)}requestRange(l,U,d){const Z={begin:l,end:U};for(const F in d)Z[F]=d[F];return this.request(Z)}requestFull(l){return this.request(l)}request(l){const U=new XMLHttpRequest,d=this.currXhrId++,Z=this.pendingRequests[d]={xhr:U};U.open("GET",this.url),U.withCredentials=this.withCredentials;for(const[F,t]of this.headers)U.setRequestHeader(F,t);return this.isHttp&&"begin"in l&&"end"in l?(U.setRequestHeader("Range",`bytes=${l.begin}-${l.end-1}`),Z.expectedStatus=Gd):Z.expectedStatus=Md,U.responseType="arraybuffer",l.onError&&(U.onerror=function(F){l.onError(U.status)}),U.onreadystatechange=this.onStateChange.bind(this,d),U.onprogress=this.onProgress.bind(this,d),Z.onHeadersReceived=l.onHeadersReceived,Z.onDone=l.onDone,Z.onError=l.onError,Z.onProgress=l.onProgress,U.send(null),d}onProgress(l,U){const d=this.pendingRequests[l];d&&d.onProgress?.(U)}onStateChange(l,U){const d=this.pendingRequests[l];if(!d)return;const Z=d.xhr;if(Z.readyState>=2&&d.onHeadersReceived&&(d.onHeadersReceived(),delete d.onHeadersReceived),Z.readyState!==4||!(l in this.pendingRequests))return;if(delete this.pendingRequests[l],Z.status===0&&this.isHttp){d.onError?.(Z.status);return}const F=Z.status||Md;if(!(F===Md&&d.expectedStatus===Gd)&&F!==d.expectedStatus){d.onError?.(Z.status);return}const Q=FR(Z);if(F===Gd){const V=Z.getResponseHeader("Content-Range"),W=/bytes (\d+)-(\d+)\/(\d+)/.exec(V);d.onDone({begin:parseInt(W[1],10),chunk:Q})}else Q?d.onDone({begin:0,chunk:Q}):d.onError?.(Z.status)}getRequestXhr(l){return this.pendingRequests[l].xhr}isPendingRequest(l){return l in this.pendingRequests}abortRequest(l){const U=this.pendingRequests[l].xhr;delete this.pendingRequests[l],U.abort()}}class QR{constructor(l){this._source=l,this._manager=new tR(l),this._rangeChunkSize=l.rangeChunkSize,this._fullRequestReader=null,this._rangeRequestReaders=[]}_onRangeRequestReaderClosed(l){const U=this._rangeRequestReaders.indexOf(l);U>=0&&this._rangeRequestReaders.splice(U,1)}getFullReader(){return al(!this._fullRequestReader,"PDFNetworkStream.getFullReader can only be called once."),this._fullRequestReader=new cR(this._manager,this._source),this._fullRequestReader}getRangeReader(l,U){const d=new VR(this._manager,l,U);return d.onClosed=this._onRangeRequestReaderClosed.bind(this),this._rangeRequestReaders.push(d),d}cancelAllRequests(l){this._fullRequestReader?.cancel(l);for(const U of this._rangeRequestReaders.slice(0))U.cancel(l)}}class cR{constructor(l,U){this._manager=l;const d={onHeadersReceived:this._onHeadersReceived.bind(this),onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)};this._url=U.url,this._fullRequestId=l.requestFull(d),this._headersCapability=Promise.withResolvers(),this._disableRange=U.disableRange||!1,this._contentLength=U.length,this._rangeChunkSize=U.rangeChunkSize,!this._rangeChunkSize&&!this._disableRange&&(this._disableRange=!0),this._isStreamingSupported=!1,this._isRangeSupported=!1,this._cachedChunks=[],this._requests=[],this._done=!1,this._storedError=void 0,this._filename=null,this.onProgress=null}_onHeadersReceived(){const l=this._fullRequestId,U=this._manager.getRequestXhr(l);this._manager._responseOrigin=nd(U.responseURL);const d=U.getAllResponseHeaders(),Z=new Headers(d?d.trim().split(/[\r\n]+/).map(Q=>{const[V,...W]=Q.split(": ");return[V,W.join(": ")]}):[]),{allowRangeRequests:F,suggestedLength:t}=VF({responseHeaders:Z,isHttp:this._manager.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});F&&(this._isRangeSupported=!0),this._contentLength=t||this._contentLength,this._filename=WF(Z),this._isRangeSupported&&this._manager.abortRequest(l),this._headersCapability.resolve()}_onDone(l){if(l&&(this._requests.length>0?this._requests.shift().resolve({value:l.chunk,done:!1}):this._cachedChunks.push(l.chunk)),this._done=!0,!(this._cachedChunks.length>0)){for(const U of this._requests)U.resolve({value:void 0,done:!0});this._requests.length=0}}_onError(l){this._storedError=sd(l,this._url),this._headersCapability.reject(this._storedError);for(const U of this._requests)U.reject(this._storedError);this._requests.length=0,this._cachedChunks.length=0}_onProgress(l){this.onProgress?.({loaded:l.loaded,total:l.lengthComputable?l.total:this._contentLength})}get filename(){return this._filename}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}get contentLength(){return this._contentLength}get headersReady(){return this._headersCapability.promise}async read(){if(await this._headersCapability.promise,this._storedError)throw this._storedError;if(this._cachedChunks.length>0)return{value:this._cachedChunks.shift(),done:!1};if(this._done)return{value:void 0,done:!0};const l=Promise.withResolvers();return this._requests.push(l),l.promise}cancel(l){this._done=!0,this._headersCapability.reject(l);for(const U of this._requests)U.resolve({value:void 0,done:!0});this._requests.length=0,this._manager.isPendingRequest(this._fullRequestId)&&this._manager.abortRequest(this._fullRequestId),this._fullRequestReader=null}}class VR{constructor(l,U,d){this._manager=l;const Z={onHeadersReceived:this._onHeadersReceived.bind(this),onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)};this._url=l.url,this._requestId=l.requestRange(U,d,Z),this._requests=[],this._queuedChunk=null,this._done=!1,this._storedError=void 0,this.onProgress=null,this.onClosed=null}_onHeadersReceived(){const l=nd(this._manager.getRequestXhr(this._requestId)?.responseURL);l!==this._manager._responseOrigin&&(this._storedError=new Error(`Expected range response-origin "${l}" to match "${this._manager._responseOrigin}".`),this._onError(0))}_close(){this.onClosed?.(this)}_onDone(l){const U=l.chunk;this._requests.length>0?this._requests.shift().resolve({value:U,done:!1}):this._queuedChunk=U,this._done=!0;for(const d of this._requests)d.resolve({value:void 0,done:!0});this._requests.length=0,this._close()}_onError(l){this._storedError??=sd(l,this._url);for(const U of this._requests)U.reject(this._storedError);this._requests.length=0,this._queuedChunk=null}_onProgress(l){this.isStreamingSupported||this.onProgress?.({loaded:l.loaded})}get isStreamingSupported(){return!1}async read(){if(this._storedError)throw this._storedError;if(this._queuedChunk!==null){const U=this._queuedChunk;return this._queuedChunk=null,{value:U,done:!1}}if(this._done)return{value:void 0,done:!0};const l=Promise.withResolvers();return this._requests.push(l),l.promise}cancel(l){this._done=!0;for(const U of this._requests)U.resolve({value:void 0,done:!0});this._requests.length=0,this._manager.isPendingRequest(this._requestId)&&this._manager.abortRequest(this._requestId),this._close()}}const WR=/^[a-z][a-z0-9\-+.]+:/i;function RR(c){if(WR.test(c))return new URL(c);const l=process.getBuiltinModule("url");return new URL(l.pathToFileURL(c))}class NR{constructor(l){this.source=l,this.url=RR(l.url),al(this.url.protocol==="file:","PDFNodeStream only supports file:// URLs."),this._fullRequestReader=null,this._rangeRequestReaders=[]}get _progressiveDataLength(){return this._fullRequestReader?._loaded??0}getFullReader(){return al(!this._fullRequestReader,"PDFNodeStream.getFullReader can only be called once."),this._fullRequestReader=new nR(this),this._fullRequestReader}getRangeReader(l,U){if(U<=this._progressiveDataLength)return null;const d=new sR(this,l,U);return this._rangeRequestReaders.push(d),d}cancelAllRequests(l){this._fullRequestReader?.cancel(l);for(const U of this._rangeRequestReaders.slice(0))U.cancel(l)}}class nR{constructor(l){this._url=l.url,this._done=!1,this._storedError=null,this.onProgress=null;const U=l.source;this._contentLength=U.length,this._loaded=0,this._filename=null,this._disableRange=U.disableRange||!1,this._rangeChunkSize=U.rangeChunkSize,!this._rangeChunkSize&&!this._disableRange&&(this._disableRange=!0),this._isStreamingSupported=!U.disableStream,this._isRangeSupported=!U.disableRange,this._readableStream=null,this._readCapability=Promise.withResolvers(),this._headersCapability=Promise.withResolvers();const d=process.getBuiltinModule("fs");d.promises.lstat(this._url).then(Z=>{this._contentLength=Z.size,this._setReadableStream(d.createReadStream(this._url)),this._headersCapability.resolve()},Z=>{Z.code==="ENOENT"&&(Z=new wU(`Missing PDF "${this._url}".`)),this._storedError=Z,this._headersCapability.reject(Z)})}get headersReady(){return this._headersCapability.promise}get filename(){return this._filename}get contentLength(){return this._contentLength}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}async read(){if(await this._readCapability.promise,this._done)return{value:void 0,done:!0};if(this._storedError)throw this._storedError;const l=this._readableStream.read();return l===null?(this._readCapability=Promise.withResolvers(),this.read()):(this._loaded+=l.length,this.onProgress?.({loaded:this._loaded,total:this._contentLength}),{value:new Uint8Array(l).buffer,done:!1})}cancel(l){if(!this._readableStream){this._error(l);return}this._readableStream.destroy(l)}_error(l){this._storedError=l,this._readCapability.resolve()}_setReadableStream(l){this._readableStream=l,l.on("readable",()=>{this._readCapability.resolve()}),l.on("end",()=>{l.destroy(),this._done=!0,this._readCapability.resolve()}),l.on("error",U=>{this._error(U)}),!this._isStreamingSupported&&this._isRangeSupported&&this._error(new bU("streaming is disabled")),this._storedError&&this._readableStream.destroy(this._storedError)}}class sR{constructor(l,U,d){this._url=l.url,this._done=!1,this._storedError=null,this.onProgress=null,this._loaded=0,this._readableStream=null,this._readCapability=Promise.withResolvers();const Z=l.source;this._isStreamingSupported=!Z.disableStream;const F=process.getBuiltinModule("fs");this._setReadableStream(F.createReadStream(this._url,{start:U,end:d-1}))}get isStreamingSupported(){return this._isStreamingSupported}async read(){if(await this._readCapability.promise,this._done)return{value:void 0,done:!0};if(this._storedError)throw this._storedError;const l=this._readableStream.read();return l===null?(this._readCapability=Promise.withResolvers(),this.read()):(this._loaded+=l.length,this.onProgress?.({loaded:this._loaded}),{value:new Uint8Array(l).buffer,done:!1})}cancel(l){if(!this._readableStream){this._error(l);return}this._readableStream.destroy(l)}_error(l){this._storedError=l,this._readCapability.resolve()}_setReadableStream(l){this._readableStream=l,l.on("readable",()=>{this._readCapability.resolve()}),l.on("end",()=>{l.destroy(),this._done=!0,this._readCapability.resolve()}),l.on("error",U=>{this._error(U)}),this._storedError&&this._readableStream.destroy(this._storedError)}}const aR=1e5,kl=30,bR=.8;class ul{#l=Promise.withResolvers();#U=null;#d=!1;#Z=!!globalThis.FontInspector?.enabled;#t=null;#F=null;#W=0;#c=0;#R=null;#V=null;#N=0;#Q=0;#n=Object.create(null);#a=[];#s=null;#i=[];#b=new WeakMap;#h=null;static#m=new Map;static#M=new Map;static#G=new WeakMap;static#e=null;static#S=new Set;constructor({textContentSource:l,container:U,viewport:d}){if(l instanceof ReadableStream)this.#s=l;else if(typeof l=="object")this.#s=new ReadableStream({start(V){V.enqueue(l),V.close()}});else throw new Error('No "textContentSource" parameter specified.');this.#U=this.#V=U,this.#Q=d.scale*(globalThis.devicePixelRatio||1),this.#N=d.rotation,this.#F={div:null,properties:null,ctx:null};const{pageWidth:Z,pageHeight:F,pageX:t,pageY:Q}=d.rawDims;this.#h=[1,0,0,-1,-t,Q+F],this.#c=Z,this.#W=F,ul.#o(),sU(U,d),this.#l.promise.finally(()=>{ul.#S.delete(this),this.#F=null,this.#n=null}).catch(()=>{})}static get fontFamilyMap(){const{isWindows:l,isFirefox:U}=ol.platform;return $(this,"fontFamilyMap",new Map([["sans-serif",`${l&&U?"Calibri, ":""}sans-serif`],["monospace",`${l&&U?"Lucida Console, ":""}monospace`]]))}render(){const l=()=>{this.#R.read().then(({value:U,done:d})=>{if(d){this.#l.resolve();return}this.#t??=U.lang,Object.assign(this.#n,U.styles),this.#y(U.items),l()},this.#l.reject)};return this.#R=this.#s.getReader(),ul.#S.add(this),l(),this.#l.promise}update({viewport:l,onBefore:U=null}){const d=l.scale*(globalThis.devicePixelRatio||1),Z=l.rotation;if(Z!==this.#N&&(U?.(),this.#N=Z,sU(this.#V,{rotation:Z})),d!==this.#Q){U?.(),this.#Q=d;const F={div:null,properties:null,ctx:ul.#B(this.#t)};for(const t of this.#i)F.properties=this.#b.get(t),F.div=t,this.#Y(F)}}cancel(){const l=new bU("TextLayer task cancelled.");this.#R?.cancel(l).catch(()=>{}),this.#R=null,this.#l.reject(l)}get textDivs(){return this.#i}get textContentItemsStr(){return this.#a}#y(l){if(this.#d)return;this.#F.ctx??=ul.#B(this.#t);const U=this.#i,d=this.#a;for(const Z of l){if(U.length>aR){f("Ignoring additional textDivs for performance reasons."),this.#d=!0;return}if(Z.str===void 0){if(Z.type==="beginMarkedContentProps"||Z.type==="beginMarkedContent"){const F=this.#U;this.#U=document.createElement("span"),this.#U.classList.add("markedContent"),Z.id!==null&&this.#U.setAttribute("id",`${Z.id}`),F.append(this.#U)}else Z.type==="endMarkedContent"&&(this.#U=this.#U.parentNode);continue}d.push(Z.str),this.#X(Z)}}#X(l){const U=document.createElement("span"),d={angle:0,canvasWidth:0,hasText:l.str!=="",hasEOL:l.hasEOL,fontSize:0};this.#i.push(U);const Z=w.transform(this.#h,l.transform);let F=Math.atan2(Z[1],Z[0]);const t=this.#n[l.fontName];t.vertical&&(F+=Math.PI/2);let Q=this.#Z&&t.fontSubstitution||t.fontFamily;Q=ul.fontFamilyMap.get(Q)||Q;const V=Math.hypot(Z[2],Z[3]),W=V*ul.#D(Q,this.#t);let R,N;F===0?(R=Z[4],N=Z[5]-W):(R=Z[4]+W*Math.sin(F),N=Z[5]-W*Math.cos(F));const n="calc(var(--scale-factor)*",s=U.style;this.#U===this.#V?(s.left=`${(100*R/this.#c).toFixed(2)}%`,s.top=`${(100*N/this.#W).toFixed(2)}%`):(s.left=`${n}${R.toFixed(2)}px)`,s.top=`${n}${N.toFixed(2)}px)`),s.fontSize=`${n}${(ul.#e*V).toFixed(2)}px)`,s.fontFamily=Q,d.fontSize=V,U.setAttribute("role","presentation"),U.textContent=l.str,U.dir=l.dir,this.#Z&&(U.dataset.fontName=t.fontSubstitutionLoadedName||l.fontName),F!==0&&(d.angle=F*(180/Math.PI));let a=!1;if(l.str.length>1)a=!0;else if(l.str!==" "&&l.transform[0]!==l.transform[3]){const b=Math.abs(l.transform[0]),i=Math.abs(l.transform[3]);b!==i&&Math.max(b,i)/Math.min(b,i)>1.5&&(a=!0)}if(a&&(d.canvasWidth=t.vertical?l.height:l.width),this.#b.set(U,d),this.#F.div=U,this.#F.properties=d,this.#Y(this.#F),d.hasText&&this.#U.append(U),d.hasEOL){const b=document.createElement("br");b.setAttribute("role","presentation"),this.#U.append(b)}}#Y(l){const{div:U,properties:d,ctx:Z}=l,{style:F}=U;let t="";if(ul.#e>1&&(t=`scale(${1/ul.#e})`),d.canvasWidth!==0&&d.hasText){const{fontFamily:Q}=F,{canvasWidth:V,fontSize:W}=d;ul.#u(Z,W*this.#Q,Q);const{width:R}=Z.measureText(U.textContent);R>0&&(t=`scaleX(${V*this.#Q/R}) ${t}`)}d.angle!==0&&(t=`rotate(${d.angle}deg) ${t}`),t.length>0&&(F.transform=t)}static cleanup(){if(!(this.#S.size>0)){this.#m.clear();for(const{canvas:l}of this.#M.values())l.remove();this.#M.clear()}}static#B(l=null){let U=this.#M.get(l||="");if(!U){const d=document.createElement("canvas");d.className="hiddenCanvasElement",d.lang=l,document.body.append(d),U=d.getContext("2d",{alpha:!1,willReadFrequently:!0}),this.#M.set(l,U),this.#G.set(U,{size:0,family:""})}return U}static#u(l,U,d){const Z=this.#G.get(l);U===Z.size&&d===Z.family||(l.font=`${U}px ${d}`,Z.size=U,Z.family=d)}static#o(){if(this.#e!==null)return;const l=document.createElement("div");l.style.opacity=0,l.style.lineHeight=1,l.style.fontSize="1px",l.style.position="absolute",l.textContent="X",document.body.append(l),this.#e=l.getBoundingClientRect().height,l.remove()}static#D(l,U){const d=this.#m.get(l);if(d)return d;const Z=this.#B(U);Z.canvas.width=Z.canvas.height=kl,this.#u(Z,kl,l);const F=Z.measureText("");let t=F.fontBoundingBoxAscent,Q=Math.abs(F.fontBoundingBoxDescent);if(t){const R=t/(t+Q);return this.#m.set(l,R),Z.canvas.width=Z.canvas.height=0,R}Z.strokeStyle="red",Z.clearRect(0,0,kl,kl),Z.strokeText("g",0,0);let V=Z.getImageData(0,0,kl,kl).data;Q=0;for(let R=V.length-1-3;R>=0;R-=4)if(V[R]>0){Q=Math.ceil(R/4/kl);break}Z.clearRect(0,0,kl,kl),Z.strokeText("A",0,kl),V=Z.getImageData(0,0,kl,kl).data,t=0;for(let R=0,N=V.length;R<N;R+=4)if(V[R]>0){t=kl-Math.floor(R/4/kl);break}Z.canvas.width=Z.canvas.height=0;const W=t?t/(t+Q):bR;return this.#m.set(l,W),W}}class IU{static textContent(l){const U=[],d={items:U,styles:Object.create(null)};function Z(F){if(!F)return;let t=null;const Q=F.name;if(Q==="#text")t=F.value;else if(IU.shouldBuildText(Q))F?.attributes?.textContent?t=F.attributes.textContent:F.value&&(t=F.value);else return;if(t!==null&&U.push({str:t}),!!F.children)for(const V of F.children)Z(V)}return Z(l),d}static shouldBuildText(l){return!(l==="textarea"||l==="input"||l==="option"||l==="select")}}const iR=65536,hR=100,mR=5e3,JR=pl?zW:oW,MR=pl?kW:dF,GR=pl?LW:yW,eR=pl?DW:tF;function TR(c={}){typeof c=="string"||c instanceof URL?c={url:c}:(c instanceof ArrayBuffer||ArrayBuffer.isView(c))&&(c={data:c});const l=new UZ,{docId:U}=l,d=c.url?SR(c.url):null,Z=c.data?XR(c.data):null,F=c.httpHeaders||null,t=c.withCredentials===!0,Q=c.password??null,V=c.range instanceof sF?c.range:null,W=Number.isInteger(c.rangeChunkSize)&&c.rangeChunkSize>0?c.rangeChunkSize:iR;let R=c.worker instanceof ml?c.worker:null;const N=c.verbosity,n=typeof c.docBaseUrl=="string"&&!Nd(c.docBaseUrl)?c.docBaseUrl:null,s=typeof c.cMapUrl=="string"?c.cMapUrl:null,a=c.cMapPacked!==!1,b=c.CMapReaderFactory||MR,i=typeof c.standardFontDataUrl=="string"?c.standardFontDataUrl:null,h=c.StandardFontDataFactory||eR,G=c.stopAtErrors!==!0,S=Number.isInteger(c.maxImageSize)&&c.maxImageSize>-1?c.maxImageSize:-1,T=c.isEvalSupported!==!1,Y=typeof c.isOffscreenCanvasSupported=="boolean"?c.isOffscreenCanvasSupported:!pl,y=typeof c.isImageDecoderSupported=="boolean"?c.isImageDecoderSupported:!pl&&(ol.platform.isFirefox||!globalThis.chrome),o=Number.isInteger(c.canvasMaxAreaInBytes)?c.canvasMaxAreaInBytes:-1,u=typeof c.disableFontFace=="boolean"?c.disableFontFace:pl,p=c.fontExtraProperties===!0,z=c.enableXfa===!0,j=c.ownerDocument||globalThis.document,ll=c.disableRange===!0,Fl=c.disableStream===!0,_=c.disableAutoFetch===!0,nl=c.pdfBug===!0,q=c.CanvasFactory||JR,C=c.FilterFactory||GR,O=c.enableHWA===!0,yl=V?V.length:c.length??NaN,Il=typeof c.useSystemFonts=="boolean"?c.useSystemFonts:!pl&&!u,Ll=typeof c.useWorkerFetch=="boolean"?c.useWorkerFetch:b===dF&&h===tF&&s&&i&&oU(s,document.baseURI)&&oU(i,document.baseURI);c.canvasFactory&&nZ("`canvasFactory`-instance option, please use `CanvasFactory` instead."),c.filterFactory&&nZ("`filterFactory`-instance option, please use `FilterFactory` instead.");const el=null;VW(N);const bl={canvasFactory:new q({ownerDocument:j,enableHWA:O}),filterFactory:new C({docId:U,ownerDocument:j}),cMapReaderFactory:Ll?null:new b({baseUrl:s,isCompressed:a}),standardFontDataFactory:Ll?null:new h({baseUrl:i})};if(!R){const zl={verbosity:N,port:DU.workerPort};R=zl.port?ml.fromPort(zl):new ml(zl),l._worker=R}const hU={docId:U,apiVersion:"4.9.124",data:Z,password:Q,disableAutoFetch:_,rangeChunkSize:W,length:yl,docBaseUrl:n,enableXfa:z,evaluatorOptions:{maxImageSize:S,disableFontFace:u,ignoreErrors:G,isEvalSupported:T,isOffscreenCanvasSupported:Y,isImageDecoderSupported:y,canvasMaxAreaInBytes:o,fontExtraProperties:p,useSystemFonts:Il,cMapUrl:Ll?s:null,standardFontDataUrl:Ll?i:null}},XU={disableFontFace:u,fontExtraProperties:p,ownerDocument:j,pdfBug:nl,styleElement:el,loadingParams:{disableAutoFetch:_,enableXfa:z}};return R.promise.then(function(){if(l.destroyed)throw new Error("Loading aborted");if(R.destroyed)throw new Error("Worker was destroyed");const zl=R.messageHandler.sendWithPromise("GetDocRequest",hU,Z?[Z.buffer]:null);let Ql;if(V)Ql=new qW(V,{disableRange:ll,disableStream:Fl});else if(!Z){if(!d)throw new Error("getDocument - no `url` parameter provided.");let mU;if(pl)if(oU(d)){if(typeof fetch>"u"||typeof Response>"u"||!("body"in Response.prototype))throw new Error("getDocument - the Fetch API was disabled in Node.js, see `--no-experimental-fetch`.");mU=SZ}else mU=NR;else mU=oU(d)?SZ:QR;Ql=new mU({url:d,length:yl,httpHeaders:F,withCredentials:t,rangeChunkSize:W,disableRange:ll,disableStream:Fl})}return zl.then(mU=>{if(l.destroyed)throw new Error("Loading aborted");if(R.destroyed)throw new Error("Worker was destroyed");const cZ=new yU(U,mU,R.port),XF=new pR(cZ,l,Ql,XU,bl);l._transport=XF,cZ.send("Ready",null)})}).catch(l._capability.reject),l}function SR(c){if(c instanceof URL)return c.href;try{return new URL(c,window.location).href}catch{if(pl&&typeof c=="string")return c}throw new Error("Invalid PDF url data: either string or URL-object is expected in the url property.")}function XR(c){if(pl&&typeof Buffer<"u"&&c instanceof Buffer)throw new Error("Please provide binary data as `Uint8Array`, rather than `Buffer`.");if(c instanceof Uint8Array&&c.byteLength===c.buffer.byteLength)return c;if(typeof c=="string")return Wd(c);if(c instanceof ArrayBuffer||ArrayBuffer.isView(c)||typeof c=="object"&&!isNaN(c?.length))return new Uint8Array(c);throw new Error("Invalid PDF binary data: either TypedArray, string, or array-like object is expected in the data property.")}function XZ(c){return typeof c=="object"&&Number.isInteger(c?.num)&&c.num>=0&&Number.isInteger(c?.gen)&&c.gen>=0}class UZ{static#l=0;constructor(){this._capability=Promise.withResolvers(),this._transport=null,this._worker=null,this.docId=`d${UZ.#l++}`,this.destroyed=!1,this.onPassword=null,this.onProgress=null}get promise(){return this._capability.promise}async destroy(){this.destroyed=!0;try{this._worker?.port&&(this._worker._pendingDestroy=!0),await this._transport?.destroy()}catch(l){throw this._worker?.port&&delete this._worker._pendingDestroy,l}this._transport=null,this._worker?.destroy(),this._worker=null}}class sF{constructor(l,U,d=!1,Z=null){this.length=l,this.initialData=U,this.progressiveDone=d,this.contentDispositionFilename=Z,this._rangeListeners=[],this._progressListeners=[],this._progressiveReadListeners=[],this._progressiveDoneListeners=[],this._readyCapability=Promise.withResolvers()}addRangeListener(l){this._rangeListeners.push(l)}addProgressListener(l){this._progressListeners.push(l)}addProgressiveReadListener(l){this._progressiveReadListeners.push(l)}addProgressiveDoneListener(l){this._progressiveDoneListeners.push(l)}onDataRange(l,U){for(const d of this._rangeListeners)d(l,U)}onDataProgress(l,U){this._readyCapability.promise.then(()=>{for(const d of this._progressListeners)d(l,U)})}onDataProgressiveRead(l){this._readyCapability.promise.then(()=>{for(const U of this._progressiveReadListeners)U(l)})}onDataProgressiveDone(){this._readyCapability.promise.then(()=>{for(const l of this._progressiveDoneListeners)l()})}transportReady(){this._readyCapability.resolve()}requestDataRange(l,U){Zl("Abstract method PDFDataRangeTransport.requestDataRange")}abort(){}}class YR{constructor(l,U){this._pdfInfo=l,this._transport=U}get annotationStorage(){return this._transport.annotationStorage}get canvasFactory(){return this._transport.canvasFactory}get filterFactory(){return this._transport.filterFactory}get numPages(){return this._pdfInfo.numPages}get fingerprints(){return this._pdfInfo.fingerprints}get isPureXfa(){return $(this,"isPureXfa",!!this._transport._htmlForXfa)}get allXfaHtml(){return this._transport._htmlForXfa}getPage(l){return this._transport.getPage(l)}getPageIndex(l){return this._transport.getPageIndex(l)}getDestinations(){return this._transport.getDestinations()}getDestination(l){return this._transport.getDestination(l)}getPageLabels(){return this._transport.getPageLabels()}getPageLayout(){return this._transport.getPageLayout()}getPageMode(){return this._transport.getPageMode()}getViewerPreferences(){return this._transport.getViewerPreferences()}getOpenAction(){return this._transport.getOpenAction()}getAttachments(){return this._transport.getAttachments()}getJSActions(){return this._transport.getDocJSActions()}getOutline(){return this._transport.getOutline()}getOptionalContentConfig({intent:l="display"}={}){const{renderingIntent:U}=this._transport.getRenderingIntent(l);return this._transport.getOptionalContentConfig(U)}getPermissions(){return this._transport.getPermissions()}getMetadata(){return this._transport.getMetadata()}getMarkInfo(){return this._transport.getMarkInfo()}getData(){return this._transport.getData()}saveDocument(){return this._transport.saveDocument()}getDownloadInfo(){return this._transport.downloadInfoCapability.promise}cleanup(l=!1){return this._transport.startCleanup(l||this.isPureXfa)}destroy(){return this.loadingTask.destroy()}cachedPageNumber(l){return this._transport.cachedPageNumber(l)}get loadingParams(){return this._transport.loadingParams}get loadingTask(){return this._transport.loadingTask}getFieldObjects(){return this._transport.getFieldObjects()}hasJSActions(){return this._transport.hasJSActions()}getCalculationOrderIds(){return this._transport.getCalculationOrderIds()}}class BR{#l=null;#U=!1;constructor(l,U,d,Z=!1){this._pageIndex=l,this._pageInfo=U,this._transport=d,this._stats=Z?new NZ:null,this._pdfBug=Z,this.commonObjs=d.commonObjs,this.objs=new aF,this._maybeCleanupAfterRender=!1,this._intentStates=new Map,this.destroyed=!1}get pageNumber(){return this._pageIndex+1}get rotate(){return this._pageInfo.rotate}get ref(){return this._pageInfo.ref}get userUnit(){return this._pageInfo.userUnit}get view(){return this._pageInfo.view}getViewport({scale:l,rotation:U=this.rotate,offsetX:d=0,offsetY:Z=0,dontFlip:F=!1}={}){return new xU({viewBox:this.view,scale:l,rotation:U,offsetX:d,offsetY:Z,dontFlip:F})}getAnnotations({intent:l="display"}={}){const{renderingIntent:U}=this._transport.getRenderingIntent(l);return this._transport.getAnnotations(this._pageIndex,U)}getJSActions(){return this._transport.getPageJSActions(this._pageIndex)}get filterFactory(){return this._transport.filterFactory}get isPureXfa(){return $(this,"isPureXfa",!!this._transport._htmlForXfa)}async getXfa(){return this._transport._htmlForXfa?.children[this._pageIndex]||null}render({canvasContext:l,viewport:U,intent:d="display",annotationMode:Z=QU.ENABLE,transform:F=null,background:t=null,optionalContentConfigPromise:Q=null,annotationCanvasMap:V=null,pageColors:W=null,printAnnotationStorage:R=null,isEditing:N=!1}){this._stats?.time("Overall");const n=this._transport.getRenderingIntent(d,Z,R,N),{renderingIntent:s,cacheKey:a}=n;this.#U=!1,this.#Z(),Q||=this._transport.getOptionalContentConfig(s);let b=this._intentStates.get(a);b||(b=Object.create(null),this._intentStates.set(a,b)),b.streamReaderCancelTimeout&&(clearTimeout(b.streamReaderCancelTimeout),b.streamReaderCancelTimeout=null);const i=!!(s&Cl.PRINT);b.displayReadyCapability||(b.displayReadyCapability=Promise.withResolvers(),b.operatorList={fnArray:[],argsArray:[],lastChunk:!1,separateAnnots:null},this._stats?.time("Page Request"),this._pumpOperatorList(n));const h=T=>{b.renderTasks.delete(G),(this._maybeCleanupAfterRender||i)&&(this.#U=!0),this.#d(!i),T?(G.capability.reject(T),this._abortOperatorList({intentState:b,reason:T instanceof Error?T:new Error(T)})):G.capability.resolve(),this._stats&&(this._stats.timeEnd("Rendering"),this._stats.timeEnd("Overall"),globalThis.Stats?.enabled&&globalThis.Stats.add(this.pageNumber,this._stats))},G=new eU({callback:h,params:{canvasContext:l,viewport:U,transform:F,background:t},objs:this.objs,commonObjs:this.commonObjs,annotationCanvasMap:V,operatorList:b.operatorList,pageIndex:this._pageIndex,canvasFactory:this._transport.canvasFactory,filterFactory:this._transport.filterFactory,useRequestAnimationFrame:!i,pdfBug:this._pdfBug,pageColors:W});(b.renderTasks||=new Set).add(G);const S=G.task;return Promise.all([b.displayReadyCapability.promise,Q]).then(([T,Y])=>{if(this.destroyed){h();return}if(this._stats?.time("Rendering"),!(Y.renderingIntent&s))throw new Error("Must use the same `intent`-argument when calling the `PDFPageProxy.render` and `PDFDocumentProxy.getOptionalContentConfig` methods.");G.initializeGraphics({transparency:T,optionalContentConfig:Y}),G.operatorListChanged()}).catch(h),S}getOperatorList({intent:l="display",annotationMode:U=QU.ENABLE,printAnnotationStorage:d=null,isEditing:Z=!1}={}){function F(){Q.operatorList.lastChunk&&(Q.opListReadCapability.resolve(Q.operatorList),Q.renderTasks.delete(V))}const t=this._transport.getRenderingIntent(l,U,d,Z,!0);let Q=this._intentStates.get(t.cacheKey);Q||(Q=Object.create(null),this._intentStates.set(t.cacheKey,Q));let V;return Q.opListReadCapability||(V=Object.create(null),V.operatorListChanged=F,Q.opListReadCapability=Promise.withResolvers(),(Q.renderTasks||=new Set).add(V),Q.operatorList={fnArray:[],argsArray:[],lastChunk:!1,separateAnnots:null},this._stats?.time("Page Request"),this._pumpOperatorList(t)),Q.opListReadCapability.promise}streamTextContent({includeMarkedContent:l=!1,disableNormalization:U=!1}={}){return this._transport.messageHandler.sendWithStream("GetTextContent",{pageIndex:this._pageIndex,includeMarkedContent:l===!0,disableNormalization:U===!0},{highWaterMark:100,size(Z){return Z.items.length}})}getTextContent(l={}){if(this._transport._htmlForXfa)return this.getXfa().then(d=>IU.textContent(d));const U=this.streamTextContent(l);return new Promise(function(d,Z){function F(){t.read().then(function({value:V,done:W}){if(W){d(Q);return}Q.lang??=V.lang,Object.assign(Q.styles,V.styles),Q.items.push(...V.items),F()},Z)}const t=U.getReader(),Q={items:[],styles:Object.create(null),lang:null};F()})}getStructTree(){return this._transport.getStructTree(this._pageIndex)}_destroy(){this.destroyed=!0;const l=[];for(const U of this._intentStates.values())if(this._abortOperatorList({intentState:U,reason:new Error("Page was destroyed."),force:!0}),!U.opListReadCapability)for(const d of U.renderTasks)l.push(d.completed),d.cancel();return this.objs.clear(),this.#U=!1,this.#Z(),Promise.all(l)}cleanup(l=!1){this.#U=!0;const U=this.#d(!1);return l&&U&&(this._stats&&=new NZ),U}#d(l=!1){if(this.#Z(),!this.#U||this.destroyed)return!1;if(l)return this.#l=setTimeout(()=>{this.#l=null,this.#d(!1)},mR),!1;for(const{renderTasks:U,operatorList:d}of this._intentStates.values())if(U.size>0||!d.lastChunk)return!1;return this._intentStates.clear(),this.objs.clear(),this.#U=!1,!0}#Z(){this.#l&&(clearTimeout(this.#l),this.#l=null)}_startRenderPage(l,U){const d=this._intentStates.get(U);d&&(this._stats?.timeEnd("Page Request"),d.displayReadyCapability?.resolve(l))}_renderPageChunk(l,U){for(let d=0,Z=l.length;d<Z;d++)U.operatorList.fnArray.push(l.fnArray[d]),U.operatorList.argsArray.push(l.argsArray[d]);U.operatorList.lastChunk=l.lastChunk,U.operatorList.separateAnnots=l.separateAnnots;for(const d of U.renderTasks)d.operatorListChanged();l.lastChunk&&this.#d(!0)}_pumpOperatorList({renderingIntent:l,cacheKey:U,annotationStorageSerializable:d,modifiedIds:Z}){const{map:F,transfer:t}=d,V=this._transport.messageHandler.sendWithStream("GetOperatorList",{pageIndex:this._pageIndex,intent:l,cacheKey:U,annotationStorage:F,modifiedIds:Z},t).getReader(),W=this._intentStates.get(U);W.streamReader=V;const R=()=>{V.read().then(({value:N,done:n})=>{if(n){W.streamReader=null;return}this._transport.destroyed||(this._renderPageChunk(N,W),R())},N=>{if(W.streamReader=null,!this._transport.destroyed){if(W.operatorList){W.operatorList.lastChunk=!0;for(const n of W.renderTasks)n.operatorListChanged();this.#d(!0)}if(W.displayReadyCapability)W.displayReadyCapability.reject(N);else if(W.opListReadCapability)W.opListReadCapability.reject(N);else throw N}})};R()}_abortOperatorList({intentState:l,reason:U,force:d=!1}){if(l.streamReader){if(l.streamReaderCancelTimeout&&(clearTimeout(l.streamReaderCancelTimeout),l.streamReaderCancelTimeout=null),!d){if(l.renderTasks.size>0)return;if(U instanceof vd){let Z=hR;U.extraDelay>0&&U.extraDelay<1e3&&(Z+=U.extraDelay),l.streamReaderCancelTimeout=setTimeout(()=>{l.streamReaderCancelTimeout=null,this._abortOperatorList({intentState:l,reason:U,force:!0})},Z);return}}if(l.streamReader.cancel(new bU(U.message)).catch(()=>{}),l.streamReader=null,!this._transport.destroyed){for(const[Z,F]of this._intentStates)if(F===l){this._intentStates.delete(Z);break}this.cleanup()}}}get stats(){return this._stats}}class uR{#l=new Map;#U=Promise.resolve();postMessage(l,U){const d={data:structuredClone(l,U?{transfer:U}:null)};this.#U.then(()=>{for(const[Z]of this.#l)Z.call(this,d)})}addEventListener(l,U,d=null){let Z=null;if(d?.signal instanceof AbortSignal){const{signal:F}=d;if(F.aborted){f("LoopbackPort - cannot use an `aborted` signal.");return}const t=()=>this.removeEventListener(l,U);Z=()=>F.removeEventListener("abort",t),F.addEventListener("abort",t)}this.#l.set(U,Z)}removeEventListener(l,U){this.#l.get(U)?.(),this.#l.delete(U)}terminate(){for(const[,l]of this.#l)l?.();this.#l.clear()}}class ml{static#l=0;static#U=!1;static#d;static{pl&&(this.#U=!0,DU.workerSrc||="./pdf.worker.mjs"),this._isSameOrigin=(l,U)=>{let d;try{if(d=new URL(l),!d.origin||d.origin==="null")return!1}catch{return!1}const Z=new URL(U,d);return d.origin===Z.origin},this._createCDNWrapper=l=>{const U=`await import("${l}");`;return URL.createObjectURL(new Blob([U],{type:"text/javascript"}))}}constructor({name:l=null,port:U=null,verbosity:d=WW()}={}){if(this.name=l,this.destroyed=!1,this.verbosity=d,this._readyCapability=Promise.withResolvers(),this._port=null,this._webWorker=null,this._messageHandler=null,U){if(ml.#d?.has(U))throw new Error("Cannot use more than one PDFWorker per port.");(ml.#d||=new WeakMap).set(U,this),this._initializeFromPort(U);return}this._initialize()}get promise(){return this._readyCapability.promise}#Z(){this._readyCapability.resolve(),this._messageHandler.send("configure",{verbosity:this.verbosity})}get port(){return this._port}get messageHandler(){return this._messageHandler}_initializeFromPort(l){this._port=l,this._messageHandler=new yU("main","worker",l),this._messageHandler.on("ready",function(){}),this.#Z()}_initialize(){if(ml.#U||ml.#t){this._setupFakeWorker();return}let{workerSrc:l}=ml;try{ml._isSameOrigin(window.location.href,l)||(l=ml._createCDNWrapper(new URL(l,window.location).href));const U=new Worker(l,{type:"module"}),d=new yU("main","worker",U),Z=()=>{F.abort(),d.destroy(),U.terminate(),this.destroyed?this._readyCapability.reject(new Error("Worker was destroyed")):this._setupFakeWorker()},F=new AbortController;U.addEventListener("error",()=>{this._webWorker||Z()},{signal:F.signal}),d.on("test",Q=>{if(F.abort(),this.destroyed||!Q){Z();return}this._messageHandler=d,this._port=U,this._webWorker=U,this.#Z()}),d.on("ready",Q=>{if(F.abort(),this.destroyed){Z();return}try{t()}catch{this._setupFakeWorker()}});const t=()=>{const Q=new Uint8Array;d.send("test",Q,[Q.buffer])};t();return}catch{cd("The worker has been disabled.")}this._setupFakeWorker()}_setupFakeWorker(){ml.#U||(f("Setting up fake worker."),ml.#U=!0),ml._setupFakeWorkerGlobal.then(l=>{if(this.destroyed){this._readyCapability.reject(new Error("Worker was destroyed"));return}const U=new uR;this._port=U;const d=`fake${ml.#l++}`,Z=new yU(d+"_worker",d,U);l.setup(Z,U),this._messageHandler=new yU(d,d+"_worker",U),this.#Z()}).catch(l=>{this._readyCapability.reject(new Error(`Setting up fake worker failed: "${l.message}".`))})}destroy(){this.destroyed=!0,this._webWorker?.terminate(),this._webWorker=null,ml.#d?.delete(this._port),this._port=null,this._messageHandler?.destroy(),this._messageHandler=null}static fromPort(l){if(!l?.port)throw new Error("PDFWorker.fromPort - invalid method signature.");const U=this.#d?.get(l.port);if(U){if(U._pendingDestroy)throw new Error("PDFWorker.fromPort - the worker is being destroyed.\nPlease remember to await `PDFDocumentLoadingTask.destroy()`-calls.");return U}return new ml(l)}static get workerSrc(){if(DU.workerSrc)return DU.workerSrc;throw new Error('No "GlobalWorkerOptions.workerSrc" specified.')}static get#t(){try{return globalThis.pdfjsWorker?.WorkerMessageHandler||null}catch{return null}}static get _setupFakeWorkerGlobal(){return $(this,"_setupFakeWorkerGlobal",(async()=>this.#t?this.#t:(await import(this.workerSrc)).WorkerMessageHandler)())}}class pR{#l=new Map;#U=new Map;#d=new Map;#Z=new Map;#t=null;constructor(l,U,d,Z,F){this.messageHandler=l,this.loadingTask=U,this.commonObjs=new aF,this.fontLoader=new uW({ownerDocument:Z.ownerDocument,styleElement:Z.styleElement}),this.loadingParams=Z.loadingParams,this._params=Z,this.canvasFactory=F.canvasFactory,this.filterFactory=F.filterFactory,this.cMapReaderFactory=F.cMapReaderFactory,this.standardFontDataFactory=F.standardFontDataFactory,this.destroyed=!1,this.destroyCapability=null,this._networkStream=d,this._fullReader=null,this._lastProgress=null,this.downloadInfoCapability=Promise.withResolvers(),this.setupMessageHandler()}#F(l,U=null){const d=this.#l.get(l);if(d)return d;const Z=this.messageHandler.sendWithPromise(l,U);return this.#l.set(l,Z),Z}get annotationStorage(){return $(this,"annotationStorage",new qd)}getRenderingIntent(l,U=QU.ENABLE,d=null,Z=!1,F=!1){let t=Cl.DISPLAY,Q=yd;switch(l){case"any":t=Cl.ANY;break;case"display":break;case"print":t=Cl.PRINT;break;default:f(`getRenderingIntent - invalid intent: ${l}`)}const V=t&Cl.PRINT&&d instanceof $Z?d:this.annotationStorage;switch(U){case QU.DISABLE:t+=Cl.ANNOTATIONS_DISABLE;break;case QU.ENABLE:break;case QU.ENABLE_FORMS:t+=Cl.ANNOTATIONS_FORMS;break;case QU.ENABLE_STORAGE:t+=Cl.ANNOTATIONS_STORAGE,Q=V.serializable;break;default:f(`getRenderingIntent - invalid annotationMode: ${U}`)}Z&&(t+=Cl.IS_EDITING),F&&(t+=Cl.OPLIST);const{ids:W,hash:R}=V.modifiedIds,N=[t,Q.hash,R];return{renderingIntent:t,cacheKey:N.join("_"),annotationStorageSerializable:Q,modifiedIds:W}}destroy(){if(this.destroyCapability)return this.destroyCapability.promise;this.destroyed=!0,this.destroyCapability=Promise.withResolvers(),this.#t?.reject(new Error("Worker was destroyed during onPassword callback"));const l=[];for(const d of this.#U.values())l.push(d._destroy());this.#U.clear(),this.#d.clear(),this.#Z.clear(),this.hasOwnProperty("annotationStorage")&&this.annotationStorage.resetModified();const U=this.messageHandler.sendWithPromise("Terminate",null);return l.push(U),Promise.all(l).then(()=>{this.commonObjs.clear(),this.fontLoader.clear(),this.#l.clear(),this.filterFactory.destroy(),ul.cleanup(),this._networkStream?.cancelAllRequests(new bU("Worker was terminated.")),this.messageHandler?.destroy(),this.messageHandler=null,this.destroyCapability.resolve()},this.destroyCapability.reject),this.destroyCapability.promise}setupMessageHandler(){const{messageHandler:l,loadingTask:U}=this;l.on("GetReader",(d,Z)=>{al(this._networkStream,"GetReader - no `IPDFStream` instance available."),this._fullReader=this._networkStream.getFullReader(),this._fullReader.onProgress=F=>{this._lastProgress={loaded:F.loaded,total:F.total}},Z.onPull=()=>{this._fullReader.read().then(function({value:F,done:t}){if(t){Z.close();return}al(F instanceof ArrayBuffer,"GetReader - expected an ArrayBuffer."),Z.enqueue(new Uint8Array(F),1,[F])}).catch(F=>{Z.error(F)})},Z.onCancel=F=>{this._fullReader.cancel(F),Z.ready.catch(t=>{if(!this.destroyed)throw t})}}),l.on("ReaderHeadersReady",async d=>{await this._fullReader.headersReady;const{isStreamingSupported:Z,isRangeSupported:F,contentLength:t}=this._fullReader;return(!Z||!F)&&(this._lastProgress&&U.onProgress?.(this._lastProgress),this._fullReader.onProgress=Q=>{U.onProgress?.({loaded:Q.loaded,total:Q.total})}),{isStreamingSupported:Z,isRangeSupported:F,contentLength:t}}),l.on("GetRangeReader",(d,Z)=>{al(this._networkStream,"GetRangeReader - no `IPDFStream` instance available.");const F=this._networkStream.getRangeReader(d.begin,d.end);if(!F){Z.close();return}Z.onPull=()=>{F.read().then(function({value:t,done:Q}){if(Q){Z.close();return}al(t instanceof ArrayBuffer,"GetRangeReader - expected an ArrayBuffer."),Z.enqueue(new Uint8Array(t),1,[t])}).catch(t=>{Z.error(t)})},Z.onCancel=t=>{F.cancel(t),Z.ready.catch(Q=>{if(!this.destroyed)throw Q})}}),l.on("GetDoc",({pdfInfo:d})=>{this._numPages=d.numPages,this._htmlForXfa=d.htmlForXfa,delete d.htmlForXfa,U._capability.resolve(new YR(d,this))}),l.on("DocException",function(d){let Z;switch(d.name){case"PasswordException":Z=new ud(d.message,d.code);break;case"InvalidPDFException":Z=new fZ(d.message);break;case"MissingPDFException":Z=new wU(d.message);break;case"UnexpectedResponseException":Z=new Vd(d.message,d.status);break;case"UnknownErrorException":Z=new pd(d.message,d.details);break;default:Zl("DocException - expected a valid Error.")}U._capability.reject(Z)}),l.on("PasswordRequest",d=>{if(this.#t=Promise.withResolvers(),U.onPassword){const Z=F=>{F instanceof Error?this.#t.reject(F):this.#t.resolve({password:F})};try{U.onPassword(Z,d.code)}catch(F){this.#t.reject(F)}}else this.#t.reject(new ud(d.message,d.code));return this.#t.promise}),l.on("DataLoaded",d=>{U.onProgress?.({loaded:d.length,total:d.length}),this.downloadInfoCapability.resolve(d)}),l.on("StartRenderPage",d=>{if(this.destroyed)return;this.#U.get(d.pageIndex)._startRenderPage(d.transparency,d.cacheKey)}),l.on("commonobj",([d,Z,F])=>{if(this.destroyed||this.commonObjs.has(d))return null;switch(Z){case"Font":const{disableFontFace:t,fontExtraProperties:Q,pdfBug:V}=this._params;if("error"in F){const n=F.error;f(`Error during font loading: ${n}`),this.commonObjs.resolve(d,n);break}const W=V&&globalThis.FontInspector?.enabled?(n,s)=>globalThis.FontInspector.fontAdded(n,s):null,R=new pW(F,{disableFontFace:t,inspectFont:W});this.fontLoader.bind(R).catch(()=>l.sendWithPromise("FontFallback",{id:d})).finally(()=>{!Q&&R.data&&(R.data=null),this.commonObjs.resolve(d,R)});break;case"CopyLocalImage":const{imageRef:N}=F;al(N,"The imageRef must be defined.");for(const n of this.#U.values())for(const[,s]of n.objs)if(s?.ref===N)return s.dataLen?(this.commonObjs.resolve(d,structuredClone(s)),s.dataLen):null;break;case"FontPath":case"Image":case"Pattern":this.commonObjs.resolve(d,F);break;default:throw new Error(`Got unknown common object type ${Z}`)}return null}),l.on("obj",([d,Z,F,t])=>{if(this.destroyed)return;const Q=this.#U.get(Z);if(!Q.objs.has(d)){if(Q._intentStates.size===0){t?.bitmap?.close();return}switch(F){case"Image":Q.objs.resolve(d,t),t?.dataLen>FW&&(Q._maybeCleanupAfterRender=!0);break;case"Pattern":Q.objs.resolve(d,t);break;default:throw new Error(`Got unknown object type ${F}`)}}}),l.on("DocProgress",d=>{this.destroyed||U.onProgress?.({loaded:d.loaded,total:d.total})}),l.on("FetchBuiltInCMap",async d=>{if(this.destroyed)throw new Error("Worker was destroyed.");if(!this.cMapReaderFactory)throw new Error("CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.");return this.cMapReaderFactory.fetch(d)}),l.on("FetchStandardFontData",async d=>{if(this.destroyed)throw new Error("Worker was destroyed.");if(!this.standardFontDataFactory)throw new Error("StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.");return this.standardFontDataFactory.fetch(d)})}getData(){return this.messageHandler.sendWithPromise("GetData",null)}saveDocument(){this.annotationStorage.size<=0&&f("saveDocument called while `annotationStorage` is empty, please use the getData-method instead.");const{map:l,transfer:U}=this.annotationStorage.serializable;return this.messageHandler.sendWithPromise("SaveDocument",{isPureXfa:!!this._htmlForXfa,numPages:this._numPages,annotationStorage:l,filename:this._fullReader?.filename??null},U).finally(()=>{this.annotationStorage.resetModified()})}getPage(l){if(!Number.isInteger(l)||l<=0||l>this._numPages)return Promise.reject(new Error("Invalid page request."));const U=l-1,d=this.#d.get(U);if(d)return d;const Z=this.messageHandler.sendWithPromise("GetPage",{pageIndex:U}).then(F=>{if(this.destroyed)throw new Error("Transport destroyed");F.refStr&&this.#Z.set(F.refStr,l);const t=new BR(U,F,this,this._params.pdfBug);return this.#U.set(U,t),t});return this.#d.set(U,Z),Z}getPageIndex(l){return XZ(l)?this.messageHandler.sendWithPromise("GetPageIndex",{num:l.num,gen:l.gen}):Promise.reject(new Error("Invalid pageIndex request."))}getAnnotations(l,U){return this.messageHandler.sendWithPromise("GetAnnotations",{pageIndex:l,intent:U})}getFieldObjects(){return this.#F("GetFieldObjects")}hasJSActions(){return this.#F("HasJSActions")}getCalculationOrderIds(){return this.messageHandler.sendWithPromise("GetCalculationOrderIds",null)}getDestinations(){return this.messageHandler.sendWithPromise("GetDestinations",null)}getDestination(l){return typeof l!="string"?Promise.reject(new Error("Invalid destination request.")):this.messageHandler.sendWithPromise("GetDestination",{id:l})}getPageLabels(){return this.messageHandler.sendWithPromise("GetPageLabels",null)}getPageLayout(){return this.messageHandler.sendWithPromise("GetPageLayout",null)}getPageMode(){return this.messageHandler.sendWithPromise("GetPageMode",null)}getViewerPreferences(){return this.messageHandler.sendWithPromise("GetViewerPreferences",null)}getOpenAction(){return this.messageHandler.sendWithPromise("GetOpenAction",null)}getAttachments(){return this.messageHandler.sendWithPromise("GetAttachments",null)}getDocJSActions(){return this.#F("GetDocJSActions")}getPageJSActions(l){return this.messageHandler.sendWithPromise("GetPageJSActions",{pageIndex:l})}getStructTree(l){return this.messageHandler.sendWithPromise("GetStructTree",{pageIndex:l})}getOutline(){return this.messageHandler.sendWithPromise("GetOutline",null)}getOptionalContentConfig(l){return this.#F("GetOptionalContentConfig").then(U=>new _W(U,l))}getPermissions(){return this.messageHandler.sendWithPromise("GetPermissions",null)}getMetadata(){const l="GetMetadata",U=this.#l.get(l);if(U)return U;const d=this.messageHandler.sendWithPromise(l,null).then(Z=>({info:Z[0],metadata:Z[1]?new fW(Z[1]):null,contentDispositionFilename:this._fullReader?.filename??null,contentLength:this._fullReader?.contentLength??null}));return this.#l.set(l,d),d}getMarkInfo(){return this.messageHandler.sendWithPromise("GetMarkInfo",null)}async startCleanup(l=!1){if(!this.destroyed){await this.messageHandler.sendWithPromise("Cleanup",null);for(const U of this.#U.values())if(!U.cleanup())throw new Error(`startCleanup: Page ${U.pageNumber} is currently rendering.`);this.commonObjs.clear(),l||this.fontLoader.clear(),this.#l.clear(),this.filterFactory.destroy(!0),ul.cleanup()}}cachedPageNumber(l){if(!XZ(l))return null;const U=l.gen===0?`${l.num}R`:`${l.num}R${l.gen}`;return this.#Z.get(U)??null}}const HU=Symbol("INITIAL_DATA");class aF{#l=Object.create(null);#U(l){return this.#l[l]||={...Promise.withResolvers(),data:HU}}get(l,U=null){if(U){const Z=this.#U(l);return Z.promise.then(()=>U(Z.data)),null}const d=this.#l[l];if(!d||d.data===HU)throw new Error(`Requesting object that isn't resolved yet ${l}.`);return d.data}has(l){const U=this.#l[l];return!!U&&U.data!==HU}resolve(l,U=null){const d=this.#U(l);d.data=U,d.resolve()}clear(){for(const l in this.#l){const{data:U}=this.#l[l];U?.bitmap?.close()}this.#l=Object.create(null)}*[Symbol.iterator](){for(const l in this.#l){const{data:U}=this.#l[l];U!==HU&&(yield[l,U])}}}class oR{#l=null;constructor(l){this.#l=l,this.onContinue=null}get promise(){return this.#l.capability.promise}cancel(l=0){this.#l.cancel(null,l)}get separateAnnots(){const{separateAnnots:l}=this.#l.operatorList;if(!l)return!1;const{annotationCanvasMap:U}=this.#l;return l.form||l.canvas&&U?.size>0}}class eU{#l=null;static#U=new WeakSet;constructor({callback:l,params:U,objs:d,commonObjs:Z,annotationCanvasMap:F,operatorList:t,pageIndex:Q,canvasFactory:V,filterFactory:W,useRequestAnimationFrame:R=!1,pdfBug:N=!1,pageColors:n=null}){this.callback=l,this.params=U,this.objs=d,this.commonObjs=Z,this.annotationCanvasMap=F,this.operatorListIdx=null,this.operatorList=t,this._pageIndex=Q,this.canvasFactory=V,this.filterFactory=W,this._pdfBug=N,this.pageColors=n,this.running=!1,this.graphicsReadyCallback=null,this.graphicsReady=!1,this._useRequestAnimationFrame=R===!0&&typeof window<"u",this.cancelled=!1,this.capability=Promise.withResolvers(),this.task=new oR(this),this._cancelBound=this.cancel.bind(this),this._continueBound=this._continue.bind(this),this._scheduleNextBound=this._scheduleNext.bind(this),this._nextBound=this._next.bind(this),this._canvas=U.canvasContext.canvas}get completed(){return this.capability.promise.catch(function(){})}initializeGraphics({transparency:l=!1,optionalContentConfig:U}){if(this.cancelled)return;if(this._canvas){if(eU.#U.has(this._canvas))throw new Error("Cannot use the same canvas during multiple render() operations. Use different canvas or ensure previous operations were cancelled or completed.");eU.#U.add(this._canvas)}this._pdfBug&&globalThis.StepperManager?.enabled&&(this.stepper=globalThis.StepperManager.create(this._pageIndex),this.stepper.init(this.operatorList),this.stepper.nextBreakPoint=this.stepper.getNextBreakPoint());const{canvasContext:d,viewport:Z,transform:F,background:t}=this.params;this.gfx=new TU(d,this.commonObjs,this.objs,this.canvasFactory,this.filterFactory,{optionalContentConfig:U},this.annotationCanvasMap,this.pageColors),this.gfx.beginDrawing({transform:F,viewport:Z,transparency:l,background:t}),this.operatorListIdx=0,this.graphicsReady=!0,this.graphicsReadyCallback?.()}cancel(l=null,U=0){this.running=!1,this.cancelled=!0,this.gfx?.endDrawing(),this.#l&&(window.cancelAnimationFrame(this.#l),this.#l=null),eU.#U.delete(this._canvas),this.callback(l||new vd(`Rendering cancelled, page ${this._pageIndex+1}`,U))}operatorListChanged(){if(!this.graphicsReady){this.graphicsReadyCallback||=this._continueBound;return}this.stepper?.updateOperatorList(this.operatorList),!this.running&&this._continue()}_continue(){this.running=!0,!this.cancelled&&(this.task.onContinue?this.task.onContinue(this._scheduleNextBound):this._scheduleNext())}_scheduleNext(){this._useRequestAnimationFrame?this.#l=window.requestAnimationFrame(()=>{this.#l=null,this._nextBound().catch(this._cancelBound)}):Promise.resolve().then(this._nextBound).catch(this._cancelBound)}async _next(){this.cancelled||(this.operatorListIdx=this.gfx.executeOperatorList(this.operatorList,this.operatorListIdx,this._continueBound,this.stepper),this.operatorListIdx===this.operatorList.argsArray.length&&(this.running=!1,this.operatorList.lastChunk&&(this.gfx.endDrawing(),eU.#U.delete(this._canvas),this.callback())))}}const yR="4.9.124",LR="867aaf01f";function YZ(c){return Math.floor(Math.max(0,Math.min(1,c))*255).toString(16).padStart(2,"0")}function uU(c){return Math.max(0,Math.min(255,255*c))}class BZ{static CMYK_G([l,U,d,Z]){return["G",1-Math.min(1,.3*l+.59*d+.11*U+Z)]}static G_CMYK([l]){return["CMYK",0,0,0,1-l]}static G_RGB([l]){return["RGB",l,l,l]}static G_rgb([l]){return l=uU(l),[l,l,l]}static G_HTML([l]){const U=YZ(l);return`#${U}${U}${U}`}static RGB_G([l,U,d]){return["G",.3*l+.59*U+.11*d]}static RGB_rgb(l){return l.map(uU)}static RGB_HTML(l){return`#${l.map(YZ).join("")}`}static T_HTML(){return"#00000000"}static T_rgb(){return[null]}static CMYK_RGB([l,U,d,Z]){return["RGB",1-Math.min(1,l+Z),1-Math.min(1,d+Z),1-Math.min(1,U+Z)]}static CMYK_rgb([l,U,d,Z]){return[uU(1-Math.min(1,l+Z)),uU(1-Math.min(1,d+Z)),uU(1-Math.min(1,U+Z))]}static CMYK_HTML(l){const U=this.CMYK_RGB(l).slice(1);return this.RGB_HTML(U)}static RGB_CMYK([l,U,d]){const Z=1-l,F=1-U,t=1-d,Q=Math.min(Z,F,t);return["CMYK",Z,F,t,Q]}}class zR{create(l,U,d=!1){if(l<=0||U<=0)throw new Error("Invalid SVG dimensions");const Z=this._createSVG("svg:svg");return Z.setAttribute("version","1.1"),d||(Z.setAttribute("width",`${l}px`),Z.setAttribute("height",`${U}px`)),Z.setAttribute("preserveAspectRatio","none"),Z.setAttribute("viewBox",`0 0 ${l} ${U}`),Z}createElement(l){if(typeof l!="string")throw new Error("Invalid SVG element type");return this._createSVG(l)}_createSVG(l){Zl("Abstract method `_createSVG` called.")}}class dZ extends zR{_createSVG(l){return document.createElementNS(UU,l)}}class bF{static setupStorage(l,U,d,Z,F){const t=Z.getValue(U,{value:null});switch(d.name){case"textarea":if(t.value!==null&&(l.textContent=t.value),F==="print")break;l.addEventListener("input",Q=>{Z.setValue(U,{value:Q.target.value})});break;case"input":if(d.attributes.type==="radio"||d.attributes.type==="checkbox"){if(t.value===d.attributes.xfaOn?l.setAttribute("checked",!0):t.value===d.attributes.xfaOff&&l.removeAttribute("checked"),F==="print")break;l.addEventListener("change",Q=>{Z.setValue(U,{value:Q.target.checked?Q.target.getAttribute("xfaOn"):Q.target.getAttribute("xfaOff")})})}else{if(t.value!==null&&l.setAttribute("value",t.value),F==="print")break;l.addEventListener("input",Q=>{Z.setValue(U,{value:Q.target.value})})}break;case"select":if(t.value!==null){l.setAttribute("value",t.value);for(const Q of d.children)Q.attributes.value===t.value?Q.attributes.selected=!0:Q.attributes.hasOwnProperty("selected")&&delete Q.attributes.selected}l.addEventListener("input",Q=>{const V=Q.target.options,W=V.selectedIndex===-1?"":V[V.selectedIndex].value;Z.setValue(U,{value:W})});break}}static setAttributes({html:l,element:U,storage:d=null,intent:Z,linkService:F}){const{attributes:t}=U,Q=l instanceof HTMLAnchorElement;t.type==="radio"&&(t.name=`${t.name}-${Z}`);for(const[V,W]of Object.entries(t))if(W!=null)switch(V){case"class":W.length&&l.setAttribute(V,W.join(" "));break;case"dataId":break;case"id":l.setAttribute("data-element-id",W);break;case"style":Object.assign(l.style,W);break;case"textContent":l.textContent=W;break;default:(!Q||V!=="href"&&V!=="newWindow")&&l.setAttribute(V,W)}Q&&F.addLinkAttributes(l,t.href,t.newWindow),d&&t.dataId&&this.setupStorage(l,t.dataId,U,d)}static render(l){const U=l.annotationStorage,d=l.linkService,Z=l.xfaHtml,F=l.intent||"display",t=document.createElement(Z.name);Z.attributes&&this.setAttributes({html:t,element:Z,intent:F,linkService:d});const Q=F!=="richText",V=l.div;if(V.append(t),l.viewport){const N=`matrix(${l.viewport.transform.join(",")})`;V.style.transform=N}Q&&V.setAttribute("class","xfaLayer xfaFont");const W=[];if(Z.children.length===0){if(Z.value){const N=document.createTextNode(Z.value);t.append(N),Q&&IU.shouldBuildText(Z.name)&&W.push(N)}return{textDivs:W}}const R=[[Z,-1,t]];for(;R.length>0;){const[N,n,s]=R.at(-1);if(n+1===N.children.length){R.pop();continue}const a=N.children[++R.at(-1)[1]];if(a===null)continue;const{name:b}=a;if(b==="#text"){const h=document.createTextNode(a.value);W.push(h),s.append(h);continue}const i=a?.attributes?.xmlns?document.createElementNS(a.attributes.xmlns,b):document.createElement(b);if(s.append(i),a.attributes&&this.setAttributes({html:i,element:a,storage:U,intent:F,linkService:d}),a.children?.length>0)R.push([a,-1,i]);else if(a.value){const h=document.createTextNode(a.value);Q&&IU.shouldBuildText(b)&&W.push(h),i.append(h)}}for(const N of V.querySelectorAll(".xfaNonInteractive input, .xfaNonInteractive textarea"))N.setAttribute("readOnly",!0);return{textDivs:W}}static update(l){const U=`matrix(${l.viewport.transform.join(",")})`;l.div.style.transform=U,l.div.hidden=!1}}const OU=1e3,kR=9,aU=new WeakSet;function ZU(c){return{width:c[2]-c[0],height:c[3]-c[1]}}class DR{static create(l){switch(l.data.annotationType){case il.LINK:return new iF(l);case il.TEXT:return new IR(l);case il.WIDGET:switch(l.data.fieldType){case"Tx":return new ER(l);case"Btn":return l.data.radioButton?new hF(l):l.data.checkBox?new wR(l):new xR(l);case"Ch":return new jR(l);case"Sig":return new CR(l)}return new iU(l);case il.POPUP:return new zd(l);case il.FREETEXT:return new mF(l);case il.LINE:return new rR(l);case il.SQUARE:return new gR(l);case il.CIRCLE:return new KR(l);case il.POLYLINE:return new JF(l);case il.CARET:return new vR(l);case il.INK:return new ZZ(l);case il.POLYGON:return new HR(l);case il.HIGHLIGHT:return new MF(l);case il.UNDERLINE:return new PR(l);case il.SQUIGGLY:return new fR(l);case il.STRIKEOUT:return new AR(l);case il.STAMP:return new GF(l);case il.FILEATTACHMENT:return new _R(l);default:return new Rl(l)}}}class Rl{#l=null;#U=!1;#d=null;constructor(l,{isRenderable:U=!1,ignoreBorder:d=!1,createQuadrilaterals:Z=!1}={}){this.isRenderable=U,this.data=l.data,this.layer=l.layer,this.linkService=l.linkService,this.downloadManager=l.downloadManager,this.imageResourcesPath=l.imageResourcesPath,this.renderForms=l.renderForms,this.svgFactory=l.svgFactory,this.annotationStorage=l.annotationStorage,this.enableScripting=l.enableScripting,this.hasJSActions=l.hasJSActions,this._fieldObjects=l.fieldObjects,this.parent=l.parent,U&&(this.container=this._createContainer(d)),Z&&this._createQuadrilaterals()}static _hasPopupData({titleObj:l,contentsObj:U,richText:d}){return!!(l?.str||U?.str||d?.str)}get _isEditable(){return this.data.isEditable}get hasPopupData(){return Rl._hasPopupData(this.data)}updateEdited(l){if(!this.container)return;this.#l||={rect:this.data.rect.slice(0)};const{rect:U}=l;U&&this.#Z(U),this.#d?.popup.updateEdited(l)}resetEdited(){this.#l&&(this.#Z(this.#l.rect),this.#d?.popup.resetEdited(),this.#l=null)}#Z(l){const{container:{style:U},data:{rect:d,rotation:Z},parent:{viewport:{rawDims:{pageWidth:F,pageHeight:t,pageX:Q,pageY:V}}}}=this;d?.splice(0,4,...l);const{width:W,height:R}=ZU(l);U.left=`${100*(l[0]-Q)/F}%`,U.top=`${100*(t-l[3]+V)/t}%`,Z===0?(U.width=`${100*W/F}%`,U.height=`${100*R/t}%`):this.setRotation(Z)}_createContainer(l){const{data:U,parent:{page:d,viewport:Z}}=this,F=document.createElement("section");F.setAttribute("data-annotation-id",U.id),this instanceof iU||(F.tabIndex=OU);const{style:t}=F;if(t.zIndex=this.parent.zIndex++,U.alternativeText&&(F.title=U.alternativeText),U.noRotate&&F.classList.add("norotate"),!U.rect||this instanceof zd){const{rotation:b}=U;return!U.hasOwnCanvas&&b!==0&&this.setRotation(b,F),F}const{width:Q,height:V}=ZU(U.rect);if(!l&&U.borderStyle.width>0){t.borderWidth=`${U.borderStyle.width}px`;const b=U.borderStyle.horizontalCornerRadius,i=U.borderStyle.verticalCornerRadius;if(b>0||i>0){const G=`calc(${b}px * var(--scale-factor)) / calc(${i}px * var(--scale-factor))`;t.borderRadius=G}else if(this instanceof hF){const G=`calc(${Q}px * var(--scale-factor)) / calc(${V}px * var(--scale-factor))`;t.borderRadius=G}switch(U.borderStyle.style){case YU.SOLID:t.borderStyle="solid";break;case YU.DASHED:t.borderStyle="dashed";break;case YU.BEVELED:f("Unimplemented border style: beveled");break;case YU.INSET:f("Unimplemented border style: inset");break;case YU.UNDERLINE:t.borderBottomStyle="solid";break}const h=U.borderColor||null;h?(this.#U=!0,t.borderColor=w.makeHexColor(h[0]|0,h[1]|0,h[2]|0)):t.borderWidth=0}const W=w.normalizeRect([U.rect[0],d.view[3]-U.rect[1]+d.view[1],U.rect[2],d.view[3]-U.rect[3]+d.view[1]]),{pageWidth:R,pageHeight:N,pageX:n,pageY:s}=Z.rawDims;t.left=`${100*(W[0]-n)/R}%`,t.top=`${100*(W[1]-s)/N}%`;const{rotation:a}=U;return U.hasOwnCanvas||a===0?(t.width=`${100*Q/R}%`,t.height=`${100*V/N}%`):this.setRotation(a,F),F}setRotation(l,U=this.container){if(!this.data.rect)return;const{pageWidth:d,pageHeight:Z}=this.parent.viewport.rawDims,{width:F,height:t}=ZU(this.data.rect);let Q,V;l%180===0?(Q=100*F/d,V=100*t/Z):(Q=100*t/d,V=100*F/Z),U.style.width=`${Q}%`,U.style.height=`${V}%`,U.setAttribute("data-main-rotation",(360-l)%360)}get _commonActions(){const l=(U,d,Z)=>{const F=Z.detail[U],t=F[0],Q=F.slice(1);Z.target.style[d]=BZ[`${t}_HTML`](Q),this.annotationStorage.setValue(this.data.id,{[d]:BZ[`${t}_rgb`](Q)})};return $(this,"_commonActions",{display:U=>{const{display:d}=U.detail,Z=d%2===1;this.container.style.visibility=Z?"hidden":"visible",this.annotationStorage.setValue(this.data.id,{noView:Z,noPrint:d===1||d===2})},print:U=>{this.annotationStorage.setValue(this.data.id,{noPrint:!U.detail.print})},hidden:U=>{const{hidden:d}=U.detail;this.container.style.visibility=d?"hidden":"visible",this.annotationStorage.setValue(this.data.id,{noPrint:d,noView:d})},focus:U=>{setTimeout(()=>U.target.focus({preventScroll:!1}),0)},userName:U=>{U.target.title=U.detail.userName},readonly:U=>{U.target.disabled=U.detail.readonly},required:U=>{this._setRequired(U.target,U.detail.required)},bgColor:U=>{l("bgColor","backgroundColor",U)},fillColor:U=>{l("fillColor","backgroundColor",U)},fgColor:U=>{l("fgColor","color",U)},textColor:U=>{l("textColor","color",U)},borderColor:U=>{l("borderColor","borderColor",U)},strokeColor:U=>{l("strokeColor","borderColor",U)},rotation:U=>{const d=U.detail.rotation;this.setRotation(d),this.annotationStorage.setValue(this.data.id,{rotation:d})}})}_dispatchEventFromSandbox(l,U){const d=this._commonActions;for(const Z of Object.keys(U.detail))(l[Z]||d[Z])?.(U)}_setDefaultPropertiesFromJS(l){if(!this.enableScripting)return;const U=this.annotationStorage.getRawValue(this.data.id);if(!U)return;const d=this._commonActions;for(const[Z,F]of Object.entries(U)){const t=d[Z];if(t){const Q={detail:{[Z]:F},target:l};t(Q),delete U[Z]}}}_createQuadrilaterals(){if(!this.container)return;const{quadPoints:l}=this.data;if(!l)return;const[U,d,Z,F]=this.data.rect.map(b=>Math.fround(b));if(l.length===8){const[b,i,h,G]=l.subarray(2,6);if(Z===b&&F===i&&U===h&&d===G)return}const{style:t}=this.container;let Q;if(this.#U){const{borderColor:b,borderWidth:i}=t;t.borderWidth=0,Q=["url('data:image/svg+xml;utf8,",'<svg xmlns="http://www.w3.org/2000/svg"',' preserveAspectRatio="none" viewBox="0 0 1 1">',`<g fill="transparent" stroke="${b}" stroke-width="${i}">`],this.container.classList.add("hasBorder")}const V=Z-U,W=F-d,{svgFactory:R}=this,N=R.createElement("svg");N.classList.add("quadrilateralsContainer"),N.setAttribute("width",0),N.setAttribute("height",0);const n=R.createElement("defs");N.append(n);const s=R.createElement("clipPath"),a=`clippath_${this.data.id}`;s.setAttribute("id",a),s.setAttribute("clipPathUnits","objectBoundingBox"),n.append(s);for(let b=2,i=l.length;b<i;b+=8){const h=l[b],G=l[b+1],S=l[b+2],T=l[b+3],Y=R.createElement("rect"),y=(S-U)/V,o=(F-G)/W,u=(h-S)/V,p=(G-T)/W;Y.setAttribute("x",y),Y.setAttribute("y",o),Y.setAttribute("width",u),Y.setAttribute("height",p),s.append(Y),Q?.push(`<rect vector-effect="non-scaling-stroke" x="${y}" y="${o}" width="${u}" height="${p}"/>`)}this.#U&&(Q.push("</g></svg>')"),t.backgroundImage=Q.join("")),this.container.append(N),this.container.style.clipPath=`url(#${a})`}_createPopup(){const{data:l}=this,U=this.#d=new zd({data:{color:l.color,titleObj:l.titleObj,modificationDate:l.modificationDate,contentsObj:l.contentsObj,richText:l.richText,parentRect:l.rect,borderStyle:0,id:`popup_${l.id}`,rotation:l.rotation},parent:this.parent,elements:[this]});this.parent.div.append(U.render())}render(){Zl("Abstract method `AnnotationElement.render` called")}_getElementsByName(l,U=null){const d=[];if(this._fieldObjects){const Z=this._fieldObjects[l];if(Z)for(const{page:F,id:t,exportValues:Q}of Z){if(F===-1||t===U)continue;const V=typeof Q=="string"?Q:null,W=document.querySelector(`[data-element-id="${t}"]`);if(W&&!aU.has(W)){f(`_getElementsByName - element not allowed: ${t}`);continue}d.push({id:t,exportValue:V,domElement:W})}return d}for(const Z of document.getElementsByName(l)){const{exportValue:F}=Z,t=Z.getAttribute("data-element-id");t!==U&&aU.has(Z)&&d.push({id:t,exportValue:F,domElement:Z})}return d}show(){this.container&&(this.container.hidden=!1),this.popup?.maybeShow()}hide(){this.container&&(this.container.hidden=!0),this.popup?.forceHide()}getElementsToTriggerPopup(){return this.container}addHighlightArea(){const l=this.getElementsToTriggerPopup();if(Array.isArray(l))for(const U of l)U.classList.add("highlightArea");else l.classList.add("highlightArea")}_editOnDoubleClick(){if(!this._isEditable)return;const{annotationEditorType:l,data:{id:U}}=this;this.container.addEventListener("dblclick",()=>{this.linkService.eventBus?.dispatch("switchannotationeditormode",{source:this,mode:l,editId:U})})}}class iF extends Rl{constructor(l,U=null){super(l,{isRenderable:!0,ignoreBorder:!!U?.ignoreBorder,createQuadrilaterals:!0}),this.isTooltipOnly=l.data.isTooltipOnly}render(){const{data:l,linkService:U}=this,d=document.createElement("a");d.setAttribute("data-element-id",l.id);let Z=!1;return l.url?(U.addLinkAttributes(d,l.url,l.newWindow),Z=!0):l.action?(this._bindNamedAction(d,l.action),Z=!0):l.attachment?(this.#U(d,l.attachment,l.attachmentDest),Z=!0):l.setOCGState?(this.#d(d,l.setOCGState),Z=!0):l.dest?(this._bindLink(d,l.dest),Z=!0):(l.actions&&(l.actions.Action||l.actions["Mouse Up"]||l.actions["Mouse Down"])&&this.enableScripting&&this.hasJSActions&&(this._bindJSAction(d,l),Z=!0),l.resetForm?(this._bindResetFormAction(d,l.resetForm),Z=!0):this.isTooltipOnly&&!Z&&(this._bindLink(d,""),Z=!0)),this.container.classList.add("linkAnnotation"),Z&&this.container.append(d),this.container}#l(){this.container.setAttribute("data-internal-link","")}_bindLink(l,U){l.href=this.linkService.getDestinationHash(U),l.onclick=()=>(U&&this.linkService.goToDestination(U),!1),(U||U==="")&&this.#l()}_bindNamedAction(l,U){l.href=this.linkService.getAnchorUrl(""),l.onclick=()=>(this.linkService.executeNamedAction(U),!1),this.#l()}#U(l,U,d=null){l.href=this.linkService.getAnchorUrl(""),U.description&&(l.title=U.description),l.onclick=()=>(this.downloadManager?.openOrDownloadData(U.content,U.filename,d),!1),this.#l()}#d(l,U){l.href=this.linkService.getAnchorUrl(""),l.onclick=()=>(this.linkService.executeSetOCGState(U),!1),this.#l()}_bindJSAction(l,U){l.href=this.linkService.getAnchorUrl("");const d=new Map([["Action","onclick"],["Mouse Up","onmouseup"],["Mouse Down","onmousedown"]]);for(const Z of Object.keys(U.actions)){const F=d.get(Z);F&&(l[F]=()=>(this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U.id,name:Z}}),!1))}l.onclick||(l.onclick=()=>!1),this.#l()}_bindResetFormAction(l,U){const d=l.onclick;if(d||(l.href=this.linkService.getAnchorUrl("")),this.#l(),!this._fieldObjects){f('_bindResetFormAction - "resetForm" action not supported, ensure that the `fieldObjects` parameter is provided.'),d||(l.onclick=()=>!1);return}l.onclick=()=>{d?.();const{fields:Z,refs:F,include:t}=U,Q=[];if(Z.length!==0||F.length!==0){const R=new Set(F);for(const N of Z){const n=this._fieldObjects[N]||[];for(const{id:s}of n)R.add(s)}for(const N of Object.values(this._fieldObjects))for(const n of N)R.has(n.id)===t&&Q.push(n)}else for(const R of Object.values(this._fieldObjects))Q.push(...R);const V=this.annotationStorage,W=[];for(const R of Q){const{id:N}=R;switch(W.push(N),R.type){case"text":{const s=R.defaultValue||"";V.setValue(N,{value:s});break}case"checkbox":case"radiobutton":{const s=R.defaultValue===R.exportValues;V.setValue(N,{value:s});break}case"combobox":case"listbox":{const s=R.defaultValue||"";V.setValue(N,{value:s});break}default:continue}const n=document.querySelector(`[data-element-id="${N}"]`);if(n){if(!aU.has(n)){f(`_bindResetFormAction - element not allowed: ${N}`);continue}}else continue;n.dispatchEvent(new Event("resetform"))}return this.enableScripting&&this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:"app",ids:W,name:"ResetForm"}}),!1}}}class IR extends Rl{constructor(l){super(l,{isRenderable:!0})}render(){this.container.classList.add("textAnnotation");const l=document.createElement("img");return l.src=this.imageResourcesPath+"annotation-"+this.data.name.toLowerCase()+".svg",l.setAttribute("data-l10n-id","pdfjs-text-annotation-type"),l.setAttribute("data-l10n-args",JSON.stringify({type:this.data.name})),!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.append(l),this.container}}class iU extends Rl{render(){return this.container}showElementAndHideCanvas(l){this.data.hasOwnCanvas&&(l.previousSibling?.nodeName==="CANVAS"&&(l.previousSibling.hidden=!0),l.hidden=!1)}_getKeyModifier(l){return ol.platform.isMac?l.metaKey:l.ctrlKey}_setEventListener(l,U,d,Z,F){d.includes("mouse")?l.addEventListener(d,t=>{this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:this.data.id,name:Z,value:F(t),shift:t.shiftKey,modifier:this._getKeyModifier(t)}})}):l.addEventListener(d,t=>{if(d==="blur"){if(!U.focused||!t.relatedTarget)return;U.focused=!1}else if(d==="focus"){if(U.focused)return;U.focused=!0}F&&this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:this.data.id,name:Z,value:F(t)}})})}_setEventListeners(l,U,d,Z){for(const[F,t]of d)(t==="Action"||this.data.actions?.[t])&&((t==="Focus"||t==="Blur")&&(U||={focused:!1}),this._setEventListener(l,U,F,t,Z),t==="Focus"&&!this.data.actions?.Blur?this._setEventListener(l,U,"blur","Blur",null):t==="Blur"&&!this.data.actions?.Focus&&this._setEventListener(l,U,"focus","Focus",null))}_setBackgroundColor(l){const U=this.data.backgroundColor||null;l.style.backgroundColor=U===null?"transparent":w.makeHexColor(U[0],U[1],U[2])}_setTextStyle(l){const U=["left","center","right"],{fontColor:d}=this.data.defaultAppearanceData,Z=this.data.defaultAppearanceData.fontSize||kR,F=l.style;let t;const Q=2,V=W=>Math.round(10*W)/10;if(this.data.multiLine){const W=Math.abs(this.data.rect[3]-this.data.rect[1]-Q),R=Math.round(W/(id*Z))||1,N=W/R;t=Math.min(Z,V(N/id))}else{const W=Math.abs(this.data.rect[3]-this.data.rect[1]-Q);t=Math.min(Z,V(W/id))}F.fontSize=`calc(${t}px * var(--scale-factor))`,F.color=w.makeHexColor(d[0],d[1],d[2]),this.data.textAlignment!==null&&(F.textAlign=U[this.data.textAlignment])}_setRequired(l,U){U?l.setAttribute("required",!0):l.removeAttribute("required"),l.setAttribute("aria-required",U)}}class ER extends iU{constructor(l){const U=l.renderForms||l.data.hasOwnCanvas||!l.data.hasAppearance&&!!l.data.fieldValue;super(l,{isRenderable:U})}setPropertyOnSiblings(l,U,d,Z){const F=this.annotationStorage;for(const t of this._getElementsByName(l.name,l.id))t.domElement&&(t.domElement[U]=d),F.setValue(t.id,{[Z]:d})}render(){const l=this.annotationStorage,U=this.data.id;this.container.classList.add("textWidgetAnnotation");let d=null;if(this.renderForms){const Z=l.getValue(U,{value:this.data.fieldValue});let F=Z.value||"";const t=l.getValue(U,{charLimit:this.data.maxLen}).charLimit;t&&F.length>t&&(F=F.slice(0,t));let Q=Z.formattedValue||this.data.textContent?.join(`
`)||null;Q&&this.data.comb&&(Q=Q.replaceAll(/\s+/g,""));const V={userValue:F,formattedValue:Q,lastCommittedValue:null,commitKey:1,focused:!1};this.data.multiLine?(d=document.createElement("textarea"),d.textContent=Q??F,this.data.doNotScroll&&(d.style.overflowY="hidden")):(d=document.createElement("input"),d.type="text",d.setAttribute("value",Q??F),this.data.doNotScroll&&(d.style.overflowX="hidden")),this.data.hasOwnCanvas&&(d.hidden=!0),aU.add(d),d.setAttribute("data-element-id",U),d.disabled=this.data.readOnly,d.name=this.data.fieldName,d.tabIndex=OU,this._setRequired(d,this.data.required),t&&(d.maxLength=t),d.addEventListener("input",R=>{l.setValue(U,{value:R.target.value}),this.setPropertyOnSiblings(d,"value",R.target.value,"value"),V.formattedValue=null}),d.addEventListener("resetform",R=>{const N=this.data.defaultFieldValue??"";d.value=V.userValue=N,V.formattedValue=null});let W=R=>{const{formattedValue:N}=V;N!=null&&(R.target.value=N),R.target.scrollLeft=0};if(this.enableScripting&&this.hasJSActions){d.addEventListener("focus",N=>{if(V.focused)return;const{target:n}=N;V.userValue&&(n.value=V.userValue),V.lastCommittedValue=n.value,V.commitKey=1,this.data.actions?.Focus||(V.focused=!0)}),d.addEventListener("updatefromsandbox",N=>{this.showElementAndHideCanvas(N.target);const n={value(s){V.userValue=s.detail.value??"",l.setValue(U,{value:V.userValue.toString()}),s.target.value=V.userValue},formattedValue(s){const{formattedValue:a}=s.detail;V.formattedValue=a,a!=null&&s.target!==document.activeElement&&(s.target.value=a),l.setValue(U,{formattedValue:a})},selRange(s){s.target.setSelectionRange(...s.detail.selRange)},charLimit:s=>{const{charLimit:a}=s.detail,{target:b}=s;if(a===0){b.removeAttribute("maxLength");return}b.setAttribute("maxLength",a);let i=V.userValue;!i||i.length<=a||(i=i.slice(0,a),b.value=V.userValue=i,l.setValue(U,{value:i}),this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U,name:"Keystroke",value:i,willCommit:!0,commitKey:1,selStart:b.selectionStart,selEnd:b.selectionEnd}}))}};this._dispatchEventFromSandbox(n,N)}),d.addEventListener("keydown",N=>{V.commitKey=1;let n=-1;if(N.key==="Escape"?n=0:N.key==="Enter"&&!this.data.multiLine?n=2:N.key==="Tab"&&(V.commitKey=3),n===-1)return;const{value:s}=N.target;V.lastCommittedValue!==s&&(V.lastCommittedValue=s,V.userValue=s,this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U,name:"Keystroke",value:s,willCommit:!0,commitKey:n,selStart:N.target.selectionStart,selEnd:N.target.selectionEnd}}))});const R=W;W=null,d.addEventListener("blur",N=>{if(!V.focused||!N.relatedTarget)return;this.data.actions?.Blur||(V.focused=!1);const{value:n}=N.target;V.userValue=n,V.lastCommittedValue!==n&&this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U,name:"Keystroke",value:n,willCommit:!0,commitKey:V.commitKey,selStart:N.target.selectionStart,selEnd:N.target.selectionEnd}}),R(N)}),this.data.actions?.Keystroke&&d.addEventListener("beforeinput",N=>{V.lastCommittedValue=null;const{data:n,target:s}=N,{value:a,selectionStart:b,selectionEnd:i}=s;let h=b,G=i;switch(N.inputType){case"deleteWordBackward":{const S=a.substring(0,b).match(/\w*[^\w]*$/);S&&(h-=S[0].length);break}case"deleteWordForward":{const S=a.substring(b).match(/^[^\w]*\w*/);S&&(G+=S[0].length);break}case"deleteContentBackward":b===i&&(h-=1);break;case"deleteContentForward":b===i&&(G+=1);break}N.preventDefault(),this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U,name:"Keystroke",value:a,change:n||"",willCommit:!1,selStart:h,selEnd:G}})}),this._setEventListeners(d,V,[["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],N=>N.target.value)}if(W&&d.addEventListener("blur",W),this.data.comb){const N=(this.data.rect[2]-this.data.rect[0])/t;d.classList.add("comb"),d.style.letterSpacing=`calc(${N}px * var(--scale-factor) - 1ch)`}}else d=document.createElement("div"),d.textContent=this.data.fieldValue,d.style.verticalAlign="middle",d.style.display="table-cell",this.data.hasOwnCanvas&&(d.hidden=!0);return this._setTextStyle(d),this._setBackgroundColor(d),this._setDefaultPropertiesFromJS(d),this.container.append(d),this.container}}class CR extends iU{constructor(l){super(l,{isRenderable:!!l.data.hasOwnCanvas})}}class wR extends iU{constructor(l){super(l,{isRenderable:l.renderForms})}render(){const l=this.annotationStorage,U=this.data,d=U.id;let Z=l.getValue(d,{value:U.exportValue===U.fieldValue}).value;typeof Z=="string"&&(Z=Z!=="Off",l.setValue(d,{value:Z})),this.container.classList.add("buttonWidgetAnnotation","checkBox");const F=document.createElement("input");return aU.add(F),F.setAttribute("data-element-id",d),F.disabled=U.readOnly,this._setRequired(F,this.data.required),F.type="checkbox",F.name=U.fieldName,Z&&F.setAttribute("checked",!0),F.setAttribute("exportValue",U.exportValue),F.tabIndex=OU,F.addEventListener("change",t=>{const{name:Q,checked:V}=t.target;for(const W of this._getElementsByName(Q,d)){const R=V&&W.exportValue===U.exportValue;W.domElement&&(W.domElement.checked=R),l.setValue(W.id,{value:R})}l.setValue(d,{value:V})}),F.addEventListener("resetform",t=>{const Q=U.defaultFieldValue||"Off";t.target.checked=Q===U.exportValue}),this.enableScripting&&this.hasJSActions&&(F.addEventListener("updatefromsandbox",t=>{const Q={value(V){V.target.checked=V.detail.value!=="Off",l.setValue(d,{value:V.target.checked})}};this._dispatchEventFromSandbox(Q,t)}),this._setEventListeners(F,null,[["change","Validate"],["change","Action"],["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],t=>t.target.checked)),this._setBackgroundColor(F),this._setDefaultPropertiesFromJS(F),this.container.append(F),this.container}}class hF extends iU{constructor(l){super(l,{isRenderable:l.renderForms})}render(){this.container.classList.add("buttonWidgetAnnotation","radioButton");const l=this.annotationStorage,U=this.data,d=U.id;let Z=l.getValue(d,{value:U.fieldValue===U.buttonValue}).value;if(typeof Z=="string"&&(Z=Z!==U.buttonValue,l.setValue(d,{value:Z})),Z)for(const t of this._getElementsByName(U.fieldName,d))l.setValue(t.id,{value:!1});const F=document.createElement("input");if(aU.add(F),F.setAttribute("data-element-id",d),F.disabled=U.readOnly,this._setRequired(F,this.data.required),F.type="radio",F.name=U.fieldName,Z&&F.setAttribute("checked",!0),F.tabIndex=OU,F.addEventListener("change",t=>{const{name:Q,checked:V}=t.target;for(const W of this._getElementsByName(Q,d))l.setValue(W.id,{value:!1});l.setValue(d,{value:V})}),F.addEventListener("resetform",t=>{const Q=U.defaultFieldValue;t.target.checked=Q!=null&&Q===U.buttonValue}),this.enableScripting&&this.hasJSActions){const t=U.buttonValue;F.addEventListener("updatefromsandbox",Q=>{const V={value:W=>{const R=t===W.detail.value;for(const N of this._getElementsByName(W.target.name)){const n=R&&N.id===d;N.domElement&&(N.domElement.checked=n),l.setValue(N.id,{value:n})}}};this._dispatchEventFromSandbox(V,Q)}),this._setEventListeners(F,null,[["change","Validate"],["change","Action"],["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],Q=>Q.target.checked)}return this._setBackgroundColor(F),this._setDefaultPropertiesFromJS(F),this.container.append(F),this.container}}class xR extends iF{constructor(l){super(l,{ignoreBorder:l.data.hasAppearance})}render(){const l=super.render();l.classList.add("buttonWidgetAnnotation","pushButton");const U=l.lastChild;return this.enableScripting&&this.hasJSActions&&U&&(this._setDefaultPropertiesFromJS(U),U.addEventListener("updatefromsandbox",d=>{this._dispatchEventFromSandbox({},d)})),l}}class jR extends iU{constructor(l){super(l,{isRenderable:l.renderForms})}render(){this.container.classList.add("choiceWidgetAnnotation");const l=this.annotationStorage,U=this.data.id,d=l.getValue(U,{value:this.data.fieldValue}),Z=document.createElement("select");aU.add(Z),Z.setAttribute("data-element-id",U),Z.disabled=this.data.readOnly,this._setRequired(Z,this.data.required),Z.name=this.data.fieldName,Z.tabIndex=OU;let F=this.data.combo&&this.data.options.length>0;this.data.combo||(Z.size=this.data.options.length,this.data.multiSelect&&(Z.multiple=!0)),Z.addEventListener("resetform",R=>{const N=this.data.defaultFieldValue;for(const n of Z.options)n.selected=n.value===N});for(const R of this.data.options){const N=document.createElement("option");N.textContent=R.displayValue,N.value=R.exportValue,d.value.includes(R.exportValue)&&(N.setAttribute("selected",!0),F=!1),Z.append(N)}let t=null;if(F){const R=document.createElement("option");R.value=" ",R.setAttribute("hidden",!0),R.setAttribute("selected",!0),Z.prepend(R),t=()=>{R.remove(),Z.removeEventListener("input",t),t=null},Z.addEventListener("input",t)}const Q=R=>{const N=R?"value":"textContent",{options:n,multiple:s}=Z;return s?Array.prototype.filter.call(n,a=>a.selected).map(a=>a[N]):n.selectedIndex===-1?null:n[n.selectedIndex][N]};let V=Q(!1);const W=R=>{const N=R.target.options;return Array.prototype.map.call(N,n=>({displayValue:n.textContent,exportValue:n.value}))};return this.enableScripting&&this.hasJSActions?(Z.addEventListener("updatefromsandbox",R=>{const N={value(n){t?.();const s=n.detail.value,a=new Set(Array.isArray(s)?s:[s]);for(const b of Z.options)b.selected=a.has(b.value);l.setValue(U,{value:Q(!0)}),V=Q(!1)},multipleSelection(n){Z.multiple=!0},remove(n){const s=Z.options,a=n.detail.remove;s[a].selected=!1,Z.remove(a),s.length>0&&Array.prototype.findIndex.call(s,i=>i.selected)===-1&&(s[0].selected=!0),l.setValue(U,{value:Q(!0),items:W(n)}),V=Q(!1)},clear(n){for(;Z.length!==0;)Z.remove(0);l.setValue(U,{value:null,items:[]}),V=Q(!1)},insert(n){const{index:s,displayValue:a,exportValue:b}=n.detail.insert,i=Z.children[s],h=document.createElement("option");h.textContent=a,h.value=b,i?i.before(h):Z.append(h),l.setValue(U,{value:Q(!0),items:W(n)}),V=Q(!1)},items(n){const{items:s}=n.detail;for(;Z.length!==0;)Z.remove(0);for(const a of s){const{displayValue:b,exportValue:i}=a,h=document.createElement("option");h.textContent=b,h.value=i,Z.append(h)}Z.options.length>0&&(Z.options[0].selected=!0),l.setValue(U,{value:Q(!0),items:W(n)}),V=Q(!1)},indices(n){const s=new Set(n.detail.indices);for(const a of n.target.options)a.selected=s.has(a.index);l.setValue(U,{value:Q(!0)}),V=Q(!1)},editable(n){n.target.disabled=!n.detail.editable}};this._dispatchEventFromSandbox(N,R)}),Z.addEventListener("input",R=>{const N=Q(!0),n=Q(!1);l.setValue(U,{value:N}),R.preventDefault(),this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U,name:"Keystroke",value:V,change:n,changeEx:N,willCommit:!1,commitKey:1,keyDown:!1}})}),this._setEventListeners(Z,null,[["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"],["input","Action"],["input","Validate"]],R=>R.target.value)):Z.addEventListener("input",function(R){l.setValue(U,{value:Q(!0)})}),this.data.combo&&this._setTextStyle(Z),this._setBackgroundColor(Z),this._setDefaultPropertiesFromJS(Z),this.container.append(Z),this.container}}class zd extends Rl{constructor(l){const{data:U,elements:d}=l;super(l,{isRenderable:Rl._hasPopupData(U)}),this.elements=d,this.popup=null}render(){this.container.classList.add("popupAnnotation");const l=this.popup=new OR({container:this.container,color:this.data.color,titleObj:this.data.titleObj,modificationDate:this.data.modificationDate,contentsObj:this.data.contentsObj,richText:this.data.richText,rect:this.data.rect,parentRect:this.data.parentRect||null,parent:this.parent,elements:this.elements,open:this.data.open}),U=[];for(const d of this.elements)d.popup=l,d.container.ariaHasPopup="dialog",U.push(d.data.id),d.addHighlightArea();return this.container.setAttribute("aria-controls",U.map(d=>`${Hd}${d}`).join(",")),this.container}}class OR{#l=this.#y.bind(this);#U=this.#u.bind(this);#d=this.#B.bind(this);#Z=this.#Y.bind(this);#t=null;#F=null;#W=null;#c=null;#R=null;#V=null;#N=null;#Q=!1;#n=null;#a=null;#s=null;#i=null;#b=null;#h=null;#m=!1;constructor({container:l,color:U,elements:d,titleObj:Z,modificationDate:F,contentsObj:t,richText:Q,parent:V,rect:W,parentRect:R,open:N}){this.#F=l,this.#b=Z,this.#W=t,this.#i=Q,this.#V=V,this.#t=U,this.#s=W,this.#N=R,this.#R=d,this.#c=_Z.toDateObject(F),this.trigger=d.flatMap(n=>n.getElementsToTriggerPopup());for(const n of this.trigger)n.addEventListener("click",this.#Z),n.addEventListener("mouseenter",this.#d),n.addEventListener("mouseleave",this.#U),n.classList.add("popupTriggerArea");for(const n of d)n.container?.addEventListener("keydown",this.#l);this.#F.hidden=!0,N&&this.#Y()}render(){if(this.#n)return;const l=this.#n=document.createElement("div");if(l.className="popup",this.#t){const F=l.style.outlineColor=w.makeHexColor(...this.#t);CSS.supports("background-color","color-mix(in srgb, red 30%, white)")?l.style.backgroundColor=`color-mix(in srgb, ${F} 30%, white)`:l.style.backgroundColor=w.makeHexColor(...this.#t.map(Q=>Math.floor(.7*(255-Q)+Q)))}const U=document.createElement("span");U.className="header";const d=document.createElement("h1");if(U.append(d),{dir:d.dir,str:d.textContent}=this.#b,l.append(U),this.#c){const F=document.createElement("span");F.classList.add("popupDate"),F.setAttribute("data-l10n-id","pdfjs-annotation-date-time-string"),F.setAttribute("data-l10n-args",JSON.stringify({dateObj:this.#c.valueOf()})),U.append(F)}const Z=this.#M;if(Z)bF.render({xfaHtml:Z,intent:"richText",div:l}),l.lastChild.classList.add("richText","popupContent");else{const F=this._formatContents(this.#W);l.append(F)}this.#F.append(l)}get#M(){const l=this.#i,U=this.#W;return l?.str&&(!U?.str||U.str===l.str)&&this.#i.html||null}get#G(){return this.#M?.attributes?.style?.fontSize||0}get#e(){return this.#M?.attributes?.style?.color||null}#S(l){const U=[],d={str:l,html:{name:"div",attributes:{dir:"auto"},children:[{name:"p",children:U}]}},Z={style:{color:this.#e,fontSize:this.#G?`calc(${this.#G}px * var(--scale-factor))`:""}};for(const F of l.split(`
`))U.push({name:"span",value:F,attributes:Z});return d}_formatContents({str:l,dir:U}){const d=document.createElement("p");d.classList.add("popupContent"),d.dir=U;const Z=l.split(/(?:\r\n?|\n)/);for(let F=0,t=Z.length;F<t;++F){const Q=Z[F];d.append(document.createTextNode(Q)),F<t-1&&d.append(document.createElement("br"))}return d}#y(l){l.altKey||l.shiftKey||l.ctrlKey||l.metaKey||(l.key==="Enter"||l.key==="Escape"&&this.#Q)&&this.#Y()}updateEdited({rect:l,popupContent:U}){this.#h||={contentsObj:this.#W,richText:this.#i},l&&(this.#a=null),U&&(this.#i=this.#S(U),this.#W=null),this.#n?.remove(),this.#n=null}resetEdited(){this.#h&&({contentsObj:this.#W,richText:this.#i}=this.#h,this.#h=null,this.#n?.remove(),this.#n=null,this.#a=null)}#X(){if(this.#a!==null)return;const{page:{view:l},viewport:{rawDims:{pageWidth:U,pageHeight:d,pageX:Z,pageY:F}}}=this.#V;let t=!!this.#N,Q=t?this.#N:this.#s;for(const a of this.#R)if(!Q||w.intersect(a.data.rect,Q)!==null){Q=a.data.rect,t=!0;break}const V=w.normalizeRect([Q[0],l[3]-Q[1]+l[1],Q[2],l[3]-Q[3]+l[1]]),R=t?Q[2]-Q[0]+5:0,N=V[0]+R,n=V[1];this.#a=[100*(N-Z)/U,100*(n-F)/d];const{style:s}=this.#F;s.left=`${this.#a[0]}%`,s.top=`${this.#a[1]}%`}#Y(){this.#Q=!this.#Q,this.#Q?(this.#B(),this.#F.addEventListener("click",this.#Z),this.#F.addEventListener("keydown",this.#l)):(this.#u(),this.#F.removeEventListener("click",this.#Z),this.#F.removeEventListener("keydown",this.#l))}#B(){this.#n||this.render(),this.isVisible?this.#Q&&this.#F.classList.add("focused"):(this.#X(),this.#F.hidden=!1,this.#F.style.zIndex=parseInt(this.#F.style.zIndex)+1e3)}#u(){this.#F.classList.remove("focused"),!(this.#Q||!this.isVisible)&&(this.#F.hidden=!0,this.#F.style.zIndex=parseInt(this.#F.style.zIndex)-1e3)}forceHide(){this.#m=this.isVisible,this.#m&&(this.#F.hidden=!0)}maybeShow(){this.#m&&(this.#n||this.#B(),this.#m=!1,this.#F.hidden=!1)}get isVisible(){return this.#F.hidden===!1}}class mF extends Rl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0}),this.textContent=l.data.textContent,this.textPosition=l.data.textPosition,this.annotationEditorType=v.FREETEXT}render(){if(this.container.classList.add("freeTextAnnotation"),this.textContent){const l=document.createElement("div");l.classList.add("annotationTextContent"),l.setAttribute("role","comment");for(const U of this.textContent){const d=document.createElement("span");d.textContent=U,l.append(d)}this.container.append(l)}return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this._editOnDoubleClick(),this.container}}class rR extends Rl{#l=null;constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0})}render(){this.container.classList.add("lineAnnotation");const l=this.data,{width:U,height:d}=ZU(l.rect),Z=this.svgFactory.create(U,d,!0),F=this.#l=this.svgFactory.createElement("svg:line");return F.setAttribute("x1",l.rect[2]-l.lineCoordinates[0]),F.setAttribute("y1",l.rect[3]-l.lineCoordinates[1]),F.setAttribute("x2",l.rect[2]-l.lineCoordinates[2]),F.setAttribute("y2",l.rect[3]-l.lineCoordinates[3]),F.setAttribute("stroke-width",l.borderStyle.width||1),F.setAttribute("stroke","transparent"),F.setAttribute("fill","transparent"),Z.append(F),this.container.append(Z),!l.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return this.#l}addHighlightArea(){this.container.classList.add("highlightArea")}}class gR extends Rl{#l=null;constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0})}render(){this.container.classList.add("squareAnnotation");const l=this.data,{width:U,height:d}=ZU(l.rect),Z=this.svgFactory.create(U,d,!0),F=l.borderStyle.width,t=this.#l=this.svgFactory.createElement("svg:rect");return t.setAttribute("x",F/2),t.setAttribute("y",F/2),t.setAttribute("width",U-F),t.setAttribute("height",d-F),t.setAttribute("stroke-width",F||1),t.setAttribute("stroke","transparent"),t.setAttribute("fill","transparent"),Z.append(t),this.container.append(Z),!l.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return this.#l}addHighlightArea(){this.container.classList.add("highlightArea")}}class KR extends Rl{#l=null;constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0})}render(){this.container.classList.add("circleAnnotation");const l=this.data,{width:U,height:d}=ZU(l.rect),Z=this.svgFactory.create(U,d,!0),F=l.borderStyle.width,t=this.#l=this.svgFactory.createElement("svg:ellipse");return t.setAttribute("cx",U/2),t.setAttribute("cy",d/2),t.setAttribute("rx",U/2-F/2),t.setAttribute("ry",d/2-F/2),t.setAttribute("stroke-width",F||1),t.setAttribute("stroke","transparent"),t.setAttribute("fill","transparent"),Z.append(t),this.container.append(Z),!l.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return this.#l}addHighlightArea(){this.container.classList.add("highlightArea")}}class JF extends Rl{#l=null;constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0}),this.containerClassName="polylineAnnotation",this.svgElementName="svg:polyline"}render(){this.container.classList.add(this.containerClassName);const{data:{rect:l,vertices:U,borderStyle:d,popupRef:Z}}=this;if(!U)return this.container;const{width:F,height:t}=ZU(l),Q=this.svgFactory.create(F,t,!0);let V=[];for(let R=0,N=U.length;R<N;R+=2){const n=U[R]-l[0],s=l[3]-U[R+1];V.push(`${n},${s}`)}V=V.join(" ");const W=this.#l=this.svgFactory.createElement(this.svgElementName);return W.setAttribute("points",V),W.setAttribute("stroke-width",d.width||1),W.setAttribute("stroke","transparent"),W.setAttribute("fill","transparent"),Q.append(W),this.container.append(Q),!Z&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return this.#l}addHighlightArea(){this.container.classList.add("highlightArea")}}class HR extends JF{constructor(l){super(l),this.containerClassName="polygonAnnotation",this.svgElementName="svg:polygon"}}class vR extends Rl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0})}render(){return this.container.classList.add("caretAnnotation"),!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container}}class ZZ extends Rl{#l=[];constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0}),this.containerClassName="inkAnnotation",this.svgElementName="svg:polyline",this.annotationEditorType=this.data.it==="InkHighlight"?v.HIGHLIGHT:v.INK}render(){this.container.classList.add(this.containerClassName);const{data:{rect:l,inkLists:U,borderStyle:d,popupRef:Z}}=this,{width:F,height:t}=ZU(l),Q=this.svgFactory.create(F,t,!0);for(const V of U){let W=[];for(let N=0,n=V.length;N<n;N+=2){const s=V[N]-l[0],a=l[3]-V[N+1];W.push(`${s},${a}`)}W=W.join(" ");const R=this.svgFactory.createElement(this.svgElementName);this.#l.push(R),R.setAttribute("points",W),R.setAttribute("stroke-width",d.width||1),R.setAttribute("stroke","transparent"),R.setAttribute("fill","transparent"),Q.append(R)}return!Z&&this.hasPopupData&&this._createPopup(),this.container.append(Q),this._editOnDoubleClick(),this.container}getElementsToTriggerPopup(){return this.#l}addHighlightArea(){this.container.classList.add("highlightArea")}}class MF extends Rl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0}),this.annotationEditorType=v.HIGHLIGHT}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("highlightAnnotation"),this._editOnDoubleClick(),this.container}}class PR extends Rl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("underlineAnnotation"),this.container}}class fR extends Rl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("squigglyAnnotation"),this.container}}class AR extends Rl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("strikeoutAnnotation"),this.container}}class GF extends Rl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0}),this.annotationEditorType=v.STAMP}render(){return this.container.classList.add("stampAnnotation"),this.container.setAttribute("role","img"),!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this._editOnDoubleClick(),this.container}}class _R extends Rl{#l=null;constructor(l){super(l,{isRenderable:!0});const{file:U}=this.data;this.filename=U.filename,this.content=U.content,this.linkService.eventBus?.dispatch("fileattachmentannotation",{source:this,...U})}render(){this.container.classList.add("fileAttachmentAnnotation");const{container:l,data:U}=this;let d;U.hasAppearance||U.fillAlpha===0?d=document.createElement("div"):(d=document.createElement("img"),d.src=`${this.imageResourcesPath}annotation-${/paperclip/i.test(U.name)?"paperclip":"pushpin"}.svg`,U.fillAlpha&&U.fillAlpha<1&&(d.style=`filter: opacity(${Math.round(U.fillAlpha*100)}%);`)),d.addEventListener("dblclick",this.#U.bind(this)),this.#l=d;const{isMac:Z}=ol.platform;return l.addEventListener("keydown",F=>{F.key==="Enter"&&(Z?F.metaKey:F.ctrlKey)&&this.#U()}),!U.popupRef&&this.hasPopupData?this._createPopup():d.classList.add("popupTriggerArea"),l.append(d),l}getElementsToTriggerPopup(){return this.#l}addHighlightArea(){this.container.classList.add("highlightArea")}#U(){this.downloadManager?.openOrDownloadData(this.content,this.filename)}}class qR{#l=null;#U=null;#d=new Map;#Z=null;constructor({div:l,accessibilityManager:U,annotationCanvasMap:d,annotationEditorUIManager:Z,page:F,viewport:t,structTreeLayer:Q}){this.div=l,this.#l=U,this.#U=d,this.#Z=Q||null,this.page=F,this.viewport=t,this.zIndex=0,this._annotationEditorUIManager=Z}hasEditableAnnotations(){return this.#d.size>0}async#t(l,U){const d=l.firstChild||l,Z=d.id=`${Hd}${U}`,F=await this.#Z?.getAriaAttributes(Z);if(F)for(const[t,Q]of F)d.setAttribute(t,Q);this.div.append(l),this.#l?.moveElementInDOM(this.div,l,d,!1)}async render(l){const{annotations:U}=l,d=this.div;sU(d,this.viewport);const Z=new Map,F={data:null,layer:d,linkService:l.linkService,downloadManager:l.downloadManager,imageResourcesPath:l.imageResourcesPath||"",renderForms:l.renderForms!==!1,svgFactory:new dZ,annotationStorage:l.annotationStorage||new qd,enableScripting:l.enableScripting===!0,hasJSActions:l.hasJSActions,fieldObjects:l.fieldObjects,parent:this,elements:null};for(const t of U){if(t.noHTML)continue;const Q=t.annotationType===il.POPUP;if(Q){const R=Z.get(t.id);if(!R)continue;F.elements=R}else{const{width:R,height:N}=ZU(t.rect);if(R<=0||N<=0)continue}F.data=t;const V=DR.create(F);if(!V.isRenderable)continue;if(!Q&&t.popupRef){const R=Z.get(t.popupRef);R?R.push(V):Z.set(t.popupRef,[V])}const W=V.render();t.hidden&&(W.style.visibility="hidden"),await this.#t(W,t.id),V._isEditable&&(this.#d.set(V.data.id,V),this._annotationEditorUIManager?.renderAnnotationElement(V))}this.#F()}update({viewport:l}){const U=this.div;this.viewport=l,sU(U,{rotation:l.rotation}),this.#F(),U.hidden=!1}#F(){if(!this.#U)return;const l=this.div;for(const[U,d]of this.#U){const Z=l.querySelector(`[data-annotation-id="${U}"]`);if(!Z)continue;d.className="annotationContent";const{firstChild:F}=Z;F?F.nodeName==="CANVAS"?F.replaceWith(d):F.classList.contains("annotationContent")?F.after(d):F.before(d):Z.append(d)}this.#U.clear()}getEditableAnnotations(){return Array.from(this.#d.values())}getEditableAnnotation(l){return this.#d.get(l)}}const vU=/\r\n?|\n/g;class hl extends P{#l;#U="";#d=`${this.id}-editor`;#Z=null;#t;static _freeTextDefaultContent="";static _internalPadding=0;static _defaultColor=null;static _defaultFontSize=10;static get _keyboardManager(){const l=hl.prototype,U=F=>F.isEmpty(),d=cU.TRANSLATE_SMALL,Z=cU.TRANSLATE_BIG;return $(this,"_keyboardManager",new jU([[["ctrl+s","mac+meta+s","ctrl+p","mac+meta+p"],l.commitOrRemove,{bubbles:!0}],[["ctrl+Enter","mac+meta+Enter","Escape","mac+Escape"],l.commitOrRemove],[["ArrowLeft","mac+ArrowLeft"],l._translateEmpty,{args:[-d,0],checker:U}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],l._translateEmpty,{args:[-Z,0],checker:U}],[["ArrowRight","mac+ArrowRight"],l._translateEmpty,{args:[d,0],checker:U}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],l._translateEmpty,{args:[Z,0],checker:U}],[["ArrowUp","mac+ArrowUp"],l._translateEmpty,{args:[0,-d],checker:U}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],l._translateEmpty,{args:[0,-Z],checker:U}],[["ArrowDown","mac+ArrowDown"],l._translateEmpty,{args:[0,d],checker:U}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],l._translateEmpty,{args:[0,Z],checker:U}]]))}static _type="freetext";static _editorType=v.FREETEXT;constructor(l){super({...l,name:"freeTextEditor"}),this.#l=l.color||hl._defaultColor||P._defaultLineColor,this.#t=l.fontSize||hl._defaultFontSize}static initialize(l,U){P.initialize(l,U);const d=getComputedStyle(document.documentElement);this._internalPadding=parseFloat(d.getPropertyValue("--freetext-padding"))}static updateDefaultParams(l,U){switch(l){case Ul.FREETEXT_SIZE:hl._defaultFontSize=U;break;case Ul.FREETEXT_COLOR:hl._defaultColor=U;break}}updateParams(l,U){switch(l){case Ul.FREETEXT_SIZE:this.#F(U);break;case Ul.FREETEXT_COLOR:this.#W(U);break}}static get defaultPropertiesToUpdate(){return[[Ul.FREETEXT_SIZE,hl._defaultFontSize],[Ul.FREETEXT_COLOR,hl._defaultColor||P._defaultLineColor]]}get propertiesToUpdate(){return[[Ul.FREETEXT_SIZE,this.#t],[Ul.FREETEXT_COLOR,this.#l]]}#F(l){const U=Z=>{this.editorDiv.style.fontSize=`calc(${Z}px * var(--scale-factor))`,this.translate(0,-(Z-this.#t)*this.parentScale),this.#t=Z,this.#R()},d=this.#t;this.addCommands({cmd:U.bind(this,l),undo:U.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:Ul.FREETEXT_SIZE,overwriteIfSameType:!0,keepUndo:!0})}#W(l){const U=Z=>{this.#l=this.editorDiv.style.color=Z},d=this.#l;this.addCommands({cmd:U.bind(this,l),undo:U.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:Ul.FREETEXT_COLOR,overwriteIfSameType:!0,keepUndo:!0})}_translateEmpty(l,U){this._uiManager.translateSelectedEditors(l,U,!0)}getInitialTranslation(){const l=this.parentScale;return[-hl._internalPadding*l,-(hl._internalPadding+this.#t)*l]}rebuild(){this.parent&&(super.rebuild(),this.div!==null&&(this.isAttachedToDOM||this.parent.add(this)))}enableEditMode(){if(this.isInEditMode())return;this.parent.setEditingState(!1),this.parent.updateToolbar(v.FREETEXT),super.enableEditMode(),this.overlayDiv.classList.remove("enabled"),this.editorDiv.contentEditable=!0,this._isDraggable=!1,this.div.removeAttribute("aria-activedescendant"),this.#Z=new AbortController;const l=this._uiManager.combinedSignal(this.#Z);this.editorDiv.addEventListener("keydown",this.editorDivKeydown.bind(this),{signal:l}),this.editorDiv.addEventListener("focus",this.editorDivFocus.bind(this),{signal:l}),this.editorDiv.addEventListener("blur",this.editorDivBlur.bind(this),{signal:l}),this.editorDiv.addEventListener("input",this.editorDivInput.bind(this),{signal:l}),this.editorDiv.addEventListener("paste",this.editorDivPaste.bind(this),{signal:l})}disableEditMode(){this.isInEditMode()&&(this.parent.setEditingState(!0),super.disableEditMode(),this.overlayDiv.classList.add("enabled"),this.editorDiv.contentEditable=!1,this.div.setAttribute("aria-activedescendant",this.#d),this._isDraggable=!0,this.#Z?.abort(),this.#Z=null,this.div.focus({preventScroll:!0}),this.isEditing=!1,this.parent.div.classList.add("freetextEditing"))}focusin(l){this._focusEventsAllowed&&(super.focusin(l),l.target!==this.editorDiv&&this.editorDiv.focus())}onceAdded(){this.width||(this.enableEditMode(),this.editorDiv.focus(),this._initialOptions?.isCentered&&this.center(),this._initialOptions=null)}isEmpty(){return!this.editorDiv||this.editorDiv.innerText.trim()===""}remove(){this.isEditing=!1,this.parent&&(this.parent.setEditingState(!0),this.parent.div.classList.add("freetextEditing")),super.remove()}#c(){const l=[];this.editorDiv.normalize();let U=null;for(const d of this.editorDiv.childNodes)U?.nodeType===Node.TEXT_NODE&&d.nodeName==="BR"||(l.push(hl.#V(d)),U=d);return l.join(`
`)}#R(){const[l,U]=this.parentDimensions;let d;if(this.isAttachedToDOM)d=this.div.getBoundingClientRect();else{const{currentLayer:Z,div:F}=this,t=F.style.display,Q=F.classList.contains("hidden");F.classList.remove("hidden"),F.style.display="hidden",Z.div.append(this.div),d=F.getBoundingClientRect(),F.remove(),F.style.display=t,F.classList.toggle("hidden",Q)}this.rotation%180===this.parentRotation%180?(this.width=d.width/l,this.height=d.height/U):(this.width=d.height/l,this.height=d.width/U),this.fixAndSetPosition()}commit(){if(!this.isInEditMode())return;super.commit(),this.disableEditMode();const l=this.#U,U=this.#U=this.#c().trimEnd();if(l===U)return;const d=Z=>{if(this.#U=Z,!Z){this.remove();return}this.#N(),this._uiManager.rebuild(this),this.#R()};this.addCommands({cmd:()=>{d(U)},undo:()=>{d(l)},mustExec:!1}),this.#R()}shouldGetKeyboardEvents(){return this.isInEditMode()}enterInEditMode(){this.enableEditMode(),this.editorDiv.focus()}dblclick(l){this.enterInEditMode()}keydown(l){l.target===this.div&&l.key==="Enter"&&(this.enterInEditMode(),l.preventDefault())}editorDivKeydown(l){hl._keyboardManager.exec(this,l)}editorDivFocus(l){this.isEditing=!0}editorDivBlur(l){this.isEditing=!1}editorDivInput(l){this.parent.div.classList.toggle("freetextEditing",this.isEmpty())}disableEditing(){this.editorDiv.setAttribute("role","comment"),this.editorDiv.removeAttribute("aria-multiline")}enableEditing(){this.editorDiv.setAttribute("role","textbox"),this.editorDiv.setAttribute("aria-multiline",!0)}render(){if(this.div)return this.div;let l,U;this.width&&(l=this.x,U=this.y),super.render(),this.editorDiv=document.createElement("div"),this.editorDiv.className="internal",this.editorDiv.setAttribute("id",this.#d),this.editorDiv.setAttribute("data-l10n-id","pdfjs-free-text2"),this.editorDiv.setAttribute("data-l10n-attrs","default-content"),this.enableEditing(),this.editorDiv.contentEditable=!0;const{style:d}=this.editorDiv;if(d.fontSize=`calc(${this.#t}px * var(--scale-factor))`,d.color=this.#l,this.div.append(this.editorDiv),this.overlayDiv=document.createElement("div"),this.overlayDiv.classList.add("overlay","enabled"),this.div.append(this.overlayDiv),qU(this,this.div,["dblclick","keydown"]),this.width){const[Z,F]=this.parentDimensions;if(this.annotationElementId){const{position:t}=this._initialData;let[Q,V]=this.getInitialTranslation();[Q,V]=this.pageTranslationToScreen(Q,V);const[W,R]=this.pageDimensions,[N,n]=this.pageTranslation;let s,a;switch(this.rotation){case 0:s=l+(t[0]-N)/W,a=U+this.height-(t[1]-n)/R;break;case 90:s=l+(t[0]-N)/W,a=U-(t[1]-n)/R,[Q,V]=[V,-Q];break;case 180:s=l-this.width+(t[0]-N)/W,a=U-(t[1]-n)/R,[Q,V]=[-Q,-V];break;case 270:s=l+(t[0]-N-this.height*R)/W,a=U+(t[1]-n-this.width*W)/R,[Q,V]=[-V,Q];break}this.setAt(s*Z,a*F,Q,V)}else this.setAt(l*Z,U*F,this.width*Z,this.height*F);this.#N(),this._isDraggable=!0,this.editorDiv.contentEditable=!1}else this._isDraggable=!1,this.editorDiv.contentEditable=!0;return this.div}static#V(l){return(l.nodeType===Node.TEXT_NODE?l.nodeValue:l.innerText).replaceAll(vU,"")}editorDivPaste(l){const U=l.clipboardData||window.clipboardData,{types:d}=U;if(d.length===1&&d[0]==="text/plain")return;l.preventDefault();const Z=hl.#n(U.getData("text")||"").replaceAll(vU,`
`);if(!Z)return;const F=window.getSelection();if(!F.rangeCount)return;this.editorDiv.normalize(),F.deleteFromDocument();const t=F.getRangeAt(0);if(!Z.includes(`
`)){t.insertNode(document.createTextNode(Z)),this.editorDiv.normalize(),F.collapseToStart();return}const{startContainer:Q,startOffset:V}=t,W=[],R=[];if(Q.nodeType===Node.TEXT_NODE){const s=Q.parentElement;if(R.push(Q.nodeValue.slice(V).replaceAll(vU,"")),s!==this.editorDiv){let a=W;for(const b of this.editorDiv.childNodes){if(b===s){a=R;continue}a.push(hl.#V(b))}}W.push(Q.nodeValue.slice(0,V).replaceAll(vU,""))}else if(Q===this.editorDiv){let s=W,a=0;for(const b of this.editorDiv.childNodes)a++===V&&(s=R),s.push(hl.#V(b))}this.#U=`${W.join(`
`)}${Z}${R.join(`
`)}`,this.#N();const N=new Range;let n=W.reduce((s,a)=>s+a.length,0);for(const{firstChild:s}of this.editorDiv.childNodes)if(s.nodeType===Node.TEXT_NODE){const a=s.nodeValue.length;if(n<=a){N.setStart(s,n),N.setEnd(s,n);break}n-=a}F.removeAllRanges(),F.addRange(N)}#N(){if(this.editorDiv.replaceChildren(),!!this.#U)for(const l of this.#U.split(`
`)){const U=document.createElement("div");U.append(l?document.createTextNode(l):document.createElement("br")),this.editorDiv.append(U)}}#Q(){return this.#U.replaceAll(" "," ")}static#n(l){return l.replaceAll(" "," ")}get contentDiv(){return this.editorDiv}static async deserialize(l,U,d){let Z=null;if(l instanceof mF){const{data:{defaultAppearanceData:{fontSize:t,fontColor:Q},rect:V,rotation:W,id:R,popupRef:N},textContent:n,textPosition:s,parent:{page:{pageNumber:a}}}=l;if(!n||n.length===0)return null;Z=l={annotationType:v.FREETEXT,color:Array.from(Q),fontSize:t,value:n.join(`
`),position:s,pageIndex:a-1,rect:V.slice(0),rotation:W,id:R,deleted:!1,popupRef:N}}const F=await super.deserialize(l,U,d);return F.#t=l.fontSize,F.#l=w.makeHexColor(...l.color),F.#U=hl.#n(l.value),F.annotationElementId=l.id||null,F._initialData=Z,F}serialize(l=!1){if(this.isEmpty())return null;if(this.deleted)return this.serializeDeleted();const U=hl._internalPadding*this.parentScale,d=this.getRect(U,U),Z=P._colorManager.convert(this.isAttachedToDOM?getComputedStyle(this.editorDiv).color:this.#l),F={annotationType:v.FREETEXT,color:Z,fontSize:this.#t,value:this.#Q(),pageIndex:this.pageIndex,rect:d,rotation:this.rotation,structTreeParentId:this._structTreeParentId};return l?F:this.annotationElementId&&!this.#a(F)?null:(F.id=this.annotationElementId,F)}#a(l){const{value:U,fontSize:d,color:Z,pageIndex:F}=this._initialData;return this._hasBeenMoved||l.value!==U||l.fontSize!==d||l.color.some((t,Q)=>t!==Z[Q])||l.pageIndex!==F}renderAnnotationElement(l){const U=super.renderAnnotationElement(l);if(this.deleted)return U;const{style:d}=U;d.fontSize=`calc(${this.#t}px * var(--scale-factor))`,d.color=this.#l,U.replaceChildren();for(const F of this.#U.split(`
`)){const t=document.createElement("div");t.append(F?document.createTextNode(F):document.createElement("br")),U.append(t)}const Z=hl._internalPadding*this.parentScale;return l.updateEdited({rect:this.getRect(Z,Z),popupContent:this.#U}),U}resetAnnotationElement(l){super.resetAnnotationElement(l),l.resetEdited()}}class I{static PRECISION=1e-4;toSVGPath(){Zl("Abstract method `toSVGPath` must be implemented.")}get box(){Zl("Abstract getter `box` must be implemented.")}serialize(l,U){Zl("Abstract method `serialize` must be implemented.")}static _rescale(l,U,d,Z,F,t){t||=new Float32Array(l.length);for(let Q=0,V=l.length;Q<V;Q+=2)t[Q]=U+l[Q]*Z,t[Q+1]=d+l[Q+1]*F;return t}static _rescaleAndSwap(l,U,d,Z,F,t){t||=new Float32Array(l.length);for(let Q=0,V=l.length;Q<V;Q+=2)t[Q]=U+l[Q+1]*Z,t[Q+1]=d+l[Q]*F;return t}static _translate(l,U,d,Z){Z||=new Float32Array(l.length);for(let F=0,t=l.length;F<t;F+=2)Z[F]=U+l[F],Z[F+1]=d+l[F+1];return Z}static svgRound(l){return Math.round(l*1e4)}static _normalizePoint(l,U,d,Z,F){switch(F){case 90:return[1-U/d,l/Z];case 180:return[1-l/d,1-U/Z];case 270:return[U/d,1-l/Z];default:return[l/d,U/Z]}}static _normalizePagePoint(l,U,d){switch(d){case 90:return[1-U,l];case 180:return[1-l,1-U];case 270:return[U,1-l];default:return[l,U]}}}class NU{#l;#U=[];#d;#Z;#t=[];#F=new Float32Array(18);#W;#c;#R;#V;#N;#Q;#n=[];static#a=8;static#s=2;static#i=NU.#a+NU.#s;constructor({x:l,y:U},d,Z,F,t,Q=0){this.#l=d,this.#Q=F*Z,this.#Z=t,this.#F.set([NaN,NaN,NaN,NaN,l,U],6),this.#d=Q,this.#V=NU.#a*Z,this.#R=NU.#i*Z,this.#N=Z,this.#n.push(l,U)}isEmpty(){return isNaN(this.#F[8])}#b(){const l=this.#F.subarray(4,6),U=this.#F.subarray(16,18),[d,Z,F,t]=this.#l;return[(this.#W+(l[0]-U[0])/2-d)/F,(this.#c+(l[1]-U[1])/2-Z)/t,(this.#W+(U[0]-l[0])/2-d)/F,(this.#c+(U[1]-l[1])/2-Z)/t]}add({x:l,y:U}){this.#W=l,this.#c=U;const[d,Z,F,t]=this.#l;let[Q,V,W,R]=this.#F.subarray(8,12);const N=l-W,n=U-R,s=Math.hypot(N,n);if(s<this.#R)return!1;const a=s-this.#V,b=a/s,i=b*N,h=b*n;let G=Q,S=V;Q=W,V=R,W+=i,R+=h,this.#n?.push(l,U);const T=-h/a,Y=i/a,y=T*this.#Q,o=Y*this.#Q;return this.#F.set(this.#F.subarray(2,8),0),this.#F.set([W+y,R+o],4),this.#F.set(this.#F.subarray(14,18),12),this.#F.set([W-y,R-o],16),isNaN(this.#F[6])?(this.#t.length===0&&(this.#F.set([Q+y,V+o],2),this.#t.push(NaN,NaN,NaN,NaN,(Q+y-d)/F,(V+o-Z)/t),this.#F.set([Q-y,V-o],14),this.#U.push(NaN,NaN,NaN,NaN,(Q-y-d)/F,(V-o-Z)/t)),this.#F.set([G,S,Q,V,W,R],6),!this.isEmpty()):(this.#F.set([G,S,Q,V,W,R],6),Math.abs(Math.atan2(S-V,G-Q)-Math.atan2(h,i))<Math.PI/2?([Q,V,W,R]=this.#F.subarray(2,6),this.#t.push(NaN,NaN,NaN,NaN,((Q+W)/2-d)/F,((V+R)/2-Z)/t),[Q,V,G,S]=this.#F.subarray(14,18),this.#U.push(NaN,NaN,NaN,NaN,((G+Q)/2-d)/F,((S+V)/2-Z)/t),!0):([G,S,Q,V,W,R]=this.#F.subarray(0,6),this.#t.push(((G+5*Q)/6-d)/F,((S+5*V)/6-Z)/t,((5*Q+W)/6-d)/F,((5*V+R)/6-Z)/t,((Q+W)/2-d)/F,((V+R)/2-Z)/t),[W,R,Q,V,G,S]=this.#F.subarray(12,18),this.#U.push(((G+5*Q)/6-d)/F,((S+5*V)/6-Z)/t,((5*Q+W)/6-d)/F,((5*V+R)/6-Z)/t,((Q+W)/2-d)/F,((V+R)/2-Z)/t),!0))}toSVGPath(){if(this.isEmpty())return"";const l=this.#t,U=this.#U;if(isNaN(this.#F[6])&&!this.isEmpty())return this.#h();const d=[];d.push(`M${l[4]} ${l[5]}`);for(let Z=6;Z<l.length;Z+=6)isNaN(l[Z])?d.push(`L${l[Z+4]} ${l[Z+5]}`):d.push(`C${l[Z]} ${l[Z+1]} ${l[Z+2]} ${l[Z+3]} ${l[Z+4]} ${l[Z+5]}`);this.#M(d);for(let Z=U.length-6;Z>=6;Z-=6)isNaN(U[Z])?d.push(`L${U[Z+4]} ${U[Z+5]}`):d.push(`C${U[Z]} ${U[Z+1]} ${U[Z+2]} ${U[Z+3]} ${U[Z+4]} ${U[Z+5]}`);return this.#m(d),d.join(" ")}#h(){const[l,U,d,Z]=this.#l,[F,t,Q,V]=this.#b();return`M${(this.#F[2]-l)/d} ${(this.#F[3]-U)/Z} L${(this.#F[4]-l)/d} ${(this.#F[5]-U)/Z} L${F} ${t} L${Q} ${V} L${(this.#F[16]-l)/d} ${(this.#F[17]-U)/Z} L${(this.#F[14]-l)/d} ${(this.#F[15]-U)/Z} Z`}#m(l){const U=this.#U;l.push(`L${U[4]} ${U[5]} Z`)}#M(l){const[U,d,Z,F]=this.#l,t=this.#F.subarray(4,6),Q=this.#F.subarray(16,18),[V,W,R,N]=this.#b();l.push(`L${(t[0]-U)/Z} ${(t[1]-d)/F} L${V} ${W} L${R} ${N} L${(Q[0]-U)/Z} ${(Q[1]-d)/F}`)}newFreeDrawOutline(l,U,d,Z,F,t){return new eF(l,U,d,Z,F,t)}getOutlines(){const l=this.#t,U=this.#U,d=this.#F,[Z,F,t,Q]=this.#l,V=new Float32Array((this.#n?.length??0)+2);for(let N=0,n=V.length-2;N<n;N+=2)V[N]=(this.#n[N]-Z)/t,V[N+1]=(this.#n[N+1]-F)/Q;if(V[V.length-2]=(this.#W-Z)/t,V[V.length-1]=(this.#c-F)/Q,isNaN(d[6])&&!this.isEmpty())return this.#G(V);const W=new Float32Array(this.#t.length+24+this.#U.length);let R=l.length;for(let N=0;N<R;N+=2){if(isNaN(l[N])){W[N]=W[N+1]=NaN;continue}W[N]=l[N],W[N+1]=l[N+1]}R=this.#S(W,R);for(let N=U.length-6;N>=6;N-=6)for(let n=0;n<6;n+=2){if(isNaN(U[N+n])){W[R]=W[R+1]=NaN,R+=2;continue}W[R]=U[N+n],W[R+1]=U[N+n+1],R+=2}return this.#e(W,R),this.newFreeDrawOutline(W,V,this.#l,this.#N,this.#d,this.#Z)}#G(l){const U=this.#F,[d,Z,F,t]=this.#l,[Q,V,W,R]=this.#b(),N=new Float32Array(36);return N.set([NaN,NaN,NaN,NaN,(U[2]-d)/F,(U[3]-Z)/t,NaN,NaN,NaN,NaN,(U[4]-d)/F,(U[5]-Z)/t,NaN,NaN,NaN,NaN,Q,V,NaN,NaN,NaN,NaN,W,R,NaN,NaN,NaN,NaN,(U[16]-d)/F,(U[17]-Z)/t,NaN,NaN,NaN,NaN,(U[14]-d)/F,(U[15]-Z)/t],0),this.newFreeDrawOutline(N,l,this.#l,this.#N,this.#d,this.#Z)}#e(l,U){const d=this.#U;return l.set([NaN,NaN,NaN,NaN,d[4],d[5]],U),U+=6}#S(l,U){const d=this.#F.subarray(4,6),Z=this.#F.subarray(16,18),[F,t,Q,V]=this.#l,[W,R,N,n]=this.#b();return l.set([NaN,NaN,NaN,NaN,(d[0]-F)/Q,(d[1]-t)/V,NaN,NaN,NaN,NaN,W,R,NaN,NaN,NaN,NaN,N,n,NaN,NaN,NaN,NaN,(Z[0]-F)/Q,(Z[1]-t)/V],U),U+=24}}class eF extends I{#l;#U=new Float32Array(4);#d;#Z;#t;#F;#W;constructor(l,U,d,Z,F,t){super(),this.#W=l,this.#t=U,this.#l=d,this.#F=Z,this.#d=F,this.#Z=t,this.lastPoint=[NaN,NaN],this.#c(t);const[Q,V,W,R]=this.#U;for(let N=0,n=l.length;N<n;N+=2)l[N]=(l[N]-Q)/W,l[N+1]=(l[N+1]-V)/R;for(let N=0,n=U.length;N<n;N+=2)U[N]=(U[N]-Q)/W,U[N+1]=(U[N+1]-V)/R}toSVGPath(){const l=[`M${this.#W[4]} ${this.#W[5]}`];for(let U=6,d=this.#W.length;U<d;U+=6){if(isNaN(this.#W[U])){l.push(`L${this.#W[U+4]} ${this.#W[U+5]}`);continue}l.push(`C${this.#W[U]} ${this.#W[U+1]} ${this.#W[U+2]} ${this.#W[U+3]} ${this.#W[U+4]} ${this.#W[U+5]}`)}return l.push("Z"),l.join(" ")}serialize([l,U,d,Z],F){const t=d-l,Q=Z-U;let V,W;switch(F){case 0:V=I._rescale(this.#W,l,Z,t,-Q),W=I._rescale(this.#t,l,Z,t,-Q);break;case 90:V=I._rescaleAndSwap(this.#W,l,U,t,Q),W=I._rescaleAndSwap(this.#t,l,U,t,Q);break;case 180:V=I._rescale(this.#W,d,U,-t,Q),W=I._rescale(this.#t,d,U,-t,Q);break;case 270:V=I._rescaleAndSwap(this.#W,d,Z,-t,-Q),W=I._rescaleAndSwap(this.#t,d,Z,-t,-Q);break}return{outline:Array.from(V),points:[Array.from(W)]}}#c(l){const U=this.#W;let d=U[4],Z=U[5],F=d,t=Z,Q=d,V=Z,W=d,R=Z;const N=l?Math.max:Math.min;for(let s=6,a=U.length;s<a;s+=6){if(isNaN(U[s]))F=Math.min(F,U[s+4]),t=Math.min(t,U[s+5]),Q=Math.max(Q,U[s+4]),V=Math.max(V,U[s+5]),R<U[s+5]?(W=U[s+4],R=U[s+5]):R===U[s+5]&&(W=N(W,U[s+4]));else{const b=w.bezierBoundingBox(d,Z,...U.slice(s,s+6));F=Math.min(F,b[0]),t=Math.min(t,b[1]),Q=Math.max(Q,b[2]),V=Math.max(V,b[3]),R<b[3]?(W=b[2],R=b[3]):R===b[3]&&(W=N(W,b[2]))}d=U[s+4],Z=U[s+5]}const n=this.#U;n[0]=F-this.#d,n[1]=t-this.#d,n[2]=Q-F+2*this.#d,n[3]=V-t+2*this.#d,this.lastPoint=[W,R]}get box(){return this.#U}newOutliner(l,U,d,Z,F,t=0){return new NU(l,U,d,Z,F,t)}getNewOutline(l,U){const[d,Z,F,t]=this.#U,[Q,V,W,R]=this.#l,N=F*W,n=t*R,s=d*W+Q,a=Z*R+V,b=this.newOutliner({x:this.#t[0]*N+s,y:this.#t[1]*n+a},this.#l,this.#F,l,this.#Z,U??this.#d);for(let i=2;i<this.#t.length;i+=2)b.add({x:this.#t[i]*N+s,y:this.#t[i+1]*n+a});return b.getOutlines()}}class kd{#l;#U;#d=[];#Z=[];constructor(l,U=0,d=0,Z=!0){let F=1/0,t=-1/0,Q=1/0,V=-1/0;const R=10**-4;for(const{x:h,y:G,width:S,height:T}of l){const Y=Math.floor((h-U)/R)*R,y=Math.ceil((h+S+U)/R)*R,o=Math.floor((G-U)/R)*R,u=Math.ceil((G+T+U)/R)*R,p=[Y,o,u,!0],z=[y,o,u,!1];this.#d.push(p,z),F=Math.min(F,Y),t=Math.max(t,y),Q=Math.min(Q,o),V=Math.max(V,u)}const N=t-F+2*d,n=V-Q+2*d,s=F-d,a=Q-d,b=this.#d.at(Z?-1:-2),i=[b[0],b[2]];for(const h of this.#d){const[G,S,T]=h;h[0]=(G-s)/N,h[1]=(S-a)/n,h[2]=(T-a)/n}this.#l=new Float32Array([s,a,N,n]),this.#U=i}getOutlines(){this.#d.sort((U,d)=>U[0]-d[0]||U[1]-d[1]||U[2]-d[2]);const l=[];for(const U of this.#d)U[3]?(l.push(...this.#R(U)),this.#W(U)):(this.#c(U),l.push(...this.#R(U)));return this.#t(l)}#t(l){const U=[],d=new Set;for(const t of l){const[Q,V,W]=t;U.push([Q,V,t],[Q,W,t])}U.sort((t,Q)=>t[1]-Q[1]||t[0]-Q[0]);for(let t=0,Q=U.length;t<Q;t+=2){const V=U[t][2],W=U[t+1][2];V.push(W),W.push(V),d.add(V),d.add(W)}const Z=[];let F;for(;d.size>0;){const t=d.values().next().value;let[Q,V,W,R,N]=t;d.delete(t);let n=Q,s=V;for(F=[Q,W],Z.push(F);;){let a;if(d.has(R))a=R;else if(d.has(N))a=N;else break;d.delete(a),[Q,V,W,R,N]=a,n!==Q&&(F.push(n,s,Q,s===V?V:W),n=Q),s=s===V?W:V}F.push(n,s)}return new $R(Z,this.#l,this.#U)}#F(l){const U=this.#Z;let d=0,Z=U.length-1;for(;d<=Z;){const F=d+Z>>1,t=U[F][0];if(t===l)return F;t<l?d=F+1:Z=F-1}return Z+1}#W([,l,U]){const d=this.#F(l);this.#Z.splice(d,0,[l,U])}#c([,l,U]){const d=this.#F(l);for(let Z=d;Z<this.#Z.length;Z++){const[F,t]=this.#Z[Z];if(F!==l)break;if(F===l&&t===U){this.#Z.splice(Z,1);return}}for(let Z=d-1;Z>=0;Z--){const[F,t]=this.#Z[Z];if(F!==l)break;if(F===l&&t===U){this.#Z.splice(Z,1);return}}}#R(l){const[U,d,Z]=l,F=[[U,d,Z]],t=this.#F(Z);for(let Q=0;Q<t;Q++){const[V,W]=this.#Z[Q];for(let R=0,N=F.length;R<N;R++){const[,n,s]=F[R];if(!(W<=n||s<=V)){if(n>=V){if(s>W)F[R][1]=W;else{if(N===1)return[];F.splice(R,1),R--,N--}continue}F[R][2]=V,s>W&&F.push([U,W,s])}}}return F}}class $R extends I{#l;#U;constructor(l,U,d){super(),this.#U=l,this.#l=U,this.lastPoint=d}toSVGPath(){const l=[];for(const U of this.#U){let[d,Z]=U;l.push(`M${d} ${Z}`);for(let F=2;F<U.length;F+=2){const t=U[F],Q=U[F+1];t===d?(l.push(`V${Q}`),Z=Q):Q===Z&&(l.push(`H${t}`),d=t)}l.push("Z")}return l.join(" ")}serialize([l,U,d,Z],F){const t=[],Q=d-l,V=Z-U;for(const W of this.#U){const R=new Array(W.length);for(let N=0;N<W.length;N+=2)R[N]=l+W[N]*Q,R[N+1]=Z-W[N+1]*V;t.push(R)}return t}get box(){return this.#l}get classNamesForOutlining(){return["highlightOutline"]}}class Dd extends NU{newFreeDrawOutline(l,U,d,Z,F,t){return new lN(l,U,d,Z,F,t)}}class lN extends eF{newOutliner(l,U,d,Z,F,t=0){return new Dd(l,U,d,Z,F,t)}}class jl{#l=null;#U=null;#d;#Z=null;#t=!1;#F=!1;#W=null;#c;#R=null;#V=null;#N;static#Q=null;static get _keyboardManager(){return $(this,"_keyboardManager",new jU([[["Escape","mac+Escape"],jl.prototype._hideDropdownFromKeyboard],[[" ","mac+ "],jl.prototype._colorSelectFromKeyboard],[["ArrowDown","ArrowRight","mac+ArrowDown","mac+ArrowRight"],jl.prototype._moveToNext],[["ArrowUp","ArrowLeft","mac+ArrowUp","mac+ArrowLeft"],jl.prototype._moveToPrevious],[["Home","mac+Home"],jl.prototype._moveToBeginning],[["End","mac+End"],jl.prototype._moveToEnd]]))}constructor({editor:l=null,uiManager:U=null}){l?(this.#F=!1,this.#N=Ul.HIGHLIGHT_COLOR,this.#W=l):(this.#F=!0,this.#N=Ul.HIGHLIGHT_DEFAULT_COLOR),this.#V=l?._uiManager||U,this.#c=this.#V._eventBus,this.#d=l?.color||this.#V?.highlightColors.values().next().value||"#FFFF98",jl.#Q||=Object.freeze({blue:"pdfjs-editor-colorpicker-blue",green:"pdfjs-editor-colorpicker-green",pink:"pdfjs-editor-colorpicker-pink",red:"pdfjs-editor-colorpicker-red",yellow:"pdfjs-editor-colorpicker-yellow"})}renderButton(){const l=this.#l=document.createElement("button");l.className="colorPicker",l.tabIndex="0",l.setAttribute("data-l10n-id","pdfjs-editor-colorpicker-button"),l.setAttribute("aria-haspopup",!0);const U=this.#V._signal;l.addEventListener("click",this.#i.bind(this),{signal:U}),l.addEventListener("keydown",this.#s.bind(this),{signal:U});const d=this.#U=document.createElement("span");return d.className="swatch",d.setAttribute("aria-hidden",!0),d.style.backgroundColor=this.#d,l.append(d),l}renderMainDropdown(){const l=this.#Z=this.#n();return l.setAttribute("aria-orientation","horizontal"),l.setAttribute("aria-labelledby","highlightColorPickerLabel"),l}#n(){const l=document.createElement("div"),U=this.#V._signal;l.addEventListener("contextmenu",vl,{signal:U}),l.className="dropdown",l.role="listbox",l.setAttribute("aria-multiselectable",!1),l.setAttribute("aria-orientation","vertical"),l.setAttribute("data-l10n-id","pdfjs-editor-colorpicker-dropdown");for(const[d,Z]of this.#V.highlightColors){const F=document.createElement("button");F.tabIndex="0",F.role="option",F.setAttribute("data-color",Z),F.title=d,F.setAttribute("data-l10n-id",jl.#Q[d]);const t=document.createElement("span");F.append(t),t.className="swatch",t.style.backgroundColor=Z,F.setAttribute("aria-selected",Z===this.#d),F.addEventListener("click",this.#a.bind(this,Z),{signal:U}),l.append(F)}return l.addEventListener("keydown",this.#s.bind(this),{signal:U}),l}#a(l,U){U.stopPropagation(),this.#c.dispatch("switchannotationeditorparams",{source:this,type:this.#N,value:l})}_colorSelectFromKeyboard(l){if(l.target===this.#l){this.#i(l);return}const U=l.target.getAttribute("data-color");U&&this.#a(U,l)}_moveToNext(l){if(!this.#h){this.#i(l);return}if(l.target===this.#l){this.#Z.firstChild?.focus();return}l.target.nextSibling?.focus()}_moveToPrevious(l){if(l.target===this.#Z?.firstChild||l.target===this.#l){this.#h&&this._hideDropdownFromKeyboard();return}this.#h||this.#i(l),l.target.previousSibling?.focus()}_moveToBeginning(l){if(!this.#h){this.#i(l);return}this.#Z.firstChild?.focus()}_moveToEnd(l){if(!this.#h){this.#i(l);return}this.#Z.lastChild?.focus()}#s(l){jl._keyboardManager.exec(this,l)}#i(l){if(this.#h){this.hideDropdown();return}if(this.#t=l.detail===0,this.#R||(this.#R=new AbortController,window.addEventListener("pointerdown",this.#b.bind(this),{signal:this.#V.combinedSignal(this.#R)})),this.#Z){this.#Z.classList.remove("hidden");return}const U=this.#Z=this.#n();this.#l.append(U)}#b(l){this.#Z?.contains(l.target)||this.hideDropdown()}hideDropdown(){this.#Z?.classList.add("hidden"),this.#R?.abort(),this.#R=null}get#h(){return this.#Z&&!this.#Z.classList.contains("hidden")}_hideDropdownFromKeyboard(){if(!this.#F){if(!this.#h){this.#W?.unselect();return}this.hideDropdown(),this.#l.focus({preventScroll:!0,focusVisible:this.#t})}}updateColor(l){if(this.#U&&(this.#U.style.backgroundColor=l),!this.#Z)return;const U=this.#V.highlightColors.values();for(const d of this.#Z.children)d.setAttribute("aria-selected",U.next().value===l)}destroy(){this.#l?.remove(),this.#l=null,this.#U=null,this.#Z?.remove(),this.#Z=null}}class Wl extends P{#l=null;#U=0;#d;#Z=null;#t=null;#F=null;#W=null;#c=0;#R=null;#V=null;#N=null;#Q=!1;#n=null;#a;#s=null;#i="";#b;#h="";static _defaultColor=null;static _defaultOpacity=1;static _defaultThickness=12;static _type="highlight";static _editorType=v.HIGHLIGHT;static _freeHighlightId=-1;static _freeHighlight=null;static _freeHighlightClipId="";static get _keyboardManager(){const l=Wl.prototype;return $(this,"_keyboardManager",new jU([[["ArrowLeft","mac+ArrowLeft"],l._moveCaret,{args:[0]}],[["ArrowRight","mac+ArrowRight"],l._moveCaret,{args:[1]}],[["ArrowUp","mac+ArrowUp"],l._moveCaret,{args:[2]}],[["ArrowDown","mac+ArrowDown"],l._moveCaret,{args:[3]}]]))}constructor(l){super({...l,name:"highlightEditor"}),this.color=l.color||Wl._defaultColor,this.#b=l.thickness||Wl._defaultThickness,this.#a=l.opacity||Wl._defaultOpacity,this.#d=l.boxes||null,this.#h=l.methodOfCreation||"",this.#i=l.text||"",this._isDraggable=!1,l.highlightId>-1?(this.#Q=!0,this.#M(l),this.#X()):this.#d&&(this.#l=l.anchorNode,this.#U=l.anchorOffset,this.#W=l.focusNode,this.#c=l.focusOffset,this.#m(),this.#X(),this.rotate(this.rotation))}get telemetryInitialData(){return{action:"added",type:this.#Q?"free_highlight":"highlight",color:this._uiManager.highlightColorNames.get(this.color),thickness:this.#b,methodOfCreation:this.#h}}get telemetryFinalData(){return{type:"highlight",color:this._uiManager.highlightColorNames.get(this.color)}}static computeTelemetryFinalData(l){return{numberOfColors:l.get("color").size}}#m(){const l=new kd(this.#d,.001);this.#V=l.getOutlines(),[this.x,this.y,this.width,this.height]=this.#V.box;const U=new kd(this.#d,.0025,.001,this._uiManager.direction==="ltr");this.#F=U.getOutlines();const{lastPoint:d}=this.#F;this.#n=[(d[0]-this.x)/this.width,(d[1]-this.y)/this.height]}#M({highlightOutlines:l,highlightId:U,clipPathId:d}){this.#V=l;const Z=1.5;if(this.#F=l.getNewOutline(this.#b/2+Z,.0025),U>=0)this.#N=U,this.#Z=d,this.parent.drawLayer.finalizeDraw(U,{bbox:l.box,path:{d:l.toSVGPath()}}),this.#s=this.parent.drawLayer.drawOutline({rootClass:{highlightOutline:!0,free:!0},bbox:this.#F.box,path:{d:this.#F.toSVGPath()}},!0);else if(this.parent){const R=this.parent.viewport.rotation;this.parent.drawLayer.updateProperties(this.#N,{bbox:Wl.#Y(this.#V.box,(R-this.rotation+360)%360),path:{d:l.toSVGPath()}}),this.parent.drawLayer.updateProperties(this.#s,{bbox:Wl.#Y(this.#F.box,R),path:{d:this.#F.toSVGPath()}})}const[F,t,Q,V]=l.box;switch(this.rotation){case 0:this.x=F,this.y=t,this.width=Q,this.height=V;break;case 90:{const[R,N]=this.parentDimensions;this.x=t,this.y=1-F,this.width=Q*N/R,this.height=V*R/N;break}case 180:this.x=1-F,this.y=1-t,this.width=Q,this.height=V;break;case 270:{const[R,N]=this.parentDimensions;this.x=1-t,this.y=F,this.width=Q*N/R,this.height=V*R/N;break}}const{lastPoint:W}=this.#F;this.#n=[(W[0]-F)/Q,(W[1]-t)/V]}static initialize(l,U){P.initialize(l,U),Wl._defaultColor||=U.highlightColors?.values().next().value||"#fff066"}static updateDefaultParams(l,U){switch(l){case Ul.HIGHLIGHT_DEFAULT_COLOR:Wl._defaultColor=U;break;case Ul.HIGHLIGHT_THICKNESS:Wl._defaultThickness=U;break}}translateInPage(l,U){}get toolbarPosition(){return this.#n}updateParams(l,U){switch(l){case Ul.HIGHLIGHT_COLOR:this.#G(U);break;case Ul.HIGHLIGHT_THICKNESS:this.#e(U);break}}static get defaultPropertiesToUpdate(){return[[Ul.HIGHLIGHT_DEFAULT_COLOR,Wl._defaultColor],[Ul.HIGHLIGHT_THICKNESS,Wl._defaultThickness]]}get propertiesToUpdate(){return[[Ul.HIGHLIGHT_COLOR,this.color||Wl._defaultColor],[Ul.HIGHLIGHT_THICKNESS,this.#b||Wl._defaultThickness],[Ul.HIGHLIGHT_FREE,this.#Q]]}#G(l){const U=(F,t)=>{this.color=F,this.#a=t,this.parent?.drawLayer.updateProperties(this.#N,{root:{fill:F,"fill-opacity":t}}),this.#t?.updateColor(F)},d=this.color,Z=this.#a;this.addCommands({cmd:U.bind(this,l,Wl._defaultOpacity),undo:U.bind(this,d,Z),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:Ul.HIGHLIGHT_COLOR,overwriteIfSameType:!0,keepUndo:!0}),this._reportTelemetry({action:"color_changed",color:this._uiManager.highlightColorNames.get(l)},!0)}#e(l){const U=this.#b,d=Z=>{this.#b=Z,this.#S(Z)};this.addCommands({cmd:d.bind(this,l),undo:d.bind(this,U),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:Ul.INK_THICKNESS,overwriteIfSameType:!0,keepUndo:!0}),this._reportTelemetry({action:"thickness_changed",thickness:l},!0)}async addEditToolbar(){const l=await super.addEditToolbar();return l?(this._uiManager.highlightColors&&(this.#t=new jl({editor:this}),l.addColorPicker(this.#t)),l):null}disableEditing(){super.disableEditing(),this.div.classList.toggle("disabled",!0)}enableEditing(){super.enableEditing(),this.div.classList.toggle("disabled",!1)}fixAndSetPosition(){return super.fixAndSetPosition(this.#o())}getBaseTranslation(){return[0,0]}getRect(l,U){return super.getRect(l,U,this.#o())}onceAdded(){this.annotationElementId||this.parent.addUndoableEditor(this),this.div.focus()}remove(){this.#y(),this._reportTelemetry({action:"deleted"}),super.remove()}rebuild(){this.parent&&(super.rebuild(),this.div!==null&&(this.#X(),this.isAttachedToDOM||this.parent.add(this)))}setParent(l){let U=!1;this.parent&&!l?this.#y():l&&(this.#X(l),U=!this.parent&&this.div?.classList.contains("selectedEditor")),super.setParent(l),this.show(this._isVisible),U&&this.select()}#S(l){if(!this.#Q)return;this.#M({highlightOutlines:this.#V.getNewOutline(l/2)}),this.fixAndSetPosition();const[U,d]=this.parentDimensions;this.setDims(this.width*U,this.height*d)}#y(){this.#N===null||!this.parent||(this.parent.drawLayer.remove(this.#N),this.#N=null,this.parent.drawLayer.remove(this.#s),this.#s=null)}#X(l=this.parent){this.#N===null&&({id:this.#N,clipPathId:this.#Z}=l.drawLayer.draw({bbox:this.#V.box,root:{viewBox:"0 0 1 1",fill:this.color,"fill-opacity":this.#a},rootClass:{highlight:!0,free:this.#Q},path:{d:this.#V.toSVGPath()}},!1,!0),this.#s=l.drawLayer.drawOutline({rootClass:{highlightOutline:!0,free:this.#Q},bbox:this.#F.box,path:{d:this.#F.toSVGPath()}},this.#Q),this.#R&&(this.#R.style.clipPath=this.#Z))}static#Y([l,U,d,Z],F){switch(F){case 90:return[1-U-Z,l,Z,d];case 180:return[1-l-d,1-U-Z,d,Z];case 270:return[U,1-l-d,Z,d]}return[l,U,d,Z]}rotate(l){const{drawLayer:U}=this.parent;let d;this.#Q?(l=(l-this.rotation+360)%360,d=Wl.#Y(this.#V.box,l)):d=Wl.#Y([this.x,this.y,this.width,this.height],l),U.updateProperties(this.#N,{bbox:d,root:{"data-main-rotation":l}}),U.updateProperties(this.#s,{bbox:Wl.#Y(this.#F.box,l),root:{"data-main-rotation":l}})}render(){if(this.div)return this.div;const l=super.render();this.#i&&(l.setAttribute("aria-label",this.#i),l.setAttribute("role","mark")),this.#Q?l.classList.add("free"):this.div.addEventListener("keydown",this.#B.bind(this),{signal:this._uiManager._signal});const U=this.#R=document.createElement("div");l.append(U),U.setAttribute("aria-hidden","true"),U.className="internal",U.style.clipPath=this.#Z;const[d,Z]=this.parentDimensions;return this.setDims(this.width*d,this.height*Z),qU(this,this.#R,["pointerover","pointerleave"]),this.enableEditing(),l}pointerover(){this.isSelected||this.parent?.drawLayer.updateProperties(this.#s,{rootClass:{hovered:!0}})}pointerleave(){this.isSelected||this.parent?.drawLayer.updateProperties(this.#s,{rootClass:{hovered:!1}})}#B(l){Wl._keyboardManager.exec(this,l)}_moveCaret(l){switch(this.parent.unselect(this),l){case 0:case 2:this.#u(!0);break;case 1:case 3:this.#u(!1);break}}#u(l){if(!this.#l)return;const U=window.getSelection();l?U.setPosition(this.#l,this.#U):U.setPosition(this.#W,this.#c)}select(){super.select(),this.#s&&this.parent?.drawLayer.updateProperties(this.#s,{rootClass:{hovered:!1,selected:!0}})}unselect(){super.unselect(),this.#s&&(this.parent?.drawLayer.updateProperties(this.#s,{rootClass:{selected:!1}}),this.#Q||this.#u(!1))}get _mustFixPosition(){return!this.#Q}show(l=this._isVisible){super.show(l),this.parent&&(this.parent.drawLayer.updateProperties(this.#N,{rootClass:{hidden:!l}}),this.parent.drawLayer.updateProperties(this.#s,{rootClass:{hidden:!l}}))}#o(){return this.#Q?this.rotation:0}#D(){if(this.#Q)return null;const[l,U]=this.pageDimensions,[d,Z]=this.pageTranslation,F=this.#d,t=new Float32Array(F.length*8);let Q=0;for(const{x:V,y:W,width:R,height:N}of F){const n=V*l+d,s=(1-W)*U+Z;t[Q]=t[Q+4]=n,t[Q+1]=t[Q+3]=s,t[Q+2]=t[Q+6]=n+R*l,t[Q+5]=t[Q+7]=s-N*U,Q+=8}return t}#T(l){return this.#V.serialize(l,this.#o())}static startHighlighting(l,U,{target:d,x:Z,y:F}){const{x:t,y:Q,width:V,height:W}=d.getBoundingClientRect(),R=new AbortController,N=l.combinedSignal(R),n=s=>{R.abort(),this.#z(l,s)};window.addEventListener("blur",n,{signal:N}),window.addEventListener("pointerup",n,{signal:N}),window.addEventListener("pointerdown",gl,{capture:!0,passive:!1,signal:N}),window.addEventListener("contextmenu",vl,{signal:N}),d.addEventListener("pointermove",this.#J.bind(this,l),{signal:N}),this._freeHighlight=new Dd({x:Z,y:F},[t,Q,V,W],l.scale,this._defaultThickness/2,U,.001),{id:this._freeHighlightId,clipPathId:this._freeHighlightClipId}=l.drawLayer.draw({bbox:[0,0,1,1],root:{viewBox:"0 0 1 1",fill:this._defaultColor,"fill-opacity":this._defaultOpacity},rootClass:{highlight:!0,free:!0},path:{d:this._freeHighlight.toSVGPath()}},!0,!0)}static#J(l,U){this._freeHighlight.add(U)&&l.drawLayer.updateProperties(this._freeHighlightId,{path:{d:this._freeHighlight.toSVGPath()}})}static#z(l,U){this._freeHighlight.isEmpty()?l.drawLayer.remove(this._freeHighlightId):l.createAndAddNewEditor(U,!1,{highlightId:this._freeHighlightId,highlightOutlines:this._freeHighlight.getOutlines(),clipPathId:this._freeHighlightClipId,methodOfCreation:"main_toolbar"}),this._freeHighlightId=-1,this._freeHighlight=null,this._freeHighlightClipId=""}static async deserialize(l,U,d){let Z=null;if(l instanceof MF){const{data:{quadPoints:a,rect:b,rotation:i,id:h,color:G,opacity:S,popupRef:T},parent:{page:{pageNumber:Y}}}=l;Z=l={annotationType:v.HIGHLIGHT,color:Array.from(G),opacity:S,quadPoints:a,boxes:null,pageIndex:Y-1,rect:b.slice(0),rotation:i,id:h,deleted:!1,popupRef:T}}else if(l instanceof ZZ){const{data:{inkLists:a,rect:b,rotation:i,id:h,color:G,borderStyle:{rawWidth:S},popupRef:T},parent:{page:{pageNumber:Y}}}=l;Z=l={annotationType:v.HIGHLIGHT,color:Array.from(G),thickness:S,inkLists:a,boxes:null,pageIndex:Y-1,rect:b.slice(0),rotation:i,id:h,deleted:!1,popupRef:T}}const{color:F,quadPoints:t,inkLists:Q,opacity:V}=l,W=await super.deserialize(l,U,d);W.color=w.makeHexColor(...F),W.#a=V||1,Q&&(W.#b=l.thickness),W.annotationElementId=l.id||null,W._initialData=Z;const[R,N]=W.pageDimensions,[n,s]=W.pageTranslation;if(t){const a=W.#d=[];for(let b=0;b<t.length;b+=8)a.push({x:(t[b]-n)/R,y:1-(t[b+1]-s)/N,width:(t[b+2]-t[b])/R,height:(t[b+1]-t[b+5])/N});W.#m(),W.#X(),W.rotate(W.rotation)}else if(Q){W.#Q=!0;const a=Q[0],b={x:a[0]-n,y:N-(a[1]-s)},i=new Dd(b,[0,0,R,N],1,W.#b/2,!0,.001);for(let S=0,T=a.length;S<T;S+=2)b.x=a[S]-n,b.y=N-(a[S+1]-s),i.add(b);const{id:h,clipPathId:G}=U.drawLayer.draw({bbox:[0,0,1,1],root:{viewBox:"0 0 1 1",fill:W.color,"fill-opacity":W._defaultOpacity},rootClass:{highlight:!0,free:!0},path:{d:i.toSVGPath()}},!0,!0);W.#M({highlightOutlines:i.getOutlines(),highlightId:h,clipPathId:G}),W.#X()}return W}serialize(l=!1){if(this.isEmpty()||l)return null;if(this.deleted)return this.serializeDeleted();const U=this.getRect(0,0),d=P._colorManager.convert(this.color),Z={annotationType:v.HIGHLIGHT,color:d,opacity:this.#a,thickness:this.#b,quadPoints:this.#D(),outlines:this.#T(U),pageIndex:this.pageIndex,rect:U,rotation:this.#o(),structTreeParentId:this._structTreeParentId};return this.annotationElementId&&!this.#I(Z)?null:(Z.id=this.annotationElementId,Z)}#I(l){const{color:U}=this._initialData;return l.color.some((d,Z)=>d!==U[Z])}renderAnnotationElement(l){return l.updateEdited({rect:this.getRect(0,0)}),null}static canCreateNewEmptyEditor(){return!1}}class UN{#l=Object.create(null);updateProperty(l,U){this[l]=U,this.updateSVGProperty(l,U)}updateProperties(l){if(l)for(const[U,d]of Object.entries(l))this.updateProperty(U,d)}updateSVGProperty(l,U){this.#l[l]=U}toSVGProperties(){const l=this.#l;return this.#l=Object.create(null),{root:l}}reset(){this.#l=Object.create(null)}updateAll(l=this){this.updateProperties(l)}clone(){Zl("Not implemented")}}class RU extends P{#l=null;#U;_drawId=null;static _currentDrawId=-1;static _currentDraw=null;static _currentDrawingOptions=null;static _currentParent=null;static _INNER_MARGIN=3;constructor(l){super(l),this.#U=l.mustBeCommitted||!1,l.drawOutlines&&(this.#d(l),this.#F())}#d({drawOutlines:l,drawId:U,drawingOptions:d}){this.#l=l,this._drawingOptions||=d,U>=0?(this._drawId=U,this.parent.drawLayer.finalizeDraw(U,l.defaultProperties)):this._drawId=this.#Z(l,this.parent),this.#R(l.box)}#Z(l,U){const{id:d}=U.drawLayer.draw(RU._mergeSVGProperties(this._drawingOptions.toSVGProperties(),l.defaultSVGProperties),!1,!1);return d}static _mergeSVGProperties(l,U){const d=new Set(Object.keys(l));for(const[Z,F]of Object.entries(U))d.has(Z)?Object.assign(l[Z],F):l[Z]=F;return l}static getDefaultDrawingOptions(l){Zl("Not implemented")}static get typesMap(){Zl("Not implemented")}static get isDrawer(){return!0}static get supportMultipleDrawings(){return!1}static updateDefaultParams(l,U){const d=this.typesMap.get(l);d&&this._defaultDrawingOptions.updateProperty(d,U),this._currentParent&&(this._currentDraw.updateProperty(d,U),this._currentParent.drawLayer.updateProperties(this._currentDrawId,this._defaultDrawingOptions.toSVGProperties()))}updateParams(l,U){const d=this.constructor.typesMap.get(l);d&&this._updateProperty(l,d,U)}static get defaultPropertiesToUpdate(){const l=[],U=this._defaultDrawingOptions;for(const[d,Z]of this.typesMap)l.push([d,U[Z]]);return l}get propertiesToUpdate(){const l=[],{_drawingOptions:U}=this;for(const[d,Z]of this.constructor.typesMap)l.push([d,U[Z]]);return l}_updateProperty(l,U,d){const Z=this._drawingOptions,F=Z[U],t=Q=>{Z.updateProperty(U,Q);const V=this.#l.updateProperty(U,Q);V&&this.#R(V),this.parent?.drawLayer.updateProperties(this._drawId,Z.toSVGProperties())};this.addCommands({cmd:t.bind(this,d),undo:t.bind(this,F),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:l,overwriteIfSameType:!0,keepUndo:!0})}_onResizing(){this.parent?.drawLayer.updateProperties(this._drawId,RU._mergeSVGProperties(this.#l.getPathResizingSVGProperties(this.#c()),{bbox:this.#V()}))}_onResized(){this.parent?.drawLayer.updateProperties(this._drawId,RU._mergeSVGProperties(this.#l.getPathResizedSVGProperties(this.#c()),{bbox:this.#V()}))}_onTranslating(l,U){this.parent?.drawLayer.updateProperties(this._drawId,{bbox:this.#V(l,U)})}_onTranslated(){this.parent?.drawLayer.updateProperties(this._drawId,RU._mergeSVGProperties(this.#l.getPathTranslatedSVGProperties(this.#c(),this.parentDimensions),{bbox:this.#V()}))}_onStartDragging(){this.parent?.drawLayer.updateProperties(this._drawId,{rootClass:{moving:!0}})}_onStopDragging(){this.parent?.drawLayer.updateProperties(this._drawId,{rootClass:{moving:!1}})}commit(){super.commit(),this.disableEditMode(),this.disableEditing()}disableEditing(){super.disableEditing(),this.div.classList.toggle("disabled",!0)}enableEditing(){super.enableEditing(),this.div.classList.toggle("disabled",!1)}getBaseTranslation(){return[0,0]}get isResizable(){return!0}onceAdded(){this.annotationElementId||this.parent.addUndoableEditor(this),this._isDraggable=!0,this.#U&&(this.#U=!1,this.commit(),this.parent.setSelected(this),this.div.focus())}remove(){this.#t(),super.remove()}rebuild(){this.parent&&(super.rebuild(),this.div!==null&&(this.#F(),this.#R(this.#l.box),this.isAttachedToDOM||this.parent.add(this)))}setParent(l){let U=!1;this.parent&&!l?(this._uiManager.removeShouldRescale(this),this.#t()):l&&(this._uiManager.addShouldRescale(this),this.#F(l),U=!this.parent&&this.div?.classList.contains("selectedEditor")),super.setParent(l),U&&this.select()}#t(){this._drawId===null||!this.parent||(this.parent.drawLayer.remove(this._drawId),this._drawId=null,this._drawingOptions.reset())}#F(l=this.parent){if(!(this._drawId!==null&&this.parent===l)){if(this._drawId!==null){this.parent.drawLayer.updateParent(this._drawId,l.drawLayer);return}this._drawingOptions.updateAll(),this._drawId=this.#Z(this.#l,l)}}#W([l,U,d,Z]){const{parentDimensions:[F,t],rotation:Q}=this;switch(Q){case 90:return[U,1-l,d*(t/F),Z*(F/t)];case 180:return[1-l,1-U,d,Z];case 270:return[1-U,l,d*(t/F),Z*(F/t)];default:return[l,U,d,Z]}}#c(){const{x:l,y:U,width:d,height:Z,parentDimensions:[F,t],rotation:Q}=this;switch(Q){case 90:return[1-U,l,d*(F/t),Z*(t/F)];case 180:return[1-l,1-U,d,Z];case 270:return[U,1-l,d*(F/t),Z*(t/F)];default:return[l,U,d,Z]}}#R(l){if([this.x,this.y,this.width,this.height]=this.#W(l),this.div){this.fixAndSetPosition();const[U,d]=this.parentDimensions;this.setDims(this.width*U,this.height*d)}this._onResized()}#V(){const{x:l,y:U,width:d,height:Z,rotation:F,parentRotation:t,parentDimensions:[Q,V]}=this;switch((F*4+t)/90){case 1:return[1-U-Z,l,Z,d];case 2:return[1-l-d,1-U-Z,d,Z];case 3:return[U,1-l-d,Z,d];case 4:return[l,U-d*(Q/V),Z*(V/Q),d*(Q/V)];case 5:return[1-U,l,d*(Q/V),Z*(V/Q)];case 6:return[1-l-Z*(V/Q),1-U,Z*(V/Q),d*(Q/V)];case 7:return[U-d*(Q/V),1-l-Z*(V/Q),d*(Q/V),Z*(V/Q)];case 8:return[l-d,U-Z,d,Z];case 9:return[1-U,l-d,Z,d];case 10:return[1-l,1-U,d,Z];case 11:return[U-Z,1-l,Z,d];case 12:return[l-Z*(V/Q),U,Z*(V/Q),d*(Q/V)];case 13:return[1-U-d*(Q/V),l-Z*(V/Q),d*(Q/V),Z*(V/Q)];case 14:return[1-l,1-U-d*(Q/V),Z*(V/Q),d*(Q/V)];case 15:return[U,1-l,d*(Q/V),Z*(V/Q)];default:return[l,U,d,Z]}}rotate(){this.parent&&this.parent.drawLayer.updateProperties(this._drawId,RU._mergeSVGProperties({bbox:this.#V()},this.#l.updateRotation((this.parentRotation-this.rotation+360)%360)))}onScaleChanging(){this.parent&&this.#R(this.#l.updateParentDimensions(this.parentDimensions,this.parent.scale))}static onScaleChangingWhenDrawing(){}render(){if(this.div)return this.div;const l=super.render();l.classList.add("draw");const U=document.createElement("div");l.append(U),U.setAttribute("aria-hidden","true"),U.className="internal";const[d,Z]=this.parentDimensions;return this.setDims(this.width*d,this.height*Z),this._uiManager.addShouldRescale(this),this.disableEditing(),l}static createDrawerInstance(l,U,d,Z,F){Zl("Not implemented")}static startDrawing(l,U,d,{target:Z,offsetX:F,offsetY:t}){const{viewport:{rotation:Q}}=l,{width:V,height:W}=Z.getBoundingClientRect(),R=new AbortController,N=l.combinedSignal(R);if(window.addEventListener("pointerup",n=>{R.abort(),l.toggleDrawing(!0),this._endDraw(n)},{signal:N}),window.addEventListener("pointerdown",gl,{capture:!0,passive:!1,signal:N}),window.addEventListener("contextmenu",vl,{signal:N}),Z.addEventListener("pointermove",this._drawMove.bind(this),{signal:N}),l.toggleDrawing(),this._currentDraw){l.drawLayer.updateProperties(this._currentDrawId,this._currentDraw.startNew(F,t,V,W,Q));return}U.updateUIForDefaultProperties(this),this._currentDraw=this.createDrawerInstance(F,t,V,W,Q),this._currentDrawingOptions=this.getDefaultDrawingOptions(),this._currentParent=l,{id:this._currentDrawId}=l.drawLayer.draw(this._mergeSVGProperties(this._currentDrawingOptions.toSVGProperties(),this._currentDraw.defaultSVGProperties),!0,!1)}static _drawMove({offsetX:l,offsetY:U}){this._currentParent.drawLayer.updateProperties(this._currentDrawId,this._currentDraw.add(l,U))}static _endDraw({offsetX:l,offsetY:U}){const d=this._currentParent;if(d.drawLayer.updateProperties(this._currentDrawId,this._currentDraw.end(l,U)),this.supportMultipleDrawings){const Z=this._currentDraw,F=this._currentDrawId,t=Z.getLastElement();d.addCommands({cmd:()=>{d.drawLayer.updateProperties(F,Z.setLastElement(t))},undo:()=>{d.drawLayer.updateProperties(F,Z.removeLastElement())},mustExec:!1,type:Ul.DRAW_STEP});return}this.endDrawing(!1)}static endDrawing(l){const U=this._currentParent;if(!U)return null;if(U.toggleDrawing(!0),U.cleanUndoStack(Ul.DRAW_STEP),!this._currentDraw.isEmpty()){const{pageDimensions:[d,Z],scale:F}=U,t=U.createAndAddNewEditor({offsetX:0,offsetY:0},!1,{drawId:this._currentDrawId,drawOutlines:this._currentDraw.getOutlines(d*F,Z*F,F,this._INNER_MARGIN),drawingOptions:this._currentDrawingOptions,mustBeCommitted:!l});return this._cleanup(),t}return U.drawLayer.remove(this._currentDrawId),this._cleanup(),null}static _cleanup(){this._currentDrawId=-1,this._currentDraw=null,this._currentDrawingOptions=null,this._currentParent=null}createDrawingOptions(l){}static deserializeDraw(l,U,d,Z,F,t){Zl("Not implemented")}static async deserialize(l,U,d){const{rawDims:{pageWidth:Z,pageHeight:F,pageX:t,pageY:Q}}=U.viewport,V=this.deserializeDraw(t,Q,Z,F,this._INNER_MARGIN,l),W=await super.deserialize(l,U,d);return W.createDrawingOptions(l),W.#d({drawOutlines:V}),W.#F(),W.onScaleChanging(),W.rotate(),W}serializeDraw(l){const[U,d]=this.pageTranslation,[Z,F]=this.pageDimensions;return this.#l.serialize([U,d,Z,F],l)}renderAnnotationElement(l){return l.updateEdited({rect:this.getRect(0,0)}),null}static canCreateNewEmptyEditor(){return!1}}class dN{#l=new Float64Array(6);#U;#d;#Z;#t;#F;#W="";#c=0;#R=new ad;#V;#N;constructor(l,U,d,Z,F,t){this.#V=d,this.#N=Z,this.#Z=F,this.#t=t,[l,U]=this.#Q(l,U);const Q=this.#U=[NaN,NaN,NaN,NaN,l,U];this.#F=[l,U],this.#d=[{line:Q,points:this.#F}],this.#l.set(Q,0)}updateProperty(l,U){l==="stroke-width"&&(this.#t=U)}#Q(l,U){return I._normalizePoint(l,U,this.#V,this.#N,this.#Z)}isEmpty(){return!this.#d||this.#d.length===0}add(l,U){[l,U]=this.#Q(l,U);const[d,Z,F,t]=this.#l.subarray(2,6),Q=l-F,V=U-t;return Math.hypot(this.#V*Q,this.#N*V)<=2?null:(this.#F.push(l,U),isNaN(d)?(this.#l.set([F,t,l,U],2),this.#U.push(NaN,NaN,NaN,NaN,l,U),{path:{d:this.toSVGPath()}}):(isNaN(this.#l[0])&&this.#U.splice(6,6),this.#l.set([d,Z,F,t,l,U],0),this.#U.push((d+5*F)/6,(Z+5*t)/6,(5*F+l)/6,(5*t+U)/6,(F+l)/2,(t+U)/2),{path:{d:this.toSVGPath()}}))}end(l,U){const d=this.add(l,U);return d||(this.#F.length===2?{path:{d:this.toSVGPath()}}:null)}startNew(l,U,d,Z,F){this.#V=d,this.#N=Z,this.#Z=F,[l,U]=this.#Q(l,U);const t=this.#U=[NaN,NaN,NaN,NaN,l,U];this.#F=[l,U];const Q=this.#d.at(-1);return Q&&(Q.line=new Float32Array(Q.line),Q.points=new Float32Array(Q.points)),this.#d.push({line:t,points:this.#F}),this.#l.set(t,0),this.#c=0,this.toSVGPath(),null}getLastElement(){return this.#d.at(-1)}setLastElement(l){return this.#d?(this.#d.push(l),this.#U=l.line,this.#F=l.points,this.#c=0,{path:{d:this.toSVGPath()}}):this.#R.setLastElement(l)}removeLastElement(){if(!this.#d)return this.#R.removeLastElement();this.#d.pop(),this.#W="";for(let l=0,U=this.#d.length;l<U;l++){const{line:d,points:Z}=this.#d[l];this.#U=d,this.#F=Z,this.#c=0,this.toSVGPath()}return{path:{d:this.#W}}}toSVGPath(){const l=I.svgRound(this.#U[4]),U=I.svgRound(this.#U[5]);if(this.#F.length===2)return this.#W=`${this.#W} M ${l} ${U} Z`,this.#W;if(this.#F.length<=6){const Z=this.#W.lastIndexOf("M");this.#W=`${this.#W.slice(0,Z)} M ${l} ${U}`,this.#c=6}if(this.#F.length===4){const Z=I.svgRound(this.#U[10]),F=I.svgRound(this.#U[11]);return this.#W=`${this.#W} L ${Z} ${F}`,this.#c=12,this.#W}const d=[];this.#c===0&&(d.push(`M ${l} ${U}`),this.#c=6);for(let Z=this.#c,F=this.#U.length;Z<F;Z+=6){const[t,Q,V,W,R,N]=this.#U.slice(Z,Z+6).map(I.svgRound);d.push(`C${t} ${Q} ${V} ${W} ${R} ${N}`)}return this.#W+=d.join(" "),this.#c=this.#U.length,this.#W}getOutlines(l,U,d,Z){const F=this.#d.at(-1);return F.line=new Float32Array(F.line),F.points=new Float32Array(F.points),this.#R.build(this.#d,l,U,d,this.#Z,this.#t,Z),this.#l=null,this.#U=null,this.#d=null,this.#W=null,this.#R}get defaultSVGProperties(){return{root:{viewBox:"0 0 10000 10000"},rootClass:{draw:!0},bbox:[0,0,1,1]}}}class ad extends I{#l;#U=0;#d;#Z;#t;#F;#W;#c;#R;build(l,U,d,Z,F,t,Q){this.#t=U,this.#F=d,this.#W=Z,this.#c=F,this.#R=t,this.#d=Q??0,this.#Z=l,this.#Q()}setLastElement(l){return this.#Z.push(l),{path:{d:this.toSVGPath()}}}removeLastElement(){return this.#Z.pop(),{path:{d:this.toSVGPath()}}}toSVGPath(){const l=[];for(const{line:U}of this.#Z){if(l.push(`M${I.svgRound(U[4])} ${I.svgRound(U[5])}`),U.length===6){l.push("Z");continue}if(U.length===12){l.push(`L${I.svgRound(U[10])} ${I.svgRound(U[11])}`);continue}for(let d=6,Z=U.length;d<Z;d+=6){const[F,t,Q,V,W,R]=U.subarray(d,d+6).map(I.svgRound);l.push(`C${F} ${t} ${Q} ${V} ${W} ${R}`)}}return l.join("")}serialize([l,U,d,Z],F){const t=[],Q=[],[V,W,R,N]=this.#N();let n,s,a,b,i,h,G,S,T;switch(this.#c){case 0:T=I._rescale,n=l,s=U+Z,a=d,b=-Z,i=l+V*d,h=U+(1-W-N)*Z,G=l+(V+R)*d,S=U+(1-W)*Z;break;case 90:T=I._rescaleAndSwap,n=l,s=U,a=d,b=Z,i=l+W*d,h=U+V*Z,G=l+(W+N)*d,S=U+(V+R)*Z;break;case 180:T=I._rescale,n=l+d,s=U,a=-d,b=Z,i=l+(1-V-R)*d,h=U+W*Z,G=l+(1-V)*d,S=U+(W+N)*Z;break;case 270:T=I._rescaleAndSwap,n=l+d,s=U+Z,a=-d,b=-Z,i=l+(1-W-N)*d,h=U+(1-V-R)*Z,G=l+(1-W)*d,S=U+(1-V)*Z;break}for(const{line:Y,points:y}of this.#Z)t.push(T(Y,n,s,a,b,F?new Array(Y.length):null)),Q.push(T(y,n,s,a,b,F?new Array(y.length):null));return{lines:t,points:Q,rect:[i,h,G,S]}}static deserialize(l,U,d,Z,F,{paths:{lines:t,points:Q},rotation:V,thickness:W}){const R=[];let N,n,s,a,b;switch(V){case 0:b=I._rescale,N=-l/d,n=U/Z+1,s=1/d,a=-1/Z;break;case 90:b=I._rescaleAndSwap,N=-U/Z,n=-l/d,s=1/Z,a=1/d;break;case 180:b=I._rescale,N=l/d+1,n=-U/Z,s=-1/d,a=1/Z;break;case 270:b=I._rescaleAndSwap,N=U/Z+1,n=l/d+1,s=-1/Z,a=-1/d;break}for(let h=0,G=t.length;h<G;h++)R.push({line:b(t[h].map(S=>S??NaN),N,n,s,a),points:b(Q[h].map(S=>S??NaN),N,n,s,a)});const i=new ad;return i.build(R,d,Z,1,V,W,F),i}#V(l=this.#R){const U=this.#d+l/2*this.#W;return this.#c%180===0?[U/this.#t,U/this.#F]:[U/this.#F,U/this.#t]}#N(){const[l,U,d,Z]=this.#l,[F,t]=this.#V(0);return[l+F,U+t,d-2*F,Z-2*t]}#Q(){const l=this.#l=new Float32Array([1/0,1/0,-1/0,-1/0]);for(const{line:Z}of this.#Z){if(Z.length<=12){for(let Q=4,V=Z.length;Q<V;Q+=6){const[W,R]=Z.subarray(Q,Q+2);l[0]=Math.min(l[0],W),l[1]=Math.min(l[1],R),l[2]=Math.max(l[2],W),l[3]=Math.max(l[3],R)}continue}let F=Z[4],t=Z[5];for(let Q=6,V=Z.length;Q<V;Q+=6){const[W,R,N,n,s,a]=Z.subarray(Q,Q+6);w.bezierBoundingBox(F,t,W,R,N,n,s,a,l),F=s,t=a}}const[U,d]=this.#V();l[0]=Math.min(1,Math.max(0,l[0]-U)),l[1]=Math.min(1,Math.max(0,l[1]-d)),l[2]=Math.min(1,Math.max(0,l[2]+U)),l[3]=Math.min(1,Math.max(0,l[3]+d)),l[2]-=l[0],l[3]-=l[1]}get box(){return this.#l}updateProperty(l,U){return l==="stroke-width"?this.#n(U):null}#n(l){const[U,d]=this.#V();this.#R=l;const[Z,F]=this.#V(),[t,Q]=[Z-U,F-d],V=this.#l;return V[0]-=t,V[1]-=Q,V[2]+=2*t,V[3]+=2*Q,V}updateParentDimensions([l,U],d){const[Z,F]=this.#V();this.#t=l,this.#F=U,this.#W=d;const[t,Q]=this.#V(),V=t-Z,W=Q-F,R=this.#l;return R[0]-=V,R[1]-=W,R[2]+=2*V,R[3]+=2*W,R}updateRotation(l){return this.#U=l,{path:{transform:this.rotationTransform}}}get viewBox(){return this.#l.map(I.svgRound).join(" ")}get defaultProperties(){const[l,U]=this.#l;return{root:{viewBox:this.viewBox},path:{"transform-origin":`${I.svgRound(l)} ${I.svgRound(U)}`}}}get rotationTransform(){const[,,l,U]=this.#l;let d=0,Z=0,F=0,t=0,Q=0,V=0;switch(this.#U){case 90:Z=U/l,F=-l/U,Q=l;break;case 180:d=-1,t=-1,Q=l,V=U;break;case 270:Z=-U/l,F=l/U,V=U;break;default:return""}return`matrix(${d} ${Z} ${F} ${t} ${I.svgRound(Q)} ${I.svgRound(V)})`}getPathResizingSVGProperties([l,U,d,Z]){const[F,t]=this.#V(),[Q,V,W,R]=this.#l;if(Math.abs(W-F)<=I.PRECISION||Math.abs(R-t)<=I.PRECISION){const b=l+d/2-(Q+W/2),i=U+Z/2-(V+R/2);return{path:{"transform-origin":`${I.svgRound(l)} ${I.svgRound(U)}`,transform:`${this.rotationTransform} translate(${b} ${i})`}}}const N=(d-2*F)/(W-2*F),n=(Z-2*t)/(R-2*t),s=W/d,a=R/Z;return{path:{"transform-origin":`${I.svgRound(Q)} ${I.svgRound(V)}`,transform:`${this.rotationTransform} scale(${s} ${a}) translate(${I.svgRound(F)} ${I.svgRound(t)}) scale(${N} ${n}) translate(${I.svgRound(-F)} ${I.svgRound(-t)})`}}}getPathResizedSVGProperties([l,U,d,Z]){const[F,t]=this.#V(),Q=this.#l,[V,W,R,N]=Q;if(Q[0]=l,Q[1]=U,Q[2]=d,Q[3]=Z,Math.abs(R-F)<=I.PRECISION||Math.abs(N-t)<=I.PRECISION){const i=l+d/2-(V+R/2),h=U+Z/2-(W+N/2);for(const{line:G,points:S}of this.#Z)I._translate(G,i,h,G),I._translate(S,i,h,S);return{root:{viewBox:this.viewBox},path:{"transform-origin":`${I.svgRound(l)} ${I.svgRound(U)}`,transform:this.rotationTransform||null,d:this.toSVGPath()}}}const n=(d-2*F)/(R-2*F),s=(Z-2*t)/(N-2*t),a=-n*(V+F)+l+F,b=-s*(W+t)+U+t;if(n!==1||s!==1||a!==0||b!==0)for(const{line:i,points:h}of this.#Z)I._rescale(i,a,b,n,s,i),I._rescale(h,a,b,n,s,h);return{root:{viewBox:this.viewBox},path:{"transform-origin":`${I.svgRound(l)} ${I.svgRound(U)}`,transform:this.rotationTransform||null,d:this.toSVGPath()}}}getPathTranslatedSVGProperties([l,U],d){const[Z,F]=d,t=this.#l,Q=l-t[0],V=U-t[1];if(this.#t===Z&&this.#F===F)for(const{line:W,points:R}of this.#Z)I._translate(W,Q,V,W),I._translate(R,Q,V,R);else{const W=this.#t/Z,R=this.#F/F;this.#t=Z,this.#F=F;for(const{line:N,points:n}of this.#Z)I._rescale(N,Q,V,W,R,N),I._rescale(n,Q,V,W,R,n);t[2]*=W,t[3]*=R}return t[0]=l,t[1]=U,{root:{viewBox:this.viewBox},path:{d:this.toSVGPath(),"transform-origin":`${I.svgRound(l)} ${I.svgRound(U)}`}}}get defaultSVGProperties(){const l=this.#l;return{root:{viewBox:this.viewBox},rootClass:{draw:!0},path:{d:this.toSVGPath(),"transform-origin":`${I.svgRound(l[0])} ${I.svgRound(l[1])}`,transform:this.rotationTransform||null},bbox:l}}}class FZ extends UN{#l;constructor(l){super(),this.#l=l,super.updateProperties({fill:"none",stroke:P._defaultLineColor,"stroke-opacity":1,"stroke-width":1,"stroke-linecap":"round","stroke-linejoin":"round","stroke-miterlimit":10})}updateSVGProperty(l,U){l==="stroke-width"&&(U??=this["stroke-width"],U*=this.#l.realScale),super.updateSVGProperty(l,U)}clone(){const l=new FZ(this.#l);return l.updateAll(this),l}}class tZ extends RU{static _type="ink";static _editorType=v.INK;static _defaultDrawingOptions=null;constructor(l){super({...l,name:"inkEditor"}),this._willKeepAspectRatio=!0}static initialize(l,U){P.initialize(l,U),this._defaultDrawingOptions=new FZ(U.viewParameters)}static getDefaultDrawingOptions(l){const U=this._defaultDrawingOptions.clone();return U.updateProperties(l),U}static get supportMultipleDrawings(){return!0}static get typesMap(){return $(this,"typesMap",new Map([[Ul.INK_THICKNESS,"stroke-width"],[Ul.INK_COLOR,"stroke"],[Ul.INK_OPACITY,"stroke-opacity"]]))}static createDrawerInstance(l,U,d,Z,F){return new dN(l,U,d,Z,F,this._defaultDrawingOptions["stroke-width"])}static deserializeDraw(l,U,d,Z,F,t){return ad.deserialize(l,U,d,Z,F,t)}static async deserialize(l,U,d){return l instanceof ZZ?null:super.deserialize(l,U,d)}onScaleChanging(){if(!this.parent)return;super.onScaleChanging();const{_drawId:l,_drawingOptions:U,parent:d}=this;U.updateSVGProperty("stroke-width"),d.drawLayer.updateProperties(l,U.toSVGProperties())}static onScaleChangingWhenDrawing(){const l=this._currentParent;l&&(super.onScaleChangingWhenDrawing(),this._defaultDrawingOptions.updateSVGProperty("stroke-width"),l.drawLayer.updateProperties(this._currentDrawId,this._defaultDrawingOptions.toSVGProperties()))}createDrawingOptions({color:l,thickness:U,opacity:d}){this._drawingOptions=tZ.getDefaultDrawingOptions({stroke:w.makeHexColor(...l),"stroke-width":U,"stroke-opacity":d})}serialize(l=!1){if(this.isEmpty())return null;if(this.deleted)return this.serializeDeleted();const{lines:U,points:d,rect:Z}=this.serializeDraw(l),{_drawingOptions:{stroke:F,"stroke-opacity":t,"stroke-width":Q}}=this,V={annotationType:v.INK,color:P._colorManager.convert(F),opacity:t,thickness:Q,paths:{lines:U,points:d},pageIndex:this.pageIndex,rect:Z,rotation:this.rotation,structTreeParentId:this._structTreeParentId};return V.id=this.annotationElementId,V}}class QZ extends P{#l=null;#U=null;#d=null;#Z=null;#t=null;#F="";#W=null;#c=null;#R=null;#V=!1;#N=!1;static _type="stamp";static _editorType=v.STAMP;constructor(l){super({...l,name:"stampEditor"}),this.#Z=l.bitmapUrl,this.#t=l.bitmapFile}static initialize(l,U){P.initialize(l,U)}static get supportedTypes(){return $(this,"supportedTypes",["apng","avif","bmp","gif","jpeg","png","svg+xml","webp","x-icon"].map(U=>`image/${U}`))}static get supportedTypesStr(){return $(this,"supportedTypesStr",this.supportedTypes.join(","))}static isHandlingMimeForPasting(l){return this.supportedTypes.includes(l)}static paste(l,U){U.pasteEditor(v.STAMP,{bitmapFile:l.getAsFile()})}altTextFinish(){this._uiManager.useNewAltTextFlow&&(this.div.hidden=!1),super.altTextFinish()}get telemetryFinalData(){return{type:"stamp",hasAltText:!!this.altTextData?.altText}}static computeTelemetryFinalData(l){const U=l.get("hasAltText");return{hasAltText:U.get(!0)??0,hasNoAltText:U.get(!1)??0}}#Q(l,U=!1){if(!l){this.remove();return}this.#l=l.bitmap,U||(this.#U=l.id,this.#V=l.isSvg),l.file&&(this.#F=l.file.name),this.#s()}#n(){if(this.#d=null,this._uiManager.enableWaiting(!1),!!this.#W){if(this._uiManager.useNewAltTextWhenAddingImage&&this._uiManager.useNewAltTextFlow&&this.#l){this._editToolbar.hide(),this._uiManager.editAltText(this,!0);return}if(!this._uiManager.useNewAltTextWhenAddingImage&&this._uiManager.useNewAltTextFlow&&this.#l){this._reportTelemetry({action:"pdfjs.image.image_added",data:{alt_text_modal:!1,alt_text_type:"empty"}});try{this.mlGuessAltText()}catch{}}this.div.focus()}}async mlGuessAltText(l=null,U=!0){if(this.hasAltTextData())return null;const{mlManager:d}=this._uiManager;if(!d)throw new Error("No ML.");if(!await d.isEnabledFor("altText"))throw new Error("ML isn't enabled for alt text.");const{data:Z,width:F,height:t}=l||this.copyCanvas(null,null,!0).imageData,Q=await d.guess({name:"altText",request:{data:Z,width:F,height:t,channels:Z.length/(F*t)}});if(!Q)throw new Error("No response from the AI service.");if(Q.error)throw new Error("Error from the AI service.");if(Q.cancel)return null;if(!Q.output)throw new Error("No valid response from the AI service.");const V=Q.output;return await this.setGuessedAltText(V),U&&!this.hasAltTextData()&&(this.altTextData={alt:V,decorative:!1}),V}#a(){if(this.#U){this._uiManager.enableWaiting(!0),this._uiManager.imageManager.getFromId(this.#U).then(d=>this.#Q(d,!0)).finally(()=>this.#n());return}if(this.#Z){const d=this.#Z;this.#Z=null,this._uiManager.enableWaiting(!0),this.#d=this._uiManager.imageManager.getFromUrl(d).then(Z=>this.#Q(Z)).finally(()=>this.#n());return}if(this.#t){const d=this.#t;this.#t=null,this._uiManager.enableWaiting(!0),this.#d=this._uiManager.imageManager.getFromFile(d).then(Z=>this.#Q(Z)).finally(()=>this.#n());return}const l=document.createElement("input");l.type="file",l.accept=QZ.supportedTypesStr;const U=this._uiManager._signal;this.#d=new Promise(d=>{l.addEventListener("change",async()=>{if(!l.files||l.files.length===0)this.remove();else{this._uiManager.enableWaiting(!0);const Z=await this._uiManager.imageManager.getFromFile(l.files[0]);this._reportTelemetry({action:"pdfjs.image.image_selected",data:{alt_text_modal:this._uiManager.useNewAltTextFlow}}),this.#Q(Z)}d()},{signal:U}),l.addEventListener("cancel",()=>{this.remove(),d()},{signal:U})}).finally(()=>this.#n()),l.click()}remove(){this.#U&&(this.#l=null,this._uiManager.imageManager.deleteId(this.#U),this.#W?.remove(),this.#W=null,this.#c?.disconnect(),this.#c=null,this.#R&&(clearTimeout(this.#R),this.#R=null)),super.remove()}rebuild(){if(!this.parent){this.#U&&this.#a();return}super.rebuild(),this.div!==null&&(this.#U&&this.#W===null&&this.#a(),this.isAttachedToDOM||this.parent.add(this))}onceAdded(){this._isDraggable=!0,this.div.focus()}isEmpty(){return!(this.#d||this.#l||this.#Z||this.#t||this.#U)}get isResizable(){return!0}render(){if(this.div)return this.div;let l,U;if(this.width&&(l=this.x,U=this.y),super.render(),this.div.hidden=!0,this.div.setAttribute("role","figure"),this.addAltTextButton(),this.#l?this.#s():this.#a(),this.width&&!this.annotationElementId){const[d,Z]=this.parentDimensions;this.setAt(l*d,U*Z,this.width*d,this.height*Z)}return this.div}#s(){const{div:l}=this;let{width:U,height:d}=this.#l;const[Z,F]=this.pageDimensions,t=.75;if(this.width)U=this.width*Z,d=this.height*F;else if(U>t*Z||d>t*F){const R=Math.min(t*Z/U,t*F/d);U*=R,d*=R}const[Q,V]=this.parentDimensions;this.setDims(U*Q/Z,d*V/F),this._uiManager.enableWaiting(!1);const W=this.#W=document.createElement("canvas");W.setAttribute("role","img"),this.addContainer(W),(!this._uiManager.useNewAltTextWhenAddingImage||!this._uiManager.useNewAltTextFlow||this.annotationElementId)&&(l.hidden=!1),this.#h(U,d),this.#M(),this.#N||(this.parent.addUndoableEditor(this),this.#N=!0),this._reportTelemetry({action:"inserted_image"}),this.#F&&W.setAttribute("aria-label",this.#F)}copyCanvas(l,U,d=!1){l||(l=224);const{width:Z,height:F}=this.#l,t=new od;let Q=this.#l,V=Z,W=F,R=null;if(U){if(Z>U||F>U){const y=Math.min(U/Z,U/F);V=Math.floor(Z*y),W=Math.floor(F*y)}R=document.createElement("canvas");const n=R.width=Math.ceil(V*t.sx),s=R.height=Math.ceil(W*t.sy);this.#V||(Q=this.#b(n,s));const a=R.getContext("2d");a.filter=this._uiManager.hcmFilter;let b="white",i="#cfcfd8";this._uiManager.hcmFilter!=="none"?i="black":window.matchMedia?.("(prefers-color-scheme: dark)").matches&&(b="#8f8f9d",i="#42414d");const h=15,G=h*t.sx,S=h*t.sy,T=new OffscreenCanvas(G*2,S*2),Y=T.getContext("2d");Y.fillStyle=b,Y.fillRect(0,0,G*2,S*2),Y.fillStyle=i,Y.fillRect(0,0,G,S),Y.fillRect(G,S,G,S),a.fillStyle=a.createPattern(T,"repeat"),a.fillRect(0,0,n,s),a.drawImage(Q,0,0,Q.width,Q.height,0,0,n,s)}let N=null;if(d){let n,s;if(t.symmetric&&Q.width<l&&Q.height<l)n=Q.width,s=Q.height;else if(Q=this.#l,Z>l||F>l){const i=Math.min(l/Z,l/F);n=Math.floor(Z*i),s=Math.floor(F*i),this.#V||(Q=this.#b(n,s))}const b=new OffscreenCanvas(n,s).getContext("2d",{willReadFrequently:!0});b.drawImage(Q,0,0,Q.width,Q.height,0,0,n,s),N={width:n,height:s,data:b.getImageData(0,0,n,s).data}}return{canvas:R,width:V,height:W,imageData:N}}#i(l,U){const[d,Z]=this.parentDimensions;this.width=l/d,this.height=U/Z,this._initialOptions?.isCentered?this.center():this.fixAndSetPosition(),this._initialOptions=null,this.#R!==null&&clearTimeout(this.#R);const F=200;this.#R=setTimeout(()=>{this.#R=null,this.#h(l,U)},F)}#b(l,U){const{width:d,height:Z}=this.#l;let F=d,t=Z,Q=this.#l;for(;F>2*l||t>2*U;){const V=F,W=t;F>2*l&&(F=F>=16384?Math.floor(F/2)-1:Math.ceil(F/2)),t>2*U&&(t=t>=16384?Math.floor(t/2)-1:Math.ceil(t/2));const R=new OffscreenCanvas(F,t);R.getContext("2d").drawImage(Q,0,0,V,W,0,0,F,t),Q=R.transferToImageBitmap()}return Q}#h(l,U){const d=new od,Z=Math.ceil(l*d.sx),F=Math.ceil(U*d.sy),t=this.#W;if(!t||t.width===Z&&t.height===F)return;t.width=Z,t.height=F;const Q=this.#V?this.#l:this.#b(Z,F),V=t.getContext("2d");V.filter=this._uiManager.hcmFilter,V.drawImage(Q,0,0,Q.width,Q.height,0,0,Z,F)}getImageForAltText(){return this.#W}#m(l){if(l){if(this.#V){const Z=this._uiManager.imageManager.getSvgUrl(this.#U);if(Z)return Z}const U=document.createElement("canvas");return{width:U.width,height:U.height}=this.#l,U.getContext("2d").drawImage(this.#l,0,0),U.toDataURL()}if(this.#V){const[U,d]=this.pageDimensions,Z=Math.round(this.width*U*SU.PDF_TO_CSS_UNITS),F=Math.round(this.height*d*SU.PDF_TO_CSS_UNITS),t=new OffscreenCanvas(Z,F);return t.getContext("2d").drawImage(this.#l,0,0,this.#l.width,this.#l.height,0,0,Z,F),t.transferToImageBitmap()}return structuredClone(this.#l)}#M(){this._uiManager._signal&&(this.#c=new ResizeObserver(l=>{const U=l[0].contentRect;U.width&&U.height&&this.#i(U.width,U.height)}),this.#c.observe(this.div),this._uiManager._signal.addEventListener("abort",()=>{this.#c?.disconnect(),this.#c=null},{once:!0}))}static async deserialize(l,U,d){let Z=null;if(l instanceof GF){const{data:{rect:a,rotation:b,id:i,structParent:h,popupRef:G},container:S,parent:{page:{pageNumber:T}}}=l,Y=S.querySelector("canvas"),y=d.imageManager.getFromCanvas(S.id,Y);Y.remove();const o=(await U._structTree.getAriaAttributes(`${Hd}${i}`))?.get("aria-label")||"";Z=l={annotationType:v.STAMP,bitmapId:y.id,bitmap:y.bitmap,pageIndex:T-1,rect:a.slice(0),rotation:b,id:i,deleted:!1,accessibilityData:{decorative:!1,altText:o},isSvg:!1,structParent:h,popupRef:G}}const F=await super.deserialize(l,U,d),{rect:t,bitmap:Q,bitmapUrl:V,bitmapId:W,isSvg:R,accessibilityData:N}=l;W&&d.imageManager.isValidId(W)?(F.#U=W,Q&&(F.#l=Q)):F.#Z=V,F.#V=R;const[n,s]=F.pageDimensions;return F.width=(t[2]-t[0])/n,F.height=(t[3]-t[1])/s,F.annotationElementId=l.id||null,N&&(F.altTextData=N),F._initialData=Z,F.#N=!!Z,F}serialize(l=!1,U=null){if(this.isEmpty())return null;if(this.deleted)return this.serializeDeleted();const d={annotationType:v.STAMP,bitmapId:this.#U,pageIndex:this.pageIndex,rect:this.getRect(0,0),rotation:this.rotation,isSvg:this.#V,structTreeParentId:this._structTreeParentId};if(l)return d.bitmapUrl=this.#m(!0),d.accessibilityData=this.serializeAltText(!0),d;const{decorative:Z,altText:F}=this.serializeAltText(!1);if(!Z&&F&&(d.accessibilityData={type:"Figure",alt:F}),this.annotationElementId){const Q=this.#G(d);if(Q.isSame)return null;Q.isSameAltText?delete d.accessibilityData:d.accessibilityData.structParent=this._initialData.structParent??-1}if(d.id=this.annotationElementId,U===null)return d;U.stamps||=new Map;const t=this.#V?(d.rect[2]-d.rect[0])*(d.rect[3]-d.rect[1]):null;if(!U.stamps.has(this.#U))U.stamps.set(this.#U,{area:t,serialized:d}),d.bitmap=this.#m(!1);else if(this.#V){const Q=U.stamps.get(this.#U);t>Q.area&&(Q.area=t,Q.serialized.bitmap.close(),Q.serialized.bitmap=this.#m(!1))}return d}#G(l){const{rect:U,pageIndex:d,accessibilityData:{altText:Z}}=this._initialData,F=l.rect.every((V,W)=>Math.abs(V-U[W])<1),t=l.pageIndex===d,Q=(l.accessibilityData?.alt||"")===Z;return{isSame:F&&t&&Q,isSameAltText:Q}}renderAnnotationElement(l){return l.updateEdited({rect:this.getRect(0,0)}),null}}class dU{#l;#U=!1;#d=null;#Z=null;#t=null;#F=new Map;#W=!1;#c=!1;#R=null;#V=null;#N=null;#Q;static _initialized=!1;static#n=new Map([hl,tZ,QZ,Wl].map(l=>[l._editorType,l]));constructor({uiManager:l,pageIndex:U,div:d,structTreeLayer:Z,accessibilityManager:F,annotationLayer:t,drawLayer:Q,textLayer:V,viewport:W,l10n:R}){const N=[...dU.#n.values()];if(!dU._initialized){dU._initialized=!0;for(const n of N)n.initialize(R,l)}l.registerEditorTypes(N),this.#Q=l,this.pageIndex=U,this.div=d,this.#l=F,this.#d=t,this.viewport=W,this.#V=V,this.drawLayer=Q,this._structTree=Z,this.#Q.addLayer(this)}get isEmpty(){return this.#F.size===0}get isInvisible(){return this.isEmpty&&this.#Q.getMode()===v.NONE}updateToolbar(l){this.#Q.updateToolbar(l)}updateMode(l=this.#Q.getMode()){switch(this.#h(),l){case v.NONE:this.disableTextSelection(),this.togglePointerEvents(!1),this.toggleAnnotationLayerPointerEvents(!0),this.disableClick();return;case v.INK:this.disableTextSelection(),this.togglePointerEvents(!0),this.enableClick();break;case v.HIGHLIGHT:this.enableTextSelection(),this.togglePointerEvents(!1),this.disableClick();break;default:this.disableTextSelection(),this.togglePointerEvents(!0),this.enableClick()}this.toggleAnnotationLayerPointerEvents(!1);const{classList:U}=this.div;for(const d of dU.#n.values())U.toggle(`${d._type}Editing`,l===d._editorType);this.div.hidden=!1}hasTextLayer(l){return l===this.#V?.div}setEditingState(l){this.#Q.setEditingState(l)}addCommands(l){this.#Q.addCommands(l)}cleanUndoStack(l){this.#Q.cleanUndoStack(l)}toggleDrawing(l=!1){this.div.classList.toggle("drawing",!l)}togglePointerEvents(l=!1){this.div.classList.toggle("disabled",!l)}toggleAnnotationLayerPointerEvents(l=!1){this.#d?.div.classList.toggle("disabled",!l)}async enable(){this.div.tabIndex=0,this.togglePointerEvents(!0);const l=new Set;for(const d of this.#F.values())d.enableEditing(),d.show(!0),d.annotationElementId&&(this.#Q.removeChangedExistingAnnotation(d),l.add(d.annotationElementId));if(!this.#d)return;const U=this.#d.getEditableAnnotations();for(const d of U){if(d.hide(),this.#Q.isDeletedAnnotationElement(d.data.id)||l.has(d.data.id))continue;const Z=await this.deserialize(d);Z&&(this.addOrRebuild(Z),Z.enableEditing())}}disable(){this.#c=!0,this.div.tabIndex=-1,this.togglePointerEvents(!1);const l=new Map,U=new Map;for(const Z of this.#F.values())if(Z.disableEditing(),!!Z.annotationElementId){if(Z.serialize()!==null){l.set(Z.annotationElementId,Z);continue}else U.set(Z.annotationElementId,Z);this.getEditableAnnotation(Z.annotationElementId)?.show(),Z.remove()}if(this.#d){const Z=this.#d.getEditableAnnotations();for(const F of Z){const{id:t}=F.data;if(this.#Q.isDeletedAnnotationElement(t))continue;let Q=U.get(t);if(Q){Q.resetAnnotationElement(F),Q.show(!1),F.show();continue}Q=l.get(t),Q&&(this.#Q.addChangedExistingAnnotation(Q),Q.renderAnnotationElement(F)&&Q.show(!1)),F.show()}}this.#h(),this.isEmpty&&(this.div.hidden=!0);const{classList:d}=this.div;for(const Z of dU.#n.values())d.remove(`${Z._type}Editing`);this.disableTextSelection(),this.toggleAnnotationLayerPointerEvents(!0),this.#c=!1}getEditableAnnotation(l){return this.#d?.getEditableAnnotation(l)||null}setActiveEditor(l){this.#Q.getActive()!==l&&this.#Q.setActiveEditor(l)}enableTextSelection(){if(this.div.tabIndex=-1,this.#V?.div&&!this.#N){this.#N=new AbortController;const l=this.#Q.combinedSignal(this.#N);this.#V.div.addEventListener("pointerdown",this.#a.bind(this),{signal:l}),this.#V.div.classList.add("highlighting")}}disableTextSelection(){this.div.tabIndex=0,this.#V?.div&&this.#N&&(this.#N.abort(),this.#N=null,this.#V.div.classList.remove("highlighting"))}#a(l){this.#Q.unselectAll();const{target:U}=l;if(U===this.#V.div||(U.getAttribute("role")==="img"||U.classList.contains("endOfContent"))&&this.#V.div.contains(U)){const{isMac:d}=ol.platform;if(l.button!==0||l.ctrlKey&&d)return;this.#Q.showAllEditors("highlight",!0,!0),this.#V.div.classList.add("free"),this.toggleDrawing(),Wl.startHighlighting(this,this.#Q.direction==="ltr",{target:this.#V.div,x:l.x,y:l.y}),this.#V.div.addEventListener("pointerup",()=>{this.#V.div.classList.remove("free"),this.toggleDrawing(!0)},{once:!0,signal:this.#Q._signal}),l.preventDefault()}}enableClick(){if(this.#Z)return;this.#Z=new AbortController;const l=this.#Q.combinedSignal(this.#Z);this.div.addEventListener("pointerdown",this.pointerdown.bind(this),{signal:l}),this.div.addEventListener("pointerup",this.pointerup.bind(this),{signal:l})}disableClick(){this.#Z?.abort(),this.#Z=null}attach(l){this.#F.set(l.id,l);const{annotationElementId:U}=l;U&&this.#Q.isDeletedAnnotationElement(U)&&this.#Q.removeDeletedAnnotationElement(l)}detach(l){this.#F.delete(l.id),this.#l?.removePointerInTextLayer(l.contentDiv),!this.#c&&l.annotationElementId&&this.#Q.addDeletedAnnotationElement(l)}remove(l){this.detach(l),this.#Q.removeEditor(l),l.div.remove(),l.isAttachedToDOM=!1}changeParent(l){l.parent!==this&&(l.parent&&l.annotationElementId&&(this.#Q.addDeletedAnnotationElement(l.annotationElementId),P.deleteAnnotationElement(l),l.annotationElementId=null),this.attach(l),l.parent?.detach(l),l.setParent(this),l.div&&l.isAttachedToDOM&&(l.div.remove(),this.div.append(l.div)))}add(l){if(!(l.parent===this&&l.isAttachedToDOM)){if(this.changeParent(l),this.#Q.addEditor(l),this.attach(l),!l.isAttachedToDOM){const U=l.render();this.div.append(U),l.isAttachedToDOM=!0}l.fixAndSetPosition(),l.onceAdded(),this.#Q.addToAnnotationStorage(l),l._reportTelemetry(l.telemetryInitialData)}}moveEditorInDOM(l){if(!l.isAttachedToDOM)return;const{activeElement:U}=document;l.div.contains(U)&&!this.#t&&(l._focusEventsAllowed=!1,this.#t=setTimeout(()=>{this.#t=null,l.div.contains(document.activeElement)?l._focusEventsAllowed=!0:(l.div.addEventListener("focusin",()=>{l._focusEventsAllowed=!0},{once:!0,signal:this.#Q._signal}),U.focus())},0)),l._structTreeParentId=this.#l?.moveElementInDOM(this.div,l.div,l.contentDiv,!0)}addOrRebuild(l){l.needsToBeRebuilt()?(l.parent||=this,l.rebuild(),l.show()):this.add(l)}addUndoableEditor(l){const U=()=>l._uiManager.rebuild(l),d=()=>{l.remove()};this.addCommands({cmd:U,undo:d,mustExec:!1})}getNextId(){return this.#Q.getId()}get#s(){return dU.#n.get(this.#Q.getMode())}combinedSignal(l){return this.#Q.combinedSignal(l)}#i(l){const U=this.#s;return U?new U.prototype.constructor(l):null}canCreateNewEmptyEditor(){return this.#s?.canCreateNewEmptyEditor()}pasteEditor(l,U){this.#Q.updateToolbar(l),this.#Q.updateMode(l);const{offsetX:d,offsetY:Z}=this.#b(),F=this.getNextId(),t=this.#i({parent:this,id:F,x:d,y:Z,uiManager:this.#Q,isCentered:!0,...U});t&&this.add(t)}async deserialize(l){return await dU.#n.get(l.annotationType??l.annotationEditorType)?.deserialize(l,this,this.#Q)||null}createAndAddNewEditor(l,U,d={}){const Z=this.getNextId(),F=this.#i({parent:this,id:Z,x:l.offsetX,y:l.offsetY,uiManager:this.#Q,isCentered:U,...d});return F&&this.add(F),F}#b(){const{x:l,y:U,width:d,height:Z}=this.div.getBoundingClientRect(),F=Math.max(0,l),t=Math.max(0,U),Q=Math.min(window.innerWidth,l+d),V=Math.min(window.innerHeight,U+Z),W=(F+Q)/2-l,R=(t+V)/2-U,[N,n]=this.viewport.rotation%180===0?[W,R]:[R,W];return{offsetX:N,offsetY:n}}addNewEditor(){this.createAndAddNewEditor(this.#b(),!0)}setSelected(l){this.#Q.setSelected(l)}toggleSelected(l){this.#Q.toggleSelected(l)}unselect(l){this.#Q.unselect(l)}pointerup(l){const{isMac:U}=ol.platform;if(!(l.button!==0||l.ctrlKey&&U)&&l.target===this.div&&this.#W&&(this.#W=!1,!(this.#s?.isDrawer&&this.#s.supportMultipleDrawings))){if(!this.#U){this.#U=!0;return}if(this.#Q.getMode()===v.STAMP){this.#Q.unselectAll();return}this.createAndAddNewEditor(l,!1)}}pointerdown(l){if(this.#Q.getMode()===v.HIGHLIGHT&&this.enableTextSelection(),this.#W){this.#W=!1;return}const{isMac:U}=ol.platform;if(l.button!==0||l.ctrlKey&&U||l.target!==this.div)return;if(this.#W=!0,this.#s?.isDrawer){this.startDrawingSession(l);return}const d=this.#Q.getActive();this.#U=!d||d.isEmpty()}startDrawingSession(l){if(this.div.focus(),this.#R){this.#s.startDrawing(this,this.#Q,!1,l);return}this.#Q.unselectAll(),this.#R=new AbortController;const U=this.#Q.combinedSignal(this.#R);this.div.addEventListener("blur",({relatedTarget:d})=>{d&&!this.div.contains(d)&&this.commitOrRemove()},{signal:U}),this.#Q.disableUserSelect(!0),this.#s.startDrawing(this,this.#Q,!1,l)}endDrawingSession(l=!1){return this.#R?(this.#R.abort(),this.#R=null,this.#Q.disableUserSelect(!1),this.#s.endDrawing(l)):null}findNewParent(l,U,d){const Z=this.#Q.findParent(U,d);return Z===null||Z===this?!1:(Z.changeParent(l),!0)}commitOrRemove(){return this.#R?(this.endDrawingSession(),!0):!1}onScaleChanging(){this.#R&&this.#s.onScaleChangingWhenDrawing(this)}destroy(){this.commitOrRemove(),this.#Q.getActive()?.parent===this&&(this.#Q.commitOrRemove(),this.#Q.setActiveEditor(null)),this.#t&&(clearTimeout(this.#t),this.#t=null);for(const l of this.#F.values())this.#l?.removePointerInTextLayer(l.contentDiv),l.setParent(null),l.isAttachedToDOM=!1,l.div.remove();this.div=null,this.#F.clear(),this.#Q.removeLayer(this)}#h(){for(const l of this.#F.values())l.isEmpty()&&l.remove()}render({viewport:l}){this.viewport=l,sU(this.div,l);for(const U of this.#Q.getEditors(this.pageIndex))this.add(U),U.rebuild();this.updateMode()}update({viewport:l}){this.#Q.commitOrRemove(),this.#h();const U=this.viewport.rotation,d=l.rotation;if(this.viewport=l,sU(this.div,{rotation:d}),U!==d)for(const Z of this.#F.values())Z.rotate(d)}get pageDimensions(){const{pageWidth:l,pageHeight:U}=this.viewport.rawDims;return[l,U]}get scale(){return this.#Q.viewParameters.realScale}}class Bl{#l=null;#U=0;#d=new Map;#Z=new Map;constructor({pageIndex:l}){this.pageIndex=l}setParent(l){if(!this.#l){this.#l=l;return}if(this.#l!==l){if(this.#d.size>0)for(const U of this.#d.values())U.remove(),l.append(U);this.#l=l}}static get _svgFactory(){return $(this,"_svgFactory",new dZ)}static#t(l,[U,d,Z,F]){const{style:t}=l;t.top=`${100*d}%`,t.left=`${100*U}%`,t.width=`${100*Z}%`,t.height=`${100*F}%`}#F(){const l=Bl._svgFactory.create(1,1,!0);return this.#l.append(l),l.setAttribute("aria-hidden",!0),l}#W(l,U){const d=Bl._svgFactory.createElement("clipPath");l.append(d);const Z=`clip_${U}`;d.setAttribute("id",Z),d.setAttribute("clipPathUnits","objectBoundingBox");const F=Bl._svgFactory.createElement("use");return d.append(F),F.setAttribute("href",`#${U}`),F.classList.add("clip"),Z}#c(l,U){for(const[d,Z]of Object.entries(U))Z===null?l.removeAttribute(d):l.setAttribute(d,Z)}draw(l,U=!1,d=!1){const Z=this.#U++,F=this.#F(),t=Bl._svgFactory.createElement("defs");F.append(t);const Q=Bl._svgFactory.createElement("path");t.append(Q);const V=`path_p${this.pageIndex}_${Z}`;Q.setAttribute("id",V),Q.setAttribute("vector-effect","non-scaling-stroke"),U&&this.#Z.set(Z,Q);const W=d?this.#W(t,V):null,R=Bl._svgFactory.createElement("use");return F.append(R),R.setAttribute("href",`#${V}`),this.updateProperties(F,l),this.#d.set(Z,F),{id:Z,clipPathId:`url(#${W})`}}drawOutline(l,U){const d=this.#U++,Z=this.#F(),F=Bl._svgFactory.createElement("defs");Z.append(F);const t=Bl._svgFactory.createElement("path");F.append(t);const Q=`path_p${this.pageIndex}_${d}`;t.setAttribute("id",Q),t.setAttribute("vector-effect","non-scaling-stroke");let V;if(U){const N=Bl._svgFactory.createElement("mask");F.append(N),V=`mask_p${this.pageIndex}_${d}`,N.setAttribute("id",V),N.setAttribute("maskUnits","objectBoundingBox");const n=Bl._svgFactory.createElement("rect");N.append(n),n.setAttribute("width","1"),n.setAttribute("height","1"),n.setAttribute("fill","white");const s=Bl._svgFactory.createElement("use");N.append(s),s.setAttribute("href",`#${Q}`),s.setAttribute("stroke","none"),s.setAttribute("fill","black"),s.setAttribute("fill-rule","nonzero"),s.classList.add("mask")}const W=Bl._svgFactory.createElement("use");Z.append(W),W.setAttribute("href",`#${Q}`),V&&W.setAttribute("mask",`url(#${V})`);const R=W.cloneNode();return Z.append(R),W.classList.add("mainOutline"),R.classList.add("secondaryOutline"),this.updateProperties(Z,l),this.#d.set(d,Z),d}finalizeDraw(l,U){this.#Z.delete(l),this.updateProperties(l,U)}updateProperties(l,U){if(!U)return;const{root:d,bbox:Z,rootClass:F,path:t}=U,Q=typeof l=="number"?this.#d.get(l):l;if(Q){if(d&&this.#c(Q,d),Z&&Bl.#t(Q,Z),F){const{classList:V}=Q;for(const[W,R]of Object.entries(F))V.toggle(W,R)}if(t){const W=Q.firstChild.firstChild;this.#c(W,t)}}}updateParent(l,U){if(U===this)return;const d=this.#d.get(l);d&&(U.#l.append(d),this.#d.delete(l),U.#d.set(l,d))}remove(l){this.#Z.delete(l),this.#l!==null&&(this.#d.get(l).remove(),this.#d.delete(l))}destroy(){this.#l=null;for(const l of this.#d.values())l.remove();this.#d.clear(),this.#Z.clear()}}globalThis.pdfjsTestingUtils={HighlightOutliner:kd};H.AbortException;H.AnnotationEditorLayer;H.AnnotationEditorParamsType;H.AnnotationEditorType;H.AnnotationEditorUIManager;var ZN=H.AnnotationLayer,uZ=H.AnnotationMode;H.ColorPicker;H.DOMSVGFactory;H.DrawLayer;H.FeatureTest;var TF=H.GlobalWorkerOptions;H.ImageKind;H.InvalidPDFException;H.MissingPDFException;H.OPS;H.OutputScale;H.PDFDataRangeTransport;H.PDFDateString;H.PDFWorker;H.PasswordResponses;H.PermissionFlag;H.PixelsPerInch;H.RenderingCancelledException;var FN=H.TextLayer;H.UnexpectedResponseException;H.Util;H.VerbosityLevel;var tN=H.XfaLayer;H.build;H.createValidAbsoluteUrl;H.fetchData;var pZ=H.getDocument;H.getFilenameFromUrl;H.getPdfFilenameFromUrl;H.getXfaPageViewport;H.isDataScheme;H.isPdfFile;H.noContextMenu;H.normalizeUnicode;H.setLayerDimensions;H.shadow;H.stopEvent;H.version;var QN=Object.defineProperty,cN=(c,l,U)=>l in c?QN(c,l,{enumerable:!0,configurable:!0,writable:!0,value:U}):c[l]=U,VN=(c,l,U)=>(cN(c,l+"",U),U);const PU="internal-link",WN="link",RN="file-attachment",NN="form-text",nN="form-select",sN="form-checkbox",aN="form-radio",bN="form-button",oZ=["click","dblclick","mouseover","input","change"];function pU(c,l,U){const d=[];if(U)for(const Z of U)Z[c]===l&&d.push(Z);return d}function Kl(c,l){return{type:c,data:l}}function JU(c,l){switch(c.type){case"textarea":case"text":return Kl(NN,{fieldName:c.name,value:c.value});case"select-one":case"select-multiple":const U=[];for(const Z of c.options)U.push({value:Z.value,label:Z.label});const d=[];for(const Z of c.selectedOptions)d.push({value:Z.value,label:Z.label});return Kl(nN,{fieldName:c.name,value:d,options:U});case"checkbox":return Kl(sN,{fieldName:c.name,checked:c.checked});case"radio":return Kl(aN,{fieldName:c.name,...l});case"button":return Kl(bN,{fieldName:c.name,...l})}}function iN(c){return Kl(RN,c.file)}async function hN(c,l){if(c.dest){let U;if(typeof c.dest=="string"?U=await l.getDestination(c.dest):U=c.dest,!Array.isArray(U))return console.warn(`Destination "${U}" is not a valid destination (dest="${c.dest}")`),Kl(PU,{referencedPage:null,offset:null});let d=null;U.length===5&&(d={left:c.dest[2],bottom:c.dest[3]});const[Z]=U;if(Number.isInteger(Z))return Kl(PU,{referencedPage:Number(Z)+1,offset:d});if(typeof Z=="object"){const F=await l.getPageIndex(Z);return Kl(PU,{referencedPage:F+1,offset:d})}else return console.warn(`Destination "${Z}" is not a valid destination (dest="${c.dest}")`),Kl(PU,{referencedPage:null,offset:null})}else if(c.url)return Kl(WN,{url:c.url,unsafeUrl:c.unsafeUrl})}function yZ(c){for(const l of c.getElementsByTagName("span")){let U=l.textContent;const d=JSON.parse(l.dataset.l10nArgs??"{}");if(U)for(const Z in d)U=U.replace(`{{${Z}}}`,d[Z]);l.textContent=U}}function mN(c,l,U){var d;let Z=c.target.parentNode;if(Z.tagName==="DIV"&&(Z=Z.firstChild),Z.className==="linkAnnotation"&&c.type==="click"){const F=(d=Z.dataset)==null?void 0:d.annotationId;if(F)return hN(pU("id",F,U)[0],l)}else if(Z.className.includes("popupAnnotation")||Z.className.includes("textAnnotation"))yZ(Z);else if(Z.className.includes("fileAttachmentAnnotation")){yZ(Z);const F=Z.dataset.annotationId;if(F&&c.type==="dblclick")return iN(pU("id",F,U)[0])}else if(Z.className.includes("textWidgetAnnotation")&&c.type==="input"){let F=Z.getElementsByTagName("input")[0];return F||(F=Z.getElementsByTagName("textarea")[0]),JU(F)}else{if(Z.className.includes("choiceWidgetAnnotation")&&c.type==="input")return JU(Z.getElementsByTagName("select")[0]);if(Z.className.includes("buttonWidgetAnnotation checkBox")&&c.type==="change")return JU(Z.getElementsByTagName("input")[0]);if(Z.className.includes("buttonWidgetAnnotation radioButton")&&c.type==="change"){const F=Z.dataset.annotationId;if(F){const t=pU("id",F,U)[0],Q=[];for(const V of pU("fieldName",t.fieldName,U))V.buttonValue&&Q.push(V.buttonValue);return JU(Z.getElementsByTagName("input")[0],{value:t.buttonValue,defaultValue:t.fieldValue,options:Q})}}else if(Z.className.includes("buttonWidgetAnnotation pushButton")&&c.type==="click"){const F=Z.dataset.annotationId;if(F){const t=pU("id",F,U)[0];return t.resetForm?JU({name:t.fieldName,type:"button"},{actions:t.actions,reset:!0}):JU({name:t.fieldName,type:"button"},{actions:t.actions,reset:!1})}}}}class SF{constructor(){VN(this,"externalLinkEnabled"),this.externalLinkEnabled=!0}get pagesCount(){return 0}get page(){return 0}set page(l){}get rotation(){return 0}set rotation(l){}get isInPresentationMode(){return!1}async goToDestination(l){}goToPage(l){}addLinkAttributes(l,U,d=!1){}getDestinationHash(l){return"#"}getAnchorUrl(l){return"#"}setHash(l){}executeNamedAction(l){}executeSetOCGState(l){}cachePageRef(l,U){}}const JN=E({__name:"AnnotationLayer",props:{page:{},viewport:{},document:{},annotationsFilter:{},annotationsMap:{},imageResourcesPath:{},hideForms:{type:Boolean},enableScripting:{type:Boolean},intent:{}},emits:["annotation","annotationLoaded"],setup(c,{emit:l}){const U=c,d=l,Z=D(),F=D();function t(N){const n=mN(N,U.document,F.value);Promise.resolve(n).then(s=>{s&&d("annotation",s)})}async function Q(){var N;return await((N=LU(U.document))==null?void 0:N.getFieldObjects())}async function V(){var N;return await((N=LU(U.document))==null?void 0:N.hasJSActions())}async function W(){const N=U.page;let n=await N?.getAnnotations({intent:U.intent});if(U.annotationsFilter){const s=U.annotationsFilter;n=n.filter(a=>{const b=a.subtype,i=a.fieldType?`${b}.${a.fieldType}`:null;return s?.includes(b)||i!==null&&s?.includes(i)})}return n}async function R(){var N,n;(n=(N=Z.value).replaceChildren)==null||n.call(N);for(const T of oZ)Z.value.removeEventListener(T,t);const s=LU(U.document),a=U.page,b=U.viewport;F.value=await W();const i=new Map([]);for(const T of F.value)if(T.subtype==="Widget"&&T.fieldType==="Btn"&&T.pushButton){const Y=T.rect[2]-T.rect[0],y=T.rect[3]-T.rect[1],o=document.createElement("canvas");o.setAttribute("width",(Y*b.scale).toString()),o.setAttribute("height",(y*b.scale).toString()),i.set(T.id,o)}const h=s.annotationStorage;if(U.annotationsMap)for(const[T,Y]of Object.entries(U.annotationsMap))h.setValue(T,Y);const G={accessibilityManager:void 0,annotationCanvasMap:i,div:Z.value,page:a,viewport:b.clone({dontFlip:!0}),annotationEditorUIManager:null,l10n:null,structTreeLayer:null},S={annotations:F.value,viewport:b.clone({dontFlip:!0}),linkService:new SF,annotationCanvasMap:i,div:Z.value,annotationStorage:h,renderForms:!U.hideForms,page:a,enableScripting:!1,hasJSActions:await V(),fieldObjects:await Q(),downloadManager:null,imageResourcesPath:U.imageResourcesPath};new ZN(G).render(S).then(async()=>{d("annotationLoaded",await W())});for(const T of oZ)Z.value.addEventListener(T,t)}return Yl(()=>U.viewport,()=>{U.page&&U.viewport&&Z.value&&R()}),Pl(()=>{U.page&&U.viewport&&Z.value&&R()}),(N,n)=>(m(),e("div",{ref_key:"layer",ref:Z,class:"annotationLayer",style:{display:"block"}},null,512))}});function MN(c,l,U){const d=[];for(const R of c.items)if(R.hasEOL)if(R.str.endsWith("-")){const N=R.str.lastIndexOf("-");d.push(R.str.substring(0,N))}else d.push(R.str,`
`);else d.push(R.str);const Z=d.join("").replace(/\n/g," "),F=["g"];U.ignoreCase&&F.push("i");let t=l.trim().replace(/[.*+?^${}()|[\]\\]/g,"\\$&");U.completeWords&&(t=`\\b${t}\\b`);const Q=new RegExp(t,F.join("")),V=[];let W;for(;(W=Q.exec(Z))!==null;)V.push([W.index,W[0].length,W[0]]);return V}function GN(c,l){function U(V){return V.hasEOL?V.str.endsWith("-")?-1:1:0}let d=0,Z=0;const F=l.items,t=F.length-1,Q=[];for(let V=0;V<c.length;V++){let W=c[V][0];for(;d!==t&&W>=Z+F[d].str.length;){const n=F[d];Z+=n.str.length+U(n),d++}const R={idx:d,offset:W-Z};for(W+=c[V][1];d!==t&&W>Z+F[d].str.length;){const n=F[d];Z+=n.str.length+U(n),d++}const N={idx:d,offset:W-Z};Q.push({start:R,end:N,str:c[V][2],oindex:c[V][0]})}return Q}function eN(c,l,U){function d(Z,F=-1,t=-1){const Q=l.items[Z],V=[];let W="",R="",N="",n=U[Z];if(!n)return;if(n.nodeType===Node.TEXT_NODE){const b=document.createElement("span");n.before(b),b.append(n),U[Z]=b,n=b}F>=0&&t>=0?W=Q.str.substring(F,t):F<0&&t<0?W=Q.str:F>=0?W=Q.str.substring(F):t>=0&&(W=Q.str.substring(0,t));const s=document.createTextNode(W),a=document.createElement("span");if(a.className="highlight appended",a.append(s),V.push(a),F>0)if(n.childNodes.length===1&&n.childNodes[0].nodeType===Node.TEXT_NODE){R=Q.str.substring(0,F);const b=document.createTextNode(R);V.unshift(b)}else{let b=0;const i=[];for(const h of n.childNodes){const G=h.nodeType===Node.TEXT_NODE?h.nodeValue:h.firstChild.nodeValue;b+=G.length,b<=F?i.push(h):F>=b-G.length&&t<=b&&i.push(document.createTextNode(G.substring(0,F-(b-G.length))))}V.unshift(...i)}if(t>0){N=Q.str.substring(t);const b=document.createTextNode(N);V.push(b)}n.replaceChildren(...V)}for(const Z of c)if(Z.start.idx===Z.end.idx)d(Z.start.idx,Z.start.offset,Z.end.offset);else for(let F=Z.start.idx,t=Z.end.idx;F<=t;F++)F===Z.start.idx?d(F,Z.start.offset):F===Z.end.idx?d(F,-1,Z.end.offset):d(F)}function TN(c,l){const U=c.items.map(d=>d.str);for(let d=0;d<l.length;d++){const Z=l[d];if(Z&&Z.nodeType!==Node.TEXT_NODE){const F=document.createTextNode(U[d]);Z.replaceChildren(F)}}}function SN(c,l,U){const d=[];for(const Z of c){const F=MN(l,Z,U);d.push(...GN(F,l))}return d}const XN=E({__name:"TextLayer",props:{page:{},viewport:{},highlightText:{},highlightOptions:{},highlightPages:{}},emits:["highlight","textLoaded"],setup(c,{emit:l}){const U=c,d=l,Z=D(),F=D();let t=[];function Q(){return Object.assign({},{ignoreCase:!0,completeWords:!1},U.highlightOptions)}async function V(n=!1){const s=U.page,a=await s?.getTextContent();if(a&&(n&&TN(a,t),U.highlightText&&(!U.highlightPages||U.highlightPages.includes(s.pageNumber)))){const b=typeof U.highlightText=="string"?[U.highlightText]:U.highlightText,i=SN(b,a,Q());eN(i,a,t),d("highlight",{matches:i,textContent:a,textDivs:t,page:s?.pageNumber||1})}}function W(){var n,s;(s=(n=Z.value).replaceChildren)==null||s.call(n);const a=U.page,b=U.viewport,i=a?.streamTextContent({includeMarkedContent:!0,disableNormalization:!0}),h=new FN({container:Z.value,textContentSource:i,viewport:b});h.render().then(async()=>{var G;t=h.textDivs;const S=await a?.getTextContent();d("textLoaded",{textDivs:t,textContent:S});const T=document.createElement("div");T.className="endOfContent",(G=Z.value)==null||G.appendChild(T),F.value=T,V()})}function R(){F.value&&F.value.classList.add("active")}function N(){F.value&&F.value.classList.remove("active")}return Yl(()=>U.viewport,n=>{U.page&&U.viewport&&Z.value&&W()}),Yl(()=>[U.highlightText,U.highlightOptions],n=>{V(!0)},{deep:!0}),Pl(()=>{U.page&&U.viewport&&Z.value&&W()}),(n,s)=>(m(),e("div",{ref_key:"layer",ref:Z,class:"textLayer",style:{display:"block"},onMousedown:R,onMouseup:N},null,544))}}),YN=E({__name:"XFALayer",props:{page:{},document:{},viewport:{}},emits:["xfaLoaded"],setup(c,{emit:l}){const U=c,d=l,Z=D();async function F(){var t,Q;(Q=(t=Z.value).replaceChildren)==null||Q.call(t);const V=LU(U.document),W=U.page,R=U.viewport;if(V.isPureXfa){const N=await W.getXfa(),n={div:Z.value,viewport:R.clone({dontFlip:!0}),linkService:new SF,annotationStorage:V?.annotationStorage,xfaHtml:N};tN.render(n),d("xfaLoaded")}}return Yl(()=>U.viewport,t=>{U.page&&U.viewport&&Z.value&&F()}),Pl(()=>{U.page&&U.viewport&&Z.value&&F()}),(t,Q)=>(m(),e("div",{ref_key:"layer",ref:Z,style:{display:"block"}},null,512))}}),BN=J("canvas",{dir:"ltr",style:{display:"block"},role:"main"},null,-1),Vl=E({__name:"VuePDF",props:{pdf:{},page:{default:1},scale:{default:1},rotation:{},fitParent:{type:Boolean},width:{},height:{},textLayer:{type:Boolean},autoDestroy:{type:Boolean,default:!1},imageResourcesPath:{},hideForms:{type:Boolean},intent:{default:"display"},annotationLayer:{type:Boolean},annotationsFilter:{},annotationsMap:{},watermarkText:{},watermarkOptions:{},highlightText:{},highlightOptions:{},highlightPages:{}},emits:["annotation","highlight","loaded","textLoaded","annotationLoaded","xfaLoaded"],setup(c,{expose:l,emit:U}){const d=c,Z=U,F=D(),t=D(),Q=D(!1);let V;const W=g(()=>({viewport:void 0,document:void 0,page:void 0})),R=g(()=>({annotationsMap:d.annotationsMap,annotationsFilter:d.annotationsFilter,imageResourcesPath:d.imageResourcesPath,hideForms:d.hideForms,intent:d.intent})),N=g(()=>({highlightText:d.highlightText,highlightOptions:d.highlightOptions,highlightPages:d.highlightPages}));function n(){return Object.assign({},{columns:4,rows:4,rotation:45,fontSize:18,color:"rgba(211, 210, 211, 0.4)"},d.watermarkOptions)}function s(u){if(!(typeof u=="number"&&u%90===0))return 0;const p=u/90;return p>4?s(u-360):p<0?s(u+360):u}function a(u){let p=d.scale;if(d.fitParent){const z=F.value.parentNode.clientWidth,j=u.getViewport({scale:1}).width;p=z/j}else if(d.width){const z=u.getViewport({scale:1}).width;p=d.width/z}else if(d.height){const z=u.getViewport({scale:1}).height;p=d.height/z}return p}function b(u=1){if(!d.watermarkText)return;const p=i();if(!p)return;const z=p.getContext("2d");if(!z)return;const j=n(),ll=d.watermarkText,Fl=j.columns,_=j.rows,nl=Fl*_,q=j.rotation,C=j.fontSize*u;z.font=`${C}px Trebuchet MS`,z.fillStyle=j.color;for(let O=0;O<nl;O++){const yl=O%Fl*(p.width/Fl)+p.width/(Fl*2),Il=Math.floor(O/Fl)*(p.height/_)+p.height/(_*2),Ll=z.measureText(ll).width;z.save(),z.translate(yl,Il),z.rotate(-q*(Math.PI/180)),z.fillText(ll,-Ll/2,C/2),z.restore()}}function i(){var u;let p=null;return(u=F.value)==null||u.childNodes.forEach(z=>{z.tagName==="CANVAS"&&(p=z)}),p}function h(u){var p;let z;const j=i();j&&j?.getAttribute("role")==="main"?z=j:(z=document.createElement("canvas"),z.style.display="block",z.setAttribute("dir","ltr"));const ll=window.devicePixelRatio||1;return z.width=Math.floor(u.width*ll),z.height=Math.floor(u.height*ll),z.style.width=`${Math.floor(u.width)}px`,z.style.height=`${Math.floor(u.height)}px`,(p=F.value)==null||p.style.setProperty("--scale-factor",`${u.scale}`),t.value.style.width=`${Math.floor(u.width)}px`,t.value.style.height=`${Math.floor(u.height)}px`,t.value.style.top="0",t.value.style.left="0",Q.value=!0,z}function G(){V&&V.cancel()}function S(u){var p;(p=LU(W.value.document))==null||p.getPage(u).then(z=>{var j;G();const ll=z.getViewport(),Fl={scale:a(z),rotation:s((d.rotation||0)+ll.rotation)},_=z.getViewport(Fl),nl=i(),q=h(_),C=window.devicePixelRatio||1,O=C!==1?[C,0,0,C,0,0]:void 0,yl={canvasContext:q.getContext("2d"),viewport:_,annotationMode:d.hideForms?uZ.ENABLE:uZ.ENABLE_FORMS,transform:O,intent:d.intent};q?.getAttribute("role")!=="main"?nl&&((j=F.value)==null||j.replaceChild(q,nl)):q.removeAttribute("role"),W.value.page=z,W.value.viewport=_,V=z.render(yl),V.promise.then(()=>{Q.value=!1,b(_.scale),Z("loaded",W.value.viewport)}).catch(()=>{})})}function T(u){u.promise.then(async p=>{W.value.document=p,S(d.page)})}Yl(()=>d.pdf,u=>{u!==void 0&&T(u)}),Yl(()=>[d.scale,d.width,d.height,d.rotation,d.page,d.hideForms,d.intent],()=>{S(d.page)}),Pl(()=>{d.pdf!==void 0&&T(d.pdf)}),$U(()=>{var u;d.autoDestroy&&((u=d.pdf)==null||u.destroy())});function Y(){var u;(u=d.pdf)==null||u.destroy()}function y(){S(d.page)}function o(){G()}return l({reload:y,cancel:o,destroy:Y}),(u,p)=>(m(),e("div",{ref_key:"container",ref:F,style:{position:"relative",display:"block"}},[BN,u.annotationLayer?(m(),x(JN,Hl({key:0},{...W.value,...R.value},{onAnnotation:p[0]||(p[0]=z=>Z("annotation",z)),onAnnotationLoaded:p[1]||(p[1]=z=>Z("annotationLoaded",z))}),null,16)):k("",!0),u.textLayer?(m(),x(XN,Hl({key:1},{...W.value,...N.value},{onHighlight:p[2]||(p[2]=z=>Z("highlight",z)),onTextLoaded:p[3]||(p[3]=z=>Z("textLoaded",z))}),null,16)):k("",!0),L(YN,Hl({...W.value},{onXfaLoaded:p[4]||(p[4]=z=>Z("xfaLoaded"))}),null,16),Ol(J("div",{ref_key:"loadingLayer",ref:t,style:{position:"absolute"}},[X(u.$slots,"default")],512),[[jF,Q.value]])],512))}}),uN="data:application/javascript;base64,";function pN(c){return!!(typeof c=="object"&&c&&"gen"in c&&"num"in c)}async function oN(c,l){return typeof l=="string"?c.getDestination(l):l}async function yN(c,l){return l&&pN(l[0])?l[0]:null}const LN=c=>c.type==="XYZ"&&c.spec.length===3,zN=c=>c.type==="Fit"&&c.spec.length===0,kN=c=>c.type==="FitH"&&c.spec.length===1,DN=c=>c.type==="FitV"&&c.spec.length===1,IN=c=>c.type==="FitR"&&c.spec.length===4,EN=c=>c.type==="FitB"&&c.spec.length===0,CN=c=>c.type==="FitBH"&&c.spec.length===1,wN=c=>c.type==="FitBV"&&c.spec.length===1;function xN(c,l){const U={type:c,spec:l};return LN(U)||zN(U)||kN(U)||DN(U)||IN(U)||EN(U)||CN(U)||wN(U)?U:(console.warn("no location type found for ",c,l),null)}const jN=c=>c&&c.every(l=>!isNaN(l));async function ON(){return new Promise((c,l)=>{const U=document.createElement("iframe");U.width="0px",U.height="0px",U.style.cssText="position: absolute; top:0; left:0",U.style.display="none",U.onload=function(){c(U)},document.body.appendChild(U)})}function rN(c,l,U){const d=c.document.createElement("style");d.textContent=`
    @page {
      margin: 0;
      size: ${l}pt ${U}pt;
    }
    body {
      margin: 0;
      width: 100%;
    }
    canvas {
      width: 100%;
      page-break-after: always;
      page-break-before: avoid;
      page-break-inside: avoid;
    }
  `,c.document.head.appendChild(d)}function gN(c){TF.workerSrc=c}function Nl(c,l={onProgress:void 0,onPassword:void 0,onError:void 0,password:""}){var U;(U=TF)!=null&&U.workerSrc||gN(uN);const d=GU(),Z=GU(),F=GU(0),t=GU({});function Q(N){Z.value&&Z.value.destroy();const n=pZ(N);if(l.onProgress&&(n.onProgress=l.onProgress),l.onPassword)n.onPassword=l.onPassword;else if(l.password){const s=(a,b)=>{a(l.password??"")};n.onPassword=s}n.promise.then(async s=>{Z.value=s,d.value=s.loadingTask,F.value=s.numPages;const a=await s.getMetadata(),b=await s.getAttachments(),i=await s.getJSActions(),h=await s.getOutline();t.value={metadata:a,attachments:b,javascript:i,outline:h}},s=>{typeof l.onError=="function"&&l.onError(s)})}async function V(N){var n;const s=await((n=d.value)==null?void 0:n.promise);if(!s)return null;const a=await oN(s,N),b=await yN(s,a);if(!b||!a)return null;const i=await s.getPageIndex(b),h=a[1].name,G=a.slice(2),S=jN(G)?xN(h,G):null;return{pageIndex:i,location:S??{type:"Fit",spec:[]}}}async function W(N="filename"){var n;if(!Z.value)throw new Error("Current PDFDocumentProxy have not loaded yet");const s=await((n=Z.value)==null?void 0:n.saveDocument()),a=new Blob([s],{type:"application/pdf"}),b=URL.createObjectURL(a),i=document.createElement("a");document.body.appendChild(i),i.href=b,i.download=N,i.style.display="none",i.click(),setTimeout(()=>{URL.revokeObjectURL(b),document.body.removeChild(i)},10)}async function R(N=150,n="filename"){var s,a;if(!Z.value)throw new Error("Current PDFDocumentProxy have not loaded yet");const b=await((s=Z.value)==null?void 0:s.saveDocument()),i=await pZ(b.buffer).promise,h=N/72,G=96/72,S=await ON(),T=S.contentWindow;T.document.title=n;const Y=[...Array(i.numPages).keys()].map(y=>y+1);for(const y of Y){const o=await i.getPage(y),u=o.getViewport({scale:1});y===1&&rN(T,u.width*h/G,u.height*h/G);const p=document.createElement("canvas");p.width=u.width*h,p.height=u.height*h;const z=p.cloneNode();T?.document.body.appendChild(z),await o?.render({canvasContext:p.getContext("2d"),intent:"print",transform:[h,0,0,h,0,0],viewport:u}).promise,(a=z.getContext("2d"))==null||a.drawImage(p,0,0)}T?.focus(),T?.print(),document.body.removeChild(S)}return xF(c)?(c.value&&Q(c.value),Yl(c,()=>{c.value&&Q(c.value)})):c&&Q(c),{pdf:d,pages:F,info:t,print:R,download:W,getPDFDestination:V}}const KN={__name:"AllPages",setup(c){const{pdf:l,pages:U}=Nl("https://raw.githubusercontent.com/mozilla/pdf.js/ba2edeae/web/compressed.tracemonkey-pldi-09.pdf");return(d,Z)=>(m(!0),e(dl,null,Jl(M(U),F=>(m(),e("div",{key:F,class:"vue-pdf-container"},[L(M(Vl),{pdf:M(l),page:F},null,8,["pdf","page"])]))),128))}},HN={class:"language-json","data-ext":"json"},vN={class:"language-json"},PN=J("br",null,null,-1),fN={class:"vue-pdf-container"},AN={__name:"AnnoAttachment",setup(c){const{pdf:l}=Nl(Xl("/41.pdf")),U=D({});function d(Z){console.log(Z),U.value=Z}return(Z,F)=>(m(),e(dl,null,[J("div",HN,[J("pre",vN,[J("code",null,[wl('// "content" is a uint8Array'),PN,wl(K(U.value),1)])])]),J("div",fN,[L(M(Vl),{pdf:M(l),"annotation-layer":"","image-resources-path":"https://unpkg.com/pdfjs-dist@latest/web/images/",onAnnotation:d},null,8,["pdf"])])],64))}},_N={class:"language-json","data-ext":"json"},qN={class:"language-json"},$N={class:"vue-pdf-container"},ln={__name:"AnnoForms",setup(c){const{pdf:l}=Nl(Xl("/14.pdf")),U=D({});function d(Z){console.log(Z),U.value=Z}return(Z,F)=>(m(),e(dl,null,[J("div",_N,[J("pre",qN,[J("code",null,K(U.value),1)])]),J("div",$N,[L(M(Vl),{pdf:M(l),"annotation-layer":"",onAnnotation:d},null,8,["pdf"])])],64))}},Un={class:"language-json","data-ext":"json"},dn={class:"language-json"},Zn={class:"vue-pdf-container"},Fn={__name:"AnnoLinks",setup(c){const{pdf:l}=Nl(Xl("/45.pdf")),U=D({});function d(Z){console.log(Z),U.value=Z}return(Z,F)=>(m(),e(dl,null,[J("div",Un,[J("pre",dn,[J("code",null,K(U.value),1)])]),J("div",Zn,[L(M(Vl),{pdf:M(l),"annotation-layer":"",onAnnotation:d},null,8,["pdf"]),L(M(Vl),{pdf:M(l),page:6,"annotation-layer":"",onAnnotation:d},null,8,["pdf"])])],64))}},tn={class:"vue-pdf-container"},Qn=["value"],cn={__name:"AnnotationFilter",setup(c){const{pdf:l}=Nl(Xl("/14.pdf")),U=D(["Widget","Widget.Tx","Widget.Btn","Widget.Ch"]),d=D(["Widget"]),Z=D(null);function F(){Z.value.reload()}return(t,Q)=>(m(),e("div",tn,[J("div",null,[Ol(J("select",{"onUpdate:modelValue":Q[0]||(Q[0]=V=>d.value[0]=V),class:"select-example",onChange:F},[(m(!0),e(dl,null,Jl(U.value,V=>(m(),e("option",{key:V,value:V},K(V),9,Qn))),128))],544),[[OF,d.value[0]]])]),L(M(Vl),{ref_key:"vuePDFRef",ref:Z,pdf:M(l),"annotation-layer":"","annotations-filter":d.value},null,8,["pdf","annotations-filter"])]))}},Vn={class:"vue-pdf-container"},Wn={__name:"AnnotationLayer",setup(c){const l=D(!1),{pdf:U}=Nl(Xl("/14.pdf"));return(d,Z)=>(m(),e("div",Vn,[J("div",null,[J("button",{class:"button-example",onClick:Z[0]||(Z[0]=F=>l.value=!l.value)},[wl(" Change to "),J("strong",null,K(!l.value),1)])]),L(M(Vl),{pdf:M(U),"annotation-layer":l.value},null,8,["pdf","annotation-layer"])]))}},Rn={class:"vue-pdf-container"},Nn={__name:"FitParent",setup(c){const{pdf:l}=Nl("https://raw.githubusercontent.com/mozilla/pdf.js/ba2edeae/web/compressed.tracemonkey-pldi-09.pdf"),U=D(null),d=D(300);function Z(F){d.value=d.value+F,U.value.reload()}return(F,t)=>(m(),e("div",Rn,[J("div",null,[J("button",{class:"button-example",onClick:t[0]||(t[0]=Q=>Z(-50))}," Remove 50px "),J("span",null,"Parent width: "+K(d.value)+"px",1),J("button",{class:"button-example",onClick:t[1]||(t[1]=Q=>Z(50))}," Add 50px ")]),J("div",{style:Cd(`width: ${d.value}px`)},[L(M(Vl),{ref_key:"vuePDFRef",ref:U,pdf:M(l),"fit-parent":""},null,8,["pdf"])],4)]))}},nn={class:"language-json","data-ext":"json"},sn={class:"language-json"},an={class:"vue-pdf-container"},bn={__name:"Loaded",setup(c){const{pdf:l}=Nl("https://raw.githubusercontent.com/mozilla/pdf.js/ba2edeae/web/compressed.tracemonkey-pldi-09.pdf"),U=D({});function d(Z){console.log(Z),U.value=Z}return(Z,F)=>(m(),e(dl,null,[J("div",nn,[J("pre",sn,[J("code",null,K(U.value),1)])]),J("div",an,[L(M(Vl),{pdf:M(l),onLoaded:d},null,8,["pdf"])])],64))}},hn={class:"vue-pdf-container"},mn={__name:"MultiplePDF",setup(c){const l=[Xl("/14.pdf"),Xl("/36.pdf"),Xl("/41.pdf"),Xl("/45.pdf"),"https://raw.githubusercontent.com/mozilla/pdf.js/ba2edeae/web/compressed.tracemonkey-pldi-09.pdf"],U=D(0),d=D(l[0]),{pdf:Z}=Nl(d);function F(){U.value+=1,U.value>=l.length&&(U.value=0),d.value=l[U.value]}return(t,Q)=>(m(),e("div",hn,[J("div",null,[J("button",{class:"button-example",onClick:F}," Next PDF (Current index: "+K(U.value)+") ",1)]),L(M(Vl),{pdf:M(Z)},null,8,["pdf"])]))}},Jn={class:"vue-pdf-container"},Mn={style:{width:"500px"}},Gn={__name:"OnePage",setup(c){const l=D(1),{pdf:U,pages:d}=Nl("https://raw.githubusercontent.com/mozilla/pdf.js/ba2edeae/web/compressed.tracemonkey-pldi-09.pdf");return(Z,F)=>(m(),e("div",Jn,[J("div",null,[J("button",{class:"button-example",onClick:F[0]||(F[0]=t=>l.value=l.value>1?l.value-1:l.value)}," PREV "),J("span",null,K(l.value)+"/"+K(M(d)),1),J("button",{class:"button-example",onClick:F[1]||(F[1]=t=>l.value=l.value<M(d)?l.value+1:l.value)}," NEXT ")]),J("div",Mn,[L(M(Vl),{pdf:M(U),page:l.value,"fit-parent":""},null,8,["pdf","page"])])]))}},en={class:"vue-pdf-container"},Tn={__name:"Rotation",setup(c){const l=D(0),{pdf:U}=Nl("https://raw.githubusercontent.com/mozilla/pdf.js/ba2edeae/web/compressed.tracemonkey-pldi-09.pdf");return(d,Z)=>(m(),e("div",en,[J("div",null,[J("button",{class:"button-example",onClick:Z[0]||(Z[0]=F=>l.value=l.value-90)}," - 90° "),J("span",null,K(l.value)+"°",1),J("button",{class:"button-example",onClick:Z[1]||(Z[1]=F=>l.value=l.value+90)}," + 90° ")]),L(M(Vl),{pdf:M(U),rotation:l.value},null,8,["pdf","rotation"])]))}},Sn={class:"vue-pdf-container"},Xn={__name:"Scale",setup(c){const l=D(1),{pdf:U}=Nl("https://raw.githubusercontent.com/mozilla/pdf.js/ba2edeae/web/compressed.tracemonkey-pldi-09.pdf");return(d,Z)=>(m(),e("div",Sn,[J("div",null,[J("button",{class:"button-example",onClick:Z[0]||(Z[0]=F=>l.value=l.value>.25?l.value-.25:l.value)}," - "),J("span",null,K(l.value*100)+"%",1),J("button",{class:"button-example",onClick:Z[1]||(Z[1]=F=>l.value=l.value<2?l.value+.25:l.value)}," + ")]),L(M(Vl),{pdf:M(U),scale:l.value},null,8,["pdf","scale"])]))}},Yn={class:"vue-pdf-container"},Bn={__name:"TextLayer",setup(c){const l=D(!1),{pdf:U}=Nl("https://raw.githubusercontent.com/mozilla/pdf.js/ba2edeae/web/compressed.tracemonkey-pldi-09.pdf");return(d,Z)=>(m(),e("div",Yn,[J("div",null,[J("button",{class:"button-example",onClick:Z[0]||(Z[0]=F=>l.value=!l.value)},[wl(" Change to "),J("strong",null,K(!l.value),1)])]),L(M(Vl),{pdf:M(U),"text-layer":l.value},null,8,["pdf","text-layer"])]))}},un={class:"vue-pdf-container"},pn={__name:"XFALayer",setup(c){const{pdf:l}=Nl({url:Xl("/xfa.pdf"),enableXfa:!0});return(U,d)=>(m(),e("div",un,[L(M(Vl),{pdf:M(l)},null,8,["pdf"])]))}},on={class:"vue-pdf-container"},yn=J("td",{colspan:"2"}," Text ",-1),Ln={colspan:"2"},zn=J("td",{colspan:"2"}," Color ",-1),kn={colspan:"2"},Dn=J("td",null,"Columns",-1),In=J("td",null,"Rows",-1),En=J("td",null,"Rotation",-1),Cn=J("td",null,"FontSize",-1),wn={__name:"Watermark",setup(c){const{pdf:l}=Nl("https://raw.githubusercontent.com/mozilla/pdf.js/ba2edeae/web/compressed.tracemonkey-pldi-09.pdf"),U=D(null),d=D("sample"),Z=D({columns:4,rows:4,color:"rgba(211, 210, 211, 0.4)",rotation:45,fontSize:18});function F(){U.value.reload()}return(t,Q)=>(m(),e("div",on,[J("table",null,[J("tr",null,[yn,J("td",Ln,[Ol(J("input",{"onUpdate:modelValue":Q[0]||(Q[0]=V=>d.value=V),class:"input-example"},null,512),[[tU,d.value]])])]),J("tr",null,[zn,J("td",kn,[Ol(J("input",{"onUpdate:modelValue":Q[1]||(Q[1]=V=>Z.value.color=V),class:"input-example"},null,512),[[tU,Z.value.color]])])]),J("tr",null,[Dn,J("td",null,[Ol(J("input",{"onUpdate:modelValue":Q[2]||(Q[2]=V=>Z.value.columns=V),class:"input-example"},null,512),[[tU,Z.value.columns]])]),In,J("td",null,[Ol(J("input",{"onUpdate:modelValue":Q[3]||(Q[3]=V=>Z.value.rows=V),class:"input-example"},null,512),[[tU,Z.value.rows]])])]),J("tr",null,[En,J("td",null,[Ol(J("input",{"onUpdate:modelValue":Q[4]||(Q[4]=V=>Z.value.rotation=V),class:"input-example"},null,512),[[tU,Z.value.rotation]])]),Cn,J("td",null,[Ol(J("input",{"onUpdate:modelValue":Q[5]||(Q[5]=V=>Z.value.fontSize=V),class:"input-example"},null,512),[[tU,Z.value.fontSize]])])])]),J("div",null,[J("button",{class:"button-example",onClick:F}," Reload ")]),L(M(Vl),{ref_key:"pdfRef",ref:U,pdf:M(l),"watermark-text":d.value,"watermark-options":Z.value},null,8,["pdf","watermark-text","watermark-options"])]))}},xn={name:"ChaptersList",props:{items:Array},methods:{onChapterClick:function(c){this.$emit("chapterClick",c)}}},jn=["onClick"],On={key:0};function rn(c,l,U,d,Z,F){const t=VU("ChaptersList",!0);return m(),e("ol",null,[(m(!0),e(dl,null,Jl(U.items,Q=>(m(),e("li",null,[J("a",{href:"#",onClick:IZ(V=>c.$emit("chapterClick",Q.destination),["prevent"])},K(Q.title),9,jn),Q.items.length?(m(),e("div",On,[L(t,{items:Q.items,onChapterClick:F.onChapterClick},null,8,["items","onChapterClick"])])):k("",!0)]))),256))])}const gn=r(xn,[["render",rn]]),Kn={id:"toc_wrapper"},Hn={class:"toc"},vn={class:"language-json","data-ext":"json"},Pn={class:"language-json"},fn={class:"vue-pdf-container"},An={__name:"TOC",setup(c){const{pdf:l,info:U,getPDFDestination:d}=Nl(Xl("/45.pdf")),Z=D({}),F=D([]);EU(()=>{U.value.outline!==void 0&&(F.value=U.value.outline.map(function Q(V){return{title:V.title,destination:d(V.dest),items:V.items.map(W=>Q(W))}}))}),rF(U);function t(Q){Q.then(V=>{console.log(V),Z.value=V})}return(Q,V)=>(m(),e("div",Kn,[J("div",Hn,[L(gn,{items:F.value,onChapterClick:t},null,8,["items"])]),J("div",null,[J("div",vn,[J("pre",Pn,[J("code",null,K(Z.value),1)])]),J("div",fn,[L(M(Vl),{pdf:M(l),scale:.75},null,8,["pdf"])])])]))}},_n={class:"vue-pdf-container"},qn=J("td",{colspan:"2"}," Text ",-1),$n={colspan:"2"},ls=J("td",null,"Complete words",-1),Us=J("td",null,"Ignore case",-1),ds={__name:"HighlightText",setup(c){const{pdf:l}=Nl("https://raw.githubusercontent.com/mozilla/pdf.js/ba2edeae/web/compressed.tracemonkey-pldi-09.pdf"),U=D("javascript"),d=D({completeWords:!1,ignoreCase:!0});return(Z,F)=>(m(),e("div",_n,[J("table",null,[J("tr",null,[qn,J("td",$n,[Ol(J("input",{"onUpdate:modelValue":F[0]||(F[0]=t=>U.value=t),class:"input-example"},null,512),[[tU,U.value]])])]),J("tr",null,[ls,J("td",null,[Ol(J("input",{"onUpdate:modelValue":F[1]||(F[1]=t=>d.value.completeWords=t),type:"checkbox",class:"checkbox-example"},null,512),[[VZ,d.value.completeWords]])]),Us,J("td",null,[Ol(J("input",{"onUpdate:modelValue":F[2]||(F[2]=t=>d.value.ignoreCase=t),type:"checkbox",class:"checkbox-example"},null,512),[[VZ,d.value.ignoreCase]])])])]),L(M(Vl),{scale:1.1,pdf:M(l),"text-layer":"","highlight-text":U.value,"highlight-options":d.value},null,8,["pdf","highlight-text","highlight-options"])]))}},Zs={class:"vue-pdf-container"},Fs=J("td",{colspan:"2"}," Text ",-1),ts={colspan:"2"},Qs={__name:"TextHighlight",setup(c){const{pdf:l}=Nl("https://raw.githubusercontent.com/mozilla/pdf.js/ba2edeae/web/compressed.tracemonkey-pldi-09.pdf"),U=D("Trace-based"),d=D({completeWords:!1,ignoreCase:!0}),Z=D({});function F(t){console.log(t),Z.value=t}return(t,Q)=>(m(),e("div",Zs,[J("table",null,[J("tr",null,[Fs,J("td",ts,[Ol(J("input",{"onUpdate:modelValue":Q[0]||(Q[0]=V=>U.value=V),class:"input-example"},null,512),[[tU,U.value]])])])]),L(M(Vl),{scale:1.1,pdf:M(l),"text-layer":"","highlight-text":U.value,"highlight-options":d.value,onHighlight:F},null,8,["pdf","highlight-text","highlight-options"])]))}},cs={class:"vue-pdf-container"},Vs={__name:"TextLoaded",setup(c){const{pdf:l}=Nl("https://raw.githubusercontent.com/mozilla/pdf.js/ba2edeae/web/compressed.tracemonkey-pldi-09.pdf");function U(d){console.log(d)}return(d,Z)=>(m(),e("div",cs,[L(M(Vl),{pdf:M(l),"text-layer":"",onTextLoaded:U},null,8,["pdf"])]))}},Ws={class:"vue-pdf-container"},Rs={__name:"AnnotationLoaded",setup(c){const{pdf:l}=Nl(Xl("/14.pdf"));function U(d){console.log(d)}return(d,Z)=>(m(),e("div",Ws,[L(M(Vl),{pdf:M(l),"annotation-layer":"",onAnnotationLoaded:U},null,8,["pdf"])]))}},Ns={class:"language-json","data-ext":"json"},ns={class:"language-json"},ss={class:"vue-pdf-container"},as={__name:"XFALoaded",setup(c){const{pdf:l}=Nl({url:Xl("/xfa.pdf"),enableXfa:!0}),U=D("Rendering pending");function d(){U.value="XFA loaded"}return(Z,F)=>(m(),e(dl,null,[J("div",Ns,[J("pre",ns,[J("code",null,K(U.value),1)])]),J("div",ss,[L(M(Vl),{pdf:M(l),onXfaLoaded:d},null,8,["pdf"])])],64))}},is={extends:ZW,enhanceApp({app:c}){c.component("OnePage",Gn),c.component("Watermark",wn),c.component("AllPages",KN),c.component("Scale",Xn),c.component("Rotation",Tn),c.component("TextLayer",Bn),c.component("AnnotationLayer",Wn),c.component("XFALayer",pn),c.component("FitParent",Nn),c.component("AnnotationFilter",cn),c.component("MultiplePDF",mn),c.component("AnnoAttachment",AN),c.component("AnnoForms",ln),c.component("AnnoLinks",Fn),c.component("Loaded",bn),c.component("TOC",An),c.component("HighlightText",ds),c.component("TextHighlight",Qs),c.component("TextLoaded",Vs),c.component("AnnotationLoaded",Rs),c.component("XFALoaded",as)}};export{is as R,uc as c,A as u};
